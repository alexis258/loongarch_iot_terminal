///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        28/Jun/2023  22:35:04 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\Source\cJSON.c         /
//    Command line       =  -f C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\T /
//                          ools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ            /
//                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3        /
//                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f         /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tool /
//                          s\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0  /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\濟捇\Desktop\stm3 /
//                          2\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp /
//                          \Source\cJSON.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D   /
//                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D          /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\L /
//                          ist\ -lA C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1 /
//                          a\Projects\zstack\Samples\SampleApp\CC2530DB\EndD /
//                          eviceEB\List\ --diag_suppress Pe001,Pa010 -o      /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\O /
//                          bj\ -e --no_code_motion --debug --core=plain      /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\ -I           /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\Source\    /
//                          -I C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Z /
//                          Main\TI2530DB\ -I C:\Users\濟捇\Desktop\stm32\ZSt /
//                          ack-2.5.1a\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\..\..\..\..\..\Components\hal\include\ -I    /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\hal\target\CC2530EB\ -I              /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\mac\include\ -I                      /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\mac\high_level\ -I                   /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\mac\low_level\srf04\ -I              /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\mac\low_level\srf04\single_chip\ -I  /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\mt\ -I C:\Users\濟捇\Desktop\stm32\Z /
//                          Stack-2.5.1a\Projects\zstack\Samples\SampleApp\CC /
//                          2530DB\..\..\..\..\..\Components\osal\include\    /
//                          -I C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\Components\services\saddr\ -I                /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\services\sdata\ -I                   /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\af\ -I                         /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\nwk\ -I                        /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\sapi\ -I                       /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\sec\ -I                        /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\sys\ -I                        /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\zdo\ -I                        /
//                          C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. /
//                          .\Components\zmac\ -I C:\Users\濟捇\Desktop\stm32 /
//                          \ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\ /
//                          CC2530DB\..\..\..\..\..\Components\zmac\f8w\ -Ohz /
//    List file          =  C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\L /
//                          ist\cJSON.s51                                     /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME cJSON

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_DIV
        EXTERN ?FLT_EQ
        EXTERN ?FLT_GE
        EXTERN ?FLT_LT
        EXTERN ?FLT_MUL
        EXTERN ?FLT_SUB
        EXTERN ?FLT_TO_L
        EXTERN ?L_ADD_X
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_TO_FLT
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?UC_SWITCH_SPARSE
        EXTERN ?UL_GE_X
        EXTERN ?UL_SHR
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        FUNCTION ??add_item_to_array?relay,0203H
        FUNCTION ??add_item_to_object?relay,0203H
        FUNCTION ??buffer_skip_whitespace?relay,0203H
        PUBLIC ??cJSON_AddArrayToObject?relay
        FUNCTION ??cJSON_AddArrayToObject?relay,0203H
        PUBLIC ??cJSON_AddBoolToObject?relay
        FUNCTION ??cJSON_AddBoolToObject?relay,0203H
        PUBLIC ??cJSON_AddFalseToObject?relay
        FUNCTION ??cJSON_AddFalseToObject?relay,0203H
        PUBLIC ??cJSON_AddItemReferenceToArray?relay
        FUNCTION ??cJSON_AddItemReferenceToArray?relay,0203H
        PUBLIC ??cJSON_AddItemReferenceToObject?relay
        FUNCTION ??cJSON_AddItemReferenceToObject?relay,0203H
        PUBLIC ??cJSON_AddItemToArray?relay
        FUNCTION ??cJSON_AddItemToArray?relay,0203H
        PUBLIC ??cJSON_AddItemToObject?relay
        FUNCTION ??cJSON_AddItemToObject?relay,0203H
        PUBLIC ??cJSON_AddItemToObjectCS?relay
        FUNCTION ??cJSON_AddItemToObjectCS?relay,0203H
        PUBLIC ??cJSON_AddNullToObject?relay
        FUNCTION ??cJSON_AddNullToObject?relay,0203H
        PUBLIC ??cJSON_AddNumberToObject?relay
        FUNCTION ??cJSON_AddNumberToObject?relay,0203H
        PUBLIC ??cJSON_AddObjectToObject?relay
        FUNCTION ??cJSON_AddObjectToObject?relay,0203H
        PUBLIC ??cJSON_AddRawToObject?relay
        FUNCTION ??cJSON_AddRawToObject?relay,0203H
        PUBLIC ??cJSON_AddStringToObject?relay
        FUNCTION ??cJSON_AddStringToObject?relay,0203H
        PUBLIC ??cJSON_AddTrueToObject?relay
        FUNCTION ??cJSON_AddTrueToObject?relay,0203H
        PUBLIC ??cJSON_Compare?relay
        FUNCTION ??cJSON_Compare?relay,0203H
        PUBLIC ??cJSON_CreateArray?relay
        FUNCTION ??cJSON_CreateArray?relay,0203H
        PUBLIC ??cJSON_CreateArrayReference?relay
        FUNCTION ??cJSON_CreateArrayReference?relay,0203H
        PUBLIC ??cJSON_CreateBool?relay
        FUNCTION ??cJSON_CreateBool?relay,0203H
        PUBLIC ??cJSON_CreateDoubleArray?relay
        FUNCTION ??cJSON_CreateDoubleArray?relay,0203H
        PUBLIC ??cJSON_CreateFalse?relay
        FUNCTION ??cJSON_CreateFalse?relay,0203H
        PUBLIC ??cJSON_CreateFloatArray?relay
        FUNCTION ??cJSON_CreateFloatArray?relay,0203H
        PUBLIC ??cJSON_CreateIntArray?relay
        FUNCTION ??cJSON_CreateIntArray?relay,0203H
        PUBLIC ??cJSON_CreateNull?relay
        FUNCTION ??cJSON_CreateNull?relay,0203H
        PUBLIC ??cJSON_CreateNumber?relay
        FUNCTION ??cJSON_CreateNumber?relay,0203H
        PUBLIC ??cJSON_CreateObject?relay
        FUNCTION ??cJSON_CreateObject?relay,0203H
        PUBLIC ??cJSON_CreateObjectReference?relay
        FUNCTION ??cJSON_CreateObjectReference?relay,0203H
        PUBLIC ??cJSON_CreateRaw?relay
        FUNCTION ??cJSON_CreateRaw?relay,0203H
        PUBLIC ??cJSON_CreateString?relay
        FUNCTION ??cJSON_CreateString?relay,0203H
        PUBLIC ??cJSON_CreateStringArray?relay
        FUNCTION ??cJSON_CreateStringArray?relay,0203H
        PUBLIC ??cJSON_CreateStringReference?relay
        FUNCTION ??cJSON_CreateStringReference?relay,0203H
        PUBLIC ??cJSON_CreateTrue?relay
        FUNCTION ??cJSON_CreateTrue?relay,0203H
        PUBLIC ??cJSON_Delete?relay
        FUNCTION ??cJSON_Delete?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromArray?relay
        FUNCTION ??cJSON_DeleteItemFromArray?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromObject?relay
        FUNCTION ??cJSON_DeleteItemFromObject?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromObjectCaseSensitive?relay
        FUNCTION ??cJSON_DeleteItemFromObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_DetachItemFromArray?relay
        FUNCTION ??cJSON_DetachItemFromArray?relay,0203H
        PUBLIC ??cJSON_DetachItemFromObject?relay
        FUNCTION ??cJSON_DetachItemFromObject?relay,0203H
        PUBLIC ??cJSON_DetachItemFromObjectCaseSensitive?relay
        FUNCTION ??cJSON_DetachItemFromObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_DetachItemViaPointer?relay
        FUNCTION ??cJSON_DetachItemViaPointer?relay,0203H
        PUBLIC ??cJSON_Duplicate?relay
        FUNCTION ??cJSON_Duplicate?relay,0203H
        PUBLIC ??cJSON_GetArrayItem?relay
        FUNCTION ??cJSON_GetArrayItem?relay,0203H
        PUBLIC ??cJSON_GetArraySize?relay
        FUNCTION ??cJSON_GetArraySize?relay,0203H
        PUBLIC ??cJSON_GetErrorPtr?relay
        FUNCTION ??cJSON_GetErrorPtr?relay,0203H
        PUBLIC ??cJSON_GetNumberValue?relay
        FUNCTION ??cJSON_GetNumberValue?relay,0203H
        PUBLIC ??cJSON_GetObjectItem?relay
        FUNCTION ??cJSON_GetObjectItem?relay,0203H
        PUBLIC ??cJSON_GetObjectItemCaseSensitive?relay
        FUNCTION ??cJSON_GetObjectItemCaseSensitive?relay,0203H
        PUBLIC ??cJSON_GetStringValue?relay
        FUNCTION ??cJSON_GetStringValue?relay,0203H
        PUBLIC ??cJSON_HasObjectItem?relay
        FUNCTION ??cJSON_HasObjectItem?relay,0203H
        PUBLIC ??cJSON_InitHooks?relay
        FUNCTION ??cJSON_InitHooks?relay,0203H
        PUBLIC ??cJSON_InsertItemInArray?relay
        FUNCTION ??cJSON_InsertItemInArray?relay,0203H
        PUBLIC ??cJSON_IsArray?relay
        FUNCTION ??cJSON_IsArray?relay,0203H
        PUBLIC ??cJSON_IsBool?relay
        FUNCTION ??cJSON_IsBool?relay,0203H
        PUBLIC ??cJSON_IsFalse?relay
        FUNCTION ??cJSON_IsFalse?relay,0203H
        PUBLIC ??cJSON_IsInvalid?relay
        FUNCTION ??cJSON_IsInvalid?relay,0203H
        PUBLIC ??cJSON_IsNull?relay
        FUNCTION ??cJSON_IsNull?relay,0203H
        PUBLIC ??cJSON_IsNumber?relay
        FUNCTION ??cJSON_IsNumber?relay,0203H
        PUBLIC ??cJSON_IsObject?relay
        FUNCTION ??cJSON_IsObject?relay,0203H
        PUBLIC ??cJSON_IsRaw?relay
        FUNCTION ??cJSON_IsRaw?relay,0203H
        PUBLIC ??cJSON_IsString?relay
        FUNCTION ??cJSON_IsString?relay,0203H
        PUBLIC ??cJSON_IsTrue?relay
        FUNCTION ??cJSON_IsTrue?relay,0203H
        PUBLIC ??cJSON_Minify?relay
        FUNCTION ??cJSON_Minify?relay,0203H
        FUNCTION ??cJSON_New_Item?relay,0203H
        PUBLIC ??cJSON_Parse?relay
        FUNCTION ??cJSON_Parse?relay,0203H
        PUBLIC ??cJSON_ParseWithLength?relay
        FUNCTION ??cJSON_ParseWithLength?relay,0203H
        PUBLIC ??cJSON_ParseWithLengthOpts?relay
        FUNCTION ??cJSON_ParseWithLengthOpts?relay,0203H
        PUBLIC ??cJSON_ParseWithOpts?relay
        FUNCTION ??cJSON_ParseWithOpts?relay,0203H
        PUBLIC ??cJSON_Print?relay
        FUNCTION ??cJSON_Print?relay,0203H
        PUBLIC ??cJSON_PrintBuffered?relay
        FUNCTION ??cJSON_PrintBuffered?relay,0203H
        PUBLIC ??cJSON_PrintPreallocated?relay
        FUNCTION ??cJSON_PrintPreallocated?relay,0203H
        PUBLIC ??cJSON_PrintUnformatted?relay
        FUNCTION ??cJSON_PrintUnformatted?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInArray?relay
        FUNCTION ??cJSON_ReplaceItemInArray?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInObject?relay
        FUNCTION ??cJSON_ReplaceItemInObject?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInObjectCaseSensitive?relay
        FUNCTION ??cJSON_ReplaceItemInObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_ReplaceItemViaPointer?relay
        FUNCTION ??cJSON_ReplaceItemViaPointer?relay,0203H
        PUBLIC ??cJSON_SetNumberHelper?relay
        FUNCTION ??cJSON_SetNumberHelper?relay,0203H
        PUBLIC ??cJSON_SetValuestring?relay
        FUNCTION ??cJSON_SetValuestring?relay,0203H
        PUBLIC ??cJSON_Version?relay
        FUNCTION ??cJSON_Version?relay,0203H
        PUBLIC ??cJSON_free?relay
        FUNCTION ??cJSON_free?relay,0203H
        PUBLIC ??cJSON_malloc?relay
        FUNCTION ??cJSON_malloc?relay,0203H
        FUNCTION ??cJSON_strdup?relay,0203H
        FUNCTION ??case_insensitive_strcmp?relay,0203H
        FUNCTION ??compare_double?relay,0203H
        FUNCTION ??create_reference?relay,0203H
        FUNCTION ??ensure?relay,0203H
        FUNCTION ??get_array_item?relay,0203H
        FUNCTION ??get_object_item?relay,0203H
        FUNCTION ??minify_string?relay,0203H
        FUNCTION ??osal_mem_realloc?relay,0203H
        FUNCTION ??parse_array?relay,0203H
        FUNCTION ??parse_hex4?relay,0203H
        FUNCTION ??parse_number?relay,0203H
        FUNCTION ??parse_object?relay,0203H
        FUNCTION ??parse_string?relay,0203H
        FUNCTION ??parse_value?relay,0203H
        FUNCTION ??print?relay,0203H
        FUNCTION ??print_array?relay,0203H
        FUNCTION ??print_number?relay,0203H
        FUNCTION ??print_object?relay,0203H
        FUNCTION ??print_string_ptr?relay,0203H
        FUNCTION ??print_value?relay,0203H
        FUNCTION ??replace_item_in_object?relay,0203H
        FUNCTION ??suffix_object?relay,0203H
        FUNCTION ??update_offset?relay,0203H
        FUNCTION ??utf16_literal_to_utf8?relay,0203H
        PUBWEAK __Constant_0
        PUBWEAK __Constant_10000
        PUBWEAK __Constant_110000
        PUBWEAK __Constant_34000000
        PUBWEAK __Constant_46fffe00
        PUBWEAK __Constant_80
        PUBWEAK __Constant_800
        PUBWEAK __Constant_c6fffffe
        FUNCTION add_item_to_array,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION add_item_to_object,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION buffer_skip_whitespace,0203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        PUBLIC cJSON_AddArrayToObject
        FUNCTION cJSON_AddArrayToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddBoolToObject
        FUNCTION cJSON_AddBoolToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddFalseToObject
        FUNCTION cJSON_AddFalseToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddItemReferenceToArray
        FUNCTION cJSON_AddItemReferenceToArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_AddItemReferenceToObject
        FUNCTION cJSON_AddItemReferenceToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddItemToArray
        FUNCTION cJSON_AddItemToArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_AddItemToObject
        FUNCTION cJSON_AddItemToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddItemToObjectCS
        FUNCTION cJSON_AddItemToObjectCS,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddNullToObject
        FUNCTION cJSON_AddNullToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddNumberToObject
        FUNCTION cJSON_AddNumberToObject,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_AddObjectToObject
        FUNCTION cJSON_AddObjectToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddRawToObject
        FUNCTION cJSON_AddRawToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddStringToObject
        FUNCTION cJSON_AddStringToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddTrueToObject
        FUNCTION cJSON_AddTrueToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_Compare
        FUNCTION cJSON_Compare,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_CreateArray
        FUNCTION cJSON_CreateArray,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateArrayReference
        FUNCTION cJSON_CreateArrayReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateBool
        FUNCTION cJSON_CreateBool,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateDoubleArray
        FUNCTION cJSON_CreateDoubleArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateFalse
        FUNCTION cJSON_CreateFalse,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateFloatArray
        FUNCTION cJSON_CreateFloatArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateIntArray
        FUNCTION cJSON_CreateIntArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_CreateNull
        FUNCTION cJSON_CreateNull,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateNumber
        FUNCTION cJSON_CreateNumber,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_CreateObject
        FUNCTION cJSON_CreateObject,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateObjectReference
        FUNCTION cJSON_CreateObjectReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateRaw
        FUNCTION cJSON_CreateRaw,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_CreateString
        FUNCTION cJSON_CreateString,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_CreateStringArray
        FUNCTION cJSON_CreateStringArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateStringReference
        FUNCTION cJSON_CreateStringReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateTrue
        FUNCTION cJSON_CreateTrue,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_Delete
        FUNCTION cJSON_Delete,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_DeleteItemFromArray
        FUNCTION cJSON_DeleteItemFromArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DeleteItemFromObject
        FUNCTION cJSON_DeleteItemFromObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DeleteItemFromObjectCaseSensitive
        FUNCTION cJSON_DeleteItemFromObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DetachItemFromArray
        FUNCTION cJSON_DetachItemFromArray,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemFromObject
        FUNCTION cJSON_DetachItemFromObject,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemFromObjectCaseSensitive
        FUNCTION cJSON_DetachItemFromObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemViaPointer
        FUNCTION cJSON_DetachItemViaPointer,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_Duplicate
        FUNCTION cJSON_Duplicate,021203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_GetArrayItem
        FUNCTION cJSON_GetArrayItem,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetArraySize
        FUNCTION cJSON_GetArraySize,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetErrorPtr
        FUNCTION cJSON_GetErrorPtr,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetNumberValue
        FUNCTION cJSON_GetNumberValue,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_GetObjectItem
        FUNCTION cJSON_GetObjectItem,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_GetObjectItemCaseSensitive
        FUNCTION cJSON_GetObjectItemCaseSensitive,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_GetStringValue
        FUNCTION cJSON_GetStringValue,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_HasObjectItem
        FUNCTION cJSON_HasObjectItem,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_InitHooks
        FUNCTION cJSON_InitHooks,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_InsertItemInArray
        FUNCTION cJSON_InsertItemInArray,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_IsArray
        FUNCTION cJSON_IsArray,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsBool
        FUNCTION cJSON_IsBool,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsFalse
        FUNCTION cJSON_IsFalse,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsInvalid
        FUNCTION cJSON_IsInvalid,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsNull
        FUNCTION cJSON_IsNull,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsNumber
        FUNCTION cJSON_IsNumber,0203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsObject
        FUNCTION cJSON_IsObject,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsRaw
        FUNCTION cJSON_IsRaw,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsString
        FUNCTION cJSON_IsString,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsTrue
        FUNCTION cJSON_IsTrue,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_Minify
        FUNCTION cJSON_Minify,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        LOCFRAME XSTACK, 4, STACK
        FUNCTION cJSON_New_Item,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_Parse
        FUNCTION cJSON_Parse,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ParseWithLength
        FUNCTION cJSON_ParseWithLength,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_ParseWithLengthOpts
        FUNCTION cJSON_ParseWithLengthOpts,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC cJSON_ParseWithOpts
        FUNCTION cJSON_ParseWithOpts,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_Print
        FUNCTION cJSON_Print,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_PrintBuffered
        FUNCTION cJSON_PrintBuffered,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC cJSON_PrintPreallocated
        FUNCTION cJSON_PrintPreallocated,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC cJSON_PrintUnformatted
        FUNCTION cJSON_PrintUnformatted,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ReplaceItemInArray
        FUNCTION cJSON_ReplaceItemInArray,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ReplaceItemInObject
        FUNCTION cJSON_ReplaceItemInObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_ReplaceItemInObjectCaseSensitive
        FUNCTION cJSON_ReplaceItemInObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_ReplaceItemViaPointer
        FUNCTION cJSON_ReplaceItemViaPointer,021203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC cJSON_SetNumberHelper
        FUNCTION cJSON_SetNumberHelper,0203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_SetValuestring
        FUNCTION cJSON_SetValuestring,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_Version
        FUNCTION cJSON_Version,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_free
        FUNCTION cJSON_free,0203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_malloc
        FUNCTION cJSON_malloc,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION cJSON_strdup,021203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION case_insensitive_strcmp,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION compare_double,0203H
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 24, STACK
        FUNCTION create_reference,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION ensure,021203H
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION get_array_item,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION get_object_item,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        FUNCTION minify_string,0203H
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION osal_mem_realloc,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION parse_array,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION parse_hex4,0203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION parse_number,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 86, STACK
        FUNCTION parse_object,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION parse_string,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION parse_value,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 36, STACK
        FUNCTION print_array,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print_number,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 54, STACK
        FUNCTION print_object,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print_string_ptr,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION print_value,021203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION replace_item_in_object,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 20, STACK
        FUNCTION suffix_object,0203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION update_offset,021203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION utf16_literal_to_utf8,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
sprintf             SYMBOL "sprintf"
osal_mem_free       SYMBOL "osal_mem_free"
osal_mem_alloc      SYMBOL "osal_mem_alloc"
strlen              SYMBOL "strlen"
memcpy              SYMBOL "memcpy"
memset              SYMBOL "memset"
strtod              SYMBOL "strtod"
strcpy              SYMBOL "strcpy"
sscanf              SYMBOL "sscanf"
strncmp             SYMBOL "strncmp"
strcmp              SYMBOL "strcmp"
??memcpy?relay      SYMBOL "?relay", memcpy
??memset?relay      SYMBOL "?relay", memset
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
??sprintf?relay     SYMBOL "?relay", sprintf
??sscanf?relay      SYMBOL "?relay", sscanf
??strcmp?relay      SYMBOL "?relay", strcmp
??strcpy?relay      SYMBOL "?relay", strcpy
??strlen?relay      SYMBOL "?relay", strlen
??strncmp?relay     SYMBOL "?relay", strncmp
??strtod?relay      SYMBOL "?relay", strtod
cJSON_AddArrayToObject SYMBOL "cJSON_AddArrayToObject"
??cJSON_AddArrayToObject?relay SYMBOL "?relay", cJSON_AddArrayToObject
cJSON_AddBoolToObject SYMBOL "cJSON_AddBoolToObject"
??cJSON_AddBoolToObject?relay SYMBOL "?relay", cJSON_AddBoolToObject
cJSON_AddFalseToObject SYMBOL "cJSON_AddFalseToObject"
??cJSON_AddFalseToObject?relay SYMBOL "?relay", cJSON_AddFalseToObject
cJSON_AddItemReferenceToArray SYMBOL "cJSON_AddItemReferenceToArray"
??cJSON_AddItemReferenceToArray?relay SYMBOL "?relay", cJSON_AddItemReferenceToArray
cJSON_AddItemReferenceToObject SYMBOL "cJSON_AddItemReferenceToObject"
??cJSON_AddItemReferenceToObject?relay SYMBOL "?relay", cJSON_AddItemReferenceToObject
cJSON_AddItemToArray SYMBOL "cJSON_AddItemToArray"
??cJSON_AddItemToArray?relay SYMBOL "?relay", cJSON_AddItemToArray
cJSON_AddItemToObject SYMBOL "cJSON_AddItemToObject"
??cJSON_AddItemToObject?relay SYMBOL "?relay", cJSON_AddItemToObject
cJSON_AddItemToObjectCS SYMBOL "cJSON_AddItemToObjectCS"
??cJSON_AddItemToObjectCS?relay SYMBOL "?relay", cJSON_AddItemToObjectCS
cJSON_AddNullToObject SYMBOL "cJSON_AddNullToObject"
??cJSON_AddNullToObject?relay SYMBOL "?relay", cJSON_AddNullToObject
cJSON_AddNumberToObject SYMBOL "cJSON_AddNumberToObject"
??cJSON_AddNumberToObject?relay SYMBOL "?relay", cJSON_AddNumberToObject
cJSON_AddObjectToObject SYMBOL "cJSON_AddObjectToObject"
??cJSON_AddObjectToObject?relay SYMBOL "?relay", cJSON_AddObjectToObject
cJSON_AddRawToObject SYMBOL "cJSON_AddRawToObject"
??cJSON_AddRawToObject?relay SYMBOL "?relay", cJSON_AddRawToObject
cJSON_AddStringToObject SYMBOL "cJSON_AddStringToObject"
??cJSON_AddStringToObject?relay SYMBOL "?relay", cJSON_AddStringToObject
cJSON_AddTrueToObject SYMBOL "cJSON_AddTrueToObject"
??cJSON_AddTrueToObject?relay SYMBOL "?relay", cJSON_AddTrueToObject
cJSON_Compare       SYMBOL "cJSON_Compare"
??cJSON_Compare?relay SYMBOL "?relay", cJSON_Compare
cJSON_CreateArray   SYMBOL "cJSON_CreateArray"
??cJSON_CreateArray?relay SYMBOL "?relay", cJSON_CreateArray
cJSON_CreateArrayReference SYMBOL "cJSON_CreateArrayReference"
??cJSON_CreateArrayReference?relay SYMBOL "?relay", cJSON_CreateArrayReference
cJSON_CreateBool    SYMBOL "cJSON_CreateBool"
??cJSON_CreateBool?relay SYMBOL "?relay", cJSON_CreateBool
cJSON_CreateDoubleArray SYMBOL "cJSON_CreateDoubleArray"
??cJSON_CreateDoubleArray?relay SYMBOL "?relay", cJSON_CreateDoubleArray
cJSON_CreateFalse   SYMBOL "cJSON_CreateFalse"
??cJSON_CreateFalse?relay SYMBOL "?relay", cJSON_CreateFalse
cJSON_CreateFloatArray SYMBOL "cJSON_CreateFloatArray"
??cJSON_CreateFloatArray?relay SYMBOL "?relay", cJSON_CreateFloatArray
cJSON_CreateIntArray SYMBOL "cJSON_CreateIntArray"
??cJSON_CreateIntArray?relay SYMBOL "?relay", cJSON_CreateIntArray
cJSON_CreateNull    SYMBOL "cJSON_CreateNull"
??cJSON_CreateNull?relay SYMBOL "?relay", cJSON_CreateNull
cJSON_CreateNumber  SYMBOL "cJSON_CreateNumber"
??cJSON_CreateNumber?relay SYMBOL "?relay", cJSON_CreateNumber
cJSON_CreateObject  SYMBOL "cJSON_CreateObject"
??cJSON_CreateObject?relay SYMBOL "?relay", cJSON_CreateObject
cJSON_CreateObjectReference SYMBOL "cJSON_CreateObjectReference"
??cJSON_CreateObjectReference?relay SYMBOL "?relay", cJSON_CreateObjectReference
cJSON_CreateRaw     SYMBOL "cJSON_CreateRaw"
??cJSON_CreateRaw?relay SYMBOL "?relay", cJSON_CreateRaw
cJSON_CreateString  SYMBOL "cJSON_CreateString"
??cJSON_CreateString?relay SYMBOL "?relay", cJSON_CreateString
cJSON_CreateStringArray SYMBOL "cJSON_CreateStringArray"
??cJSON_CreateStringArray?relay SYMBOL "?relay", cJSON_CreateStringArray
cJSON_CreateStringReference SYMBOL "cJSON_CreateStringReference"
??cJSON_CreateStringReference?relay SYMBOL "?relay", cJSON_CreateStringReference
cJSON_CreateTrue    SYMBOL "cJSON_CreateTrue"
??cJSON_CreateTrue?relay SYMBOL "?relay", cJSON_CreateTrue
cJSON_Delete        SYMBOL "cJSON_Delete"
??cJSON_Delete?relay SYMBOL "?relay", cJSON_Delete
cJSON_DeleteItemFromArray SYMBOL "cJSON_DeleteItemFromArray"
??cJSON_DeleteItemFromArray?relay SYMBOL "?relay", cJSON_DeleteItemFromArray
cJSON_DeleteItemFromObject SYMBOL "cJSON_DeleteItemFromObject"
??cJSON_DeleteItemFromObject?relay SYMBOL "?relay", cJSON_DeleteItemFromObject
cJSON_DeleteItemFromObjectCaseSensitive SYMBOL "cJSON_DeleteItemFromObjectCaseSensitive"
??cJSON_DeleteItemFromObjectCaseSensitive?relay SYMBOL "?relay", cJSON_DeleteItemFromObjectCaseSensitive
cJSON_DetachItemFromArray SYMBOL "cJSON_DetachItemFromArray"
??cJSON_DetachItemFromArray?relay SYMBOL "?relay", cJSON_DetachItemFromArray
cJSON_DetachItemFromObject SYMBOL "cJSON_DetachItemFromObject"
??cJSON_DetachItemFromObject?relay SYMBOL "?relay", cJSON_DetachItemFromObject
cJSON_DetachItemFromObjectCaseSensitive SYMBOL "cJSON_DetachItemFromObjectCaseSensitive"
??cJSON_DetachItemFromObjectCaseSensitive?relay SYMBOL "?relay", cJSON_DetachItemFromObjectCaseSensitive
cJSON_DetachItemViaPointer SYMBOL "cJSON_DetachItemViaPointer"
??cJSON_DetachItemViaPointer?relay SYMBOL "?relay", cJSON_DetachItemViaPointer
cJSON_Duplicate     SYMBOL "cJSON_Duplicate"
??cJSON_Duplicate?relay SYMBOL "?relay", cJSON_Duplicate
cJSON_GetArrayItem  SYMBOL "cJSON_GetArrayItem"
??cJSON_GetArrayItem?relay SYMBOL "?relay", cJSON_GetArrayItem
cJSON_GetArraySize  SYMBOL "cJSON_GetArraySize"
??cJSON_GetArraySize?relay SYMBOL "?relay", cJSON_GetArraySize
cJSON_GetErrorPtr   SYMBOL "cJSON_GetErrorPtr"
??cJSON_GetErrorPtr?relay SYMBOL "?relay", cJSON_GetErrorPtr
cJSON_GetNumberValue SYMBOL "cJSON_GetNumberValue"
??cJSON_GetNumberValue?relay SYMBOL "?relay", cJSON_GetNumberValue
cJSON_GetObjectItem SYMBOL "cJSON_GetObjectItem"
??cJSON_GetObjectItem?relay SYMBOL "?relay", cJSON_GetObjectItem
cJSON_GetObjectItemCaseSensitive SYMBOL "cJSON_GetObjectItemCaseSensitive"
??cJSON_GetObjectItemCaseSensitive?relay SYMBOL "?relay", cJSON_GetObjectItemCaseSensitive
cJSON_GetStringValue SYMBOL "cJSON_GetStringValue"
??cJSON_GetStringValue?relay SYMBOL "?relay", cJSON_GetStringValue
cJSON_HasObjectItem SYMBOL "cJSON_HasObjectItem"
??cJSON_HasObjectItem?relay SYMBOL "?relay", cJSON_HasObjectItem
cJSON_InitHooks     SYMBOL "cJSON_InitHooks"
??cJSON_InitHooks?relay SYMBOL "?relay", cJSON_InitHooks
cJSON_InsertItemInArray SYMBOL "cJSON_InsertItemInArray"
??cJSON_InsertItemInArray?relay SYMBOL "?relay", cJSON_InsertItemInArray
cJSON_IsArray       SYMBOL "cJSON_IsArray"
??cJSON_IsArray?relay SYMBOL "?relay", cJSON_IsArray
cJSON_IsBool        SYMBOL "cJSON_IsBool"
??cJSON_IsBool?relay SYMBOL "?relay", cJSON_IsBool
cJSON_IsFalse       SYMBOL "cJSON_IsFalse"
??cJSON_IsFalse?relay SYMBOL "?relay", cJSON_IsFalse
cJSON_IsInvalid     SYMBOL "cJSON_IsInvalid"
??cJSON_IsInvalid?relay SYMBOL "?relay", cJSON_IsInvalid
cJSON_IsNull        SYMBOL "cJSON_IsNull"
??cJSON_IsNull?relay SYMBOL "?relay", cJSON_IsNull
cJSON_IsNumber      SYMBOL "cJSON_IsNumber"
??cJSON_IsNumber?relay SYMBOL "?relay", cJSON_IsNumber
cJSON_IsObject      SYMBOL "cJSON_IsObject"
??cJSON_IsObject?relay SYMBOL "?relay", cJSON_IsObject
cJSON_IsRaw         SYMBOL "cJSON_IsRaw"
??cJSON_IsRaw?relay SYMBOL "?relay", cJSON_IsRaw
cJSON_IsString      SYMBOL "cJSON_IsString"
??cJSON_IsString?relay SYMBOL "?relay", cJSON_IsString
cJSON_IsTrue        SYMBOL "cJSON_IsTrue"
??cJSON_IsTrue?relay SYMBOL "?relay", cJSON_IsTrue
cJSON_Minify        SYMBOL "cJSON_Minify"
??cJSON_Minify?relay SYMBOL "?relay", cJSON_Minify
cJSON_Parse         SYMBOL "cJSON_Parse"
??cJSON_Parse?relay SYMBOL "?relay", cJSON_Parse
cJSON_ParseWithLength SYMBOL "cJSON_ParseWithLength"
??cJSON_ParseWithLength?relay SYMBOL "?relay", cJSON_ParseWithLength
cJSON_ParseWithLengthOpts SYMBOL "cJSON_ParseWithLengthOpts"
??cJSON_ParseWithLengthOpts?relay SYMBOL "?relay", cJSON_ParseWithLengthOpts
cJSON_ParseWithOpts SYMBOL "cJSON_ParseWithOpts"
??cJSON_ParseWithOpts?relay SYMBOL "?relay", cJSON_ParseWithOpts
cJSON_Print         SYMBOL "cJSON_Print"
??cJSON_Print?relay SYMBOL "?relay", cJSON_Print
cJSON_PrintBuffered SYMBOL "cJSON_PrintBuffered"
??cJSON_PrintBuffered?relay SYMBOL "?relay", cJSON_PrintBuffered
cJSON_PrintPreallocated SYMBOL "cJSON_PrintPreallocated"
??cJSON_PrintPreallocated?relay SYMBOL "?relay", cJSON_PrintPreallocated
cJSON_PrintUnformatted SYMBOL "cJSON_PrintUnformatted"
??cJSON_PrintUnformatted?relay SYMBOL "?relay", cJSON_PrintUnformatted
cJSON_ReplaceItemInArray SYMBOL "cJSON_ReplaceItemInArray"
??cJSON_ReplaceItemInArray?relay SYMBOL "?relay", cJSON_ReplaceItemInArray
cJSON_ReplaceItemInObject SYMBOL "cJSON_ReplaceItemInObject"
??cJSON_ReplaceItemInObject?relay SYMBOL "?relay", cJSON_ReplaceItemInObject
cJSON_ReplaceItemInObjectCaseSensitive SYMBOL "cJSON_ReplaceItemInObjectCaseSensitive"
??cJSON_ReplaceItemInObjectCaseSensitive?relay SYMBOL "?relay", cJSON_ReplaceItemInObjectCaseSensitive
cJSON_ReplaceItemViaPointer SYMBOL "cJSON_ReplaceItemViaPointer"
??cJSON_ReplaceItemViaPointer?relay SYMBOL "?relay", cJSON_ReplaceItemViaPointer
cJSON_SetNumberHelper SYMBOL "cJSON_SetNumberHelper"
??cJSON_SetNumberHelper?relay SYMBOL "?relay", cJSON_SetNumberHelper
cJSON_SetValuestring SYMBOL "cJSON_SetValuestring"
??cJSON_SetValuestring?relay SYMBOL "?relay", cJSON_SetValuestring
cJSON_Version       SYMBOL "cJSON_Version"
??cJSON_Version?relay SYMBOL "?relay", cJSON_Version
cJSON_free          SYMBOL "cJSON_free"
??cJSON_free?relay  SYMBOL "?relay", cJSON_free
cJSON_malloc        SYMBOL "cJSON_malloc"
??cJSON_malloc?relay SYMBOL "?relay", cJSON_malloc

        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0602H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0602H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcpy
        FUNCTION memcpy,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strtod
        FUNCTION strtod,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strcpy
        FUNCTION strcpy,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sscanf
        FUNCTION sscanf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 52, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strncmp
        FUNCTION strncmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strcmp
        FUNCTION strcmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??memcpy?relay
        FUNCTION ??memcpy?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H
        EXTERN ??sscanf?relay
        FUNCTION ??sscanf?relay,00H
        EXTERN ??strcmp?relay
        FUNCTION ??strcmp?relay,00H
        EXTERN ??strcpy?relay
        FUNCTION ??strcpy?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H
        EXTERN ??strncmp?relay
        FUNCTION ??strncmp?relay,00H
        EXTERN ??strtod?relay
        FUNCTION ??strtod?relay,00H
        EXTERN _Small_Ctype

// C:\Users\濟捇\Desktop\stm32\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\cJSON.c
//    1 /*
//    2   Copyright (c) 2009-2017 Dave Gamble and cJSON contributors
//    3 
//    4   Permission is hereby granted, free of charge, to any person obtaining a copy
//    5   of this software and associated documentation files (the "Software"), to deal
//    6   in the Software without restriction, including without limitation the rights
//    7   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//    8   copies of the Software, and to permit persons to whom the Software is
//    9   furnished to do so, subject to the following conditions:
//   10 
//   11   The above copyright notice and this permission notice shall be included in
//   12   all copies or substantial portions of the Software.
//   13 
//   14   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//   15   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//   16   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//   17   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//   18   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//   19   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//   20   THE SOFTWARE.
//   21 */
//   22 
//   23 /* cJSON */
//   24 /* JSON parser in C. */
//   25 
//   26 /* disable warnings about old C89 functions in MSVC */
//   27 #if !defined(_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER)
//   28 #define _CRT_SECURE_NO_DEPRECATE
//   29 #endif
//   30 
//   31 #ifdef __GNUC__
//   32 #pragma GCC visibility push(default)
//   33 #endif
//   34 #if defined(_MSC_VER)
//   35 #pragma warning (push)
//   36 /* disable warning about single line comments in system headers */
//   37 #pragma warning (disable : 4001)
//   38 #endif
//   39 
//   40 #include <string.h>
//   41 #include <stdio.h>
//   42 #include <math.h>
//   43 #include <stdlib.h>
//   44 #include <limits.h>
//   45 #include <ctype.h>
//   46 #include <float.h>
//   47 #include "OSAL_Memory.h"
//   48 
//   49 #ifdef ENABLE_LOCALES
//   50 #include <locale.h>
//   51 #endif
//   52 
//   53 #if defined(_MSC_VER)
//   54 #pragma warning (pop)
//   55 #endif
//   56 #ifdef __GNUC__
//   57 #pragma GCC visibility pop
//   58 #endif
//   59 
//   60 #include "cJSON.h"
//   61 
//   62 /* define our own boolean type */
//   63 #ifdef true
//   64 #undef true
//   65 #endif
//   66 #define true ((cJSON_bool)1)
//   67 
//   68 #ifdef false
//   69 #undef false
//   70 #endif
//   71 #define false ((cJSON_bool)0)
//   72 
//   73 /* define isnan and isinf for ANSI C, if in C99 or above, isnan and isinf has been defined in math.h */
//   74 #ifndef isinf
//   75 #define isinf(d) (isnan((d - d)) && !isnan(d))
//   76 #endif
//   77 #ifndef isnan
//   78 #define isnan(d) (d != d)
//   79 #endif
//   80 
//   81 #ifndef NAN
//   82 #ifdef _WIN32
//   83 #define NAN sqrt(-1.0)
//   84 #else
//   85 #define NAN 0.0/0.0
//   86 #endif
//   87 #endif
//   88 
//   89 typedef struct {
//   90     const unsigned char *json;
//   91     size_t position;
//   92 } error;

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   93 static error global_error = { NULL, 0 };
global_error:
        DS 4
        REQUIRE __INIT_XDATA_Z
//   94 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   95 CJSON_PUBLIC(const char *) cJSON_GetErrorPtr(void)
cJSON_GetErrorPtr:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function cJSON_GetErrorPtr
        CODE
//   96 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   97     return (const char*) (global_error.json + global_error.position);
        MOV     DPTR,#global_error + 2
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_611:
        MOV     DPTR,#global_error
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV     R3,A
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock0
//   98 }
//   99 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  100 CJSON_PUBLIC(char *) cJSON_GetStringValue(const cJSON * const item)
cJSON_GetStringValue:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function cJSON_GetStringValue
        CODE
//  101 {
        FUNCALL cJSON_GetStringValue, cJSON_IsString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  102     if (!cJSON_IsString(item))
        ; Setup parameters for call to function cJSON_IsString
        LCALL   ??cJSON_IsString?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_GetStringValue_0
//  103     {
//  104         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??CrossCallReturnLabel_417
//  105     }
//  106 
//  107     return item->valuestring;
??cJSON_GetStringValue_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_417:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1
//  108 }
//  109 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  110 CJSON_PUBLIC(double) cJSON_GetNumberValue(const cJSON * const item)
cJSON_GetNumberValue:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function cJSON_GetNumberValue
        CODE
//  111 {
        FUNCALL cJSON_GetNumberValue, cJSON_IsNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  112     if (!cJSON_IsNumber(item))
        ; Setup parameters for call to function cJSON_IsNumber
        LCALL   ??cJSON_IsNumber?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_GetNumberValue_0
//  113     {
//  114         return (double) NAN;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        SJMP    ??cJSON_GetNumberValue_1
//  115     }
//  116 
//  117     return item->valuedouble;
??cJSON_GetNumberValue_0:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL   ?XLOAD_R2345
??cJSON_GetNumberValue_1:
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock2
//  118 }
//  119 
//  120 /* This is a safeguard to prevent copy-pasters from using incompatible C and header files */
//  121 #if (CJSON_VERSION_MAJOR != 1) || (CJSON_VERSION_MINOR != 7) || (CJSON_VERSION_PATCH != 15)
//  122     #error cJSON.h and cJSON.c have different versions. Make sure that both have the same.
//  123 #endif
//  124 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  125 CJSON_PUBLIC(const char*) cJSON_Version(void)
cJSON_Version:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function cJSON_Version
        CODE
//  126 {
        FUNCALL cJSON_Version, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  127     static char version[15];
//  128     sprintf(version, "%i.%i.%i", CJSON_VERSION_MAJOR, CJSON_VERSION_MINOR, CJSON_VERSION_PATCH);
        ; Setup parameters for call to function sprintf
        MOV     ?V0 + 0,#0xf
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,#0x7
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     R4,#`?<Constant "%i.%i.%i">` & 0xff
        MOV     R5,#(`?<Constant "%i.%i.%i">` >> 8) & 0xff
        MOV     R2,#??version & 0xff
        MOV     R3,#(??version >> 8) & 0xff
        LCALL   ??sprintf?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  129 
//  130     return version;
        MOV     R2,#??version & 0xff
        MOV     R3,#(??version >> 8) & 0xff
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock3
//  131 }

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??version:
        DS 15
        REQUIRE __INIT_XDATA_Z
//  132 
//  133 /* Case insensitive string comparison, doesn't consider two NULL pointers equal though */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  134 static int case_insensitive_strcmp(const unsigned char *string1, const unsigned char *string2)
case_insensitive_strcmp:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function case_insensitive_strcmp
        CODE
//  135 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//  136     if ((string1 == NULL) || (string2 == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??case_insensitive_strcmp_0
        MOV     A,R4
        ORL     A,R5
        JNZ     ??case_insensitive_strcmp_1
//  137     {
//  138         return 1;
??case_insensitive_strcmp_0:
        MOV     R2,#0x1
??case_insensitive_strcmp_2:
        MOV     R3,#0x0
        SJMP    ??case_insensitive_strcmp_3
//  139     }
//  140 
//  141     if (string1 == string2)
??case_insensitive_strcmp_1:
        MOV     A,R4
        XRL     A,R2
        JNZ     ??case_insensitive_strcmp_4
        MOV     A,R5
        XRL     A,R3
??case_insensitive_strcmp_4:
        JNZ     ??case_insensitive_strcmp_5
//  142     {
//  143         return 0;
??case_insensitive_strcmp_6:
        MOV     R2,#0x0
        SJMP    ??case_insensitive_strcmp_2
//  144     }
//  145 
//  146     for(; tolower(*string1) == tolower(*string2); (void)string1++, string2++)
//  147     {
//  148         if (*string1 == '\0')
??case_insensitive_strcmp_7:
        MOVX    A,@DPTR
        JZ      ??case_insensitive_strcmp_6
//  149         {
//  150             return 0;
//  151         }
//  152     }
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R4,DPL
        MOV     R5,DPH
??case_insensitive_strcmp_5:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_5:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNC     ??case_insensitive_strcmp_8
        ORL     A,#0x20
??case_insensitive_strcmp_8:
        MOV     R6,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_6:
        JNC     ??case_insensitive_strcmp_9
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R0,A
??case_insensitive_strcmp_9:
        MOV     A,R0
        XRL     A,R6
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??case_insensitive_strcmp_7
//  153 
//  154     return tolower(*string1) - tolower(*string2);
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_7:
        JNC     ??case_insensitive_strcmp_10
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R0,A
??case_insensitive_strcmp_10:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#(_Small_Ctype + 1) & 0xff
        ADD     A,R2
        MOV     DPL,A
        MOV     A,#((_Small_Ctype + 1) >> 8) & 0xff
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_349:
        CLR     A
        MOVC    A,@A+DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??case_insensitive_strcmp_11
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R2,A
??case_insensitive_strcmp_11:
        MOV     A,R0
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        SUBB    A,0xE0 /* A   */
        MOV     R3,A
??case_insensitive_strcmp_3:
        LJMP    ??Subroutine191_0 & 0xFFFF
        CFI EndBlock cfiBlock4
//  155 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond5 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_5
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_6
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond7 Using cfiCommon0
        CFI (cfiCond7) NoFunction
        CFI (cfiCond7) Conditional ??CrossCallReturnLabel_7
        CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond7) CFA_SP SP+0
        CFI (cfiCond7) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker8 Using cfiCommon1
        CFI (cfiPicker8) NoFunction
        CFI (cfiPicker8) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#(_Small_Ctype + 1) & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#((_Small_Ctype + 1) >> 8) & 0xff
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_646:
        CLR     A
        MOVC    A,@A+DPTR
        MOV     C,0xE0 /* A   */.0
        RET
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiCond7
        CFI EndBlock cfiPicker8
//  156 
//  157 typedef struct internal_hooks
//  158 {
//  159     void *(CJSON_CDECL *allocate)(uint16 size);
//  160     void (CJSON_CDECL *deallocate)(void *pointer);
//  161     void *(CJSON_CDECL *reallocate)(void *pointer, uint16 size);
//  162 } internal_hooks;

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  163 static void * CJSON_CDECL osal_mem_realloc(void *pointer, uint16 size)
osal_mem_realloc:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI Function osal_mem_realloc
        CODE
//  164 {
        FUNCALL osal_mem_realloc, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osal_mem_realloc, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  165     osal_mem_free(pointer);
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
//  166     return osal_mem_alloc(size);
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        LJMP    ??Subroutine191_0 & 0xFFFF
        CFI EndBlock cfiBlock9
//  167 }
//  168 #define realloc osal_mem_realloc
//  169 #define malloc osal_mem_alloc
//  170 #define free osal_mem_free
//  171 
//  172 
//  173 #if defined(_MSC_VER)
//  174 /* work around MSVC error C2322: '...' address of dllimport '...' is not static */
//  175 static void * CJSON_CDECL internal_malloc(size_t size)
//  176 {
//  177     return malloc(size);
//  178 }
//  179 static void CJSON_CDECL internal_free(void *pointer)
//  180 {
//  181     free(pointer);
//  182 }
//  183 static void * CJSON_CDECL internal_realloc(void *pointer, size_t size)
//  184 {
//  185     return realloc(pointer, size);
//  186 }
//  187 #else
//  188 #define internal_malloc malloc
//  189 #define internal_free free
//  190 #define internal_realloc realloc
//  191 #endif
//  192 
//  193 /* strlen of character literals resolved at compile time */
//  194 #define static_strlen(string_literal) (sizeof(string_literal) - sizeof(""))
//  195 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  196 static internal_hooks global_hooks = { internal_malloc, internal_free, internal_realloc };
global_hooks:
        DATA8
        DS 6
        REQUIRE `?<Initializer for global_hooks>`
        REQUIRE __INIT_XDATA_I
//  197 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  198 static unsigned char* cJSON_strdup(const unsigned char* string, const internal_hooks * const hooks)
cJSON_strdup:
        CFI Block cfiBlock10 Using cfiCommon0
        CFI Function cJSON_strdup
        CODE
//  199 {
        FUNCALL cJSON_strdup, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_strdup, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
//  200     size_t length = 0;
//  201     unsigned char *copy = NULL;
//  202 
//  203     if (string == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??cJSON_strdup_0
//  204     {
//  205         return NULL;
??cJSON_strdup_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_strdup_2
//  206     }
//  207 
//  208     length = strlen((const char*)string) + sizeof("");
??cJSON_strdup_0:
        ; Setup parameters for call to function strlen
        LCALL   ??strlen?relay
        LCALL   ?Subroutine93 & 0xFFFF
//  209     copy = (unsigned char*)hooks->allocate(length);
??CrossCallReturnLabel_152:
        ; Setup parameters for indirect call
        INC     R2
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL   ?CALL_IND
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  210     if (copy == NULL)
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??cJSON_strdup_1
//  211     {
//  212         return NULL;
//  213     }
//  214     memcpy(copy, string, length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_285:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  215 
//  216     return copy;
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??cJSON_strdup_2:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock10
//  217 }
//  218 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  219 CJSON_PUBLIC(void) cJSON_InitHooks(cJSON_Hooks* hooks)
cJSON_InitHooks:
        CFI Block cfiBlock11 Using cfiCommon0
        CFI Function cJSON_InitHooks
        CODE
//  220 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  221     if (hooks == NULL)
        MOV     A,R2
        ORL     A,R3
        MOV     DPTR,#global_hooks
        JNZ     ??cJSON_InitHooks_0
//  222     {
//  223         /* Reset hooks */
//  224         global_hooks.allocate = malloc;
        MOV     A,#??osal_mem_alloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??osal_mem_alloc?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  225         global_hooks.deallocate = free;
        INC     DPTR
        MOV     A,#??osal_mem_free?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??osal_mem_free?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  226         global_hooks.reallocate = realloc;
        INC     DPTR
        SJMP    ??cJSON_InitHooks_1
//  227         return;
//  228     }
//  229 
//  230     global_hooks.allocate = malloc;
??cJSON_InitHooks_0:
        MOV     A,#??osal_mem_alloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??osal_mem_alloc?relay >> 8) & 0xff
        LCALL   ?Subroutine105 & 0xFFFF
//  231     if (hooks->malloc_fn != NULL)
??CrossCallReturnLabel_166:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_458:
        JZ      ??CrossCallReturnLabel_430
//  232     {
//  233         global_hooks.allocate = hooks->malloc_fn;
        MOV     DPTR,#global_hooks
        LCALL   ??Subroutine200_0 & 0xFFFF
//  234     }
//  235 
//  236     global_hooks.deallocate = free;
??CrossCallReturnLabel_430:
        MOV     DPTR,#global_hooks + 2
        MOV     A,#??osal_mem_free?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??osal_mem_free?relay >> 8) & 0xff
        LCALL   ?Subroutine105 & 0xFFFF
//  237     if (hooks->free_fn != NULL)
??CrossCallReturnLabel_167:
        LCALL   ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_487:
        JZ      ??CrossCallReturnLabel_431
//  238     {
//  239         global_hooks.deallocate = hooks->free_fn;
        MOV     DPTR,#global_hooks + 2
        LCALL   ??Subroutine200_0 & 0xFFFF
//  240     }
//  241 
//  242     /* use realloc only if both free and malloc are used */
//  243     global_hooks.reallocate = NULL;
??CrossCallReturnLabel_431:
        MOV     DPTR,#global_hooks + 4
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  244     if ((global_hooks.allocate == malloc) && (global_hooks.deallocate == free))
        MOV     DPTR,#global_hooks
        MOVX    A,@DPTR
        XRL     A,#??osal_mem_alloc?relay & 0xff
        JNZ     ??cJSON_InitHooks_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#(??osal_mem_alloc?relay >> 8) & 0xff
??cJSON_InitHooks_2:
        JNZ     ??cJSON_InitHooks_3
        MOV     DPTR,#global_hooks + 2
        MOVX    A,@DPTR
        XRL     A,#??osal_mem_free?relay & 0xff
        JNZ     ??cJSON_InitHooks_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#(??osal_mem_free?relay >> 8) & 0xff
??cJSON_InitHooks_4:
        JNZ     ??cJSON_InitHooks_3
//  245     {
//  246         global_hooks.reallocate = realloc;
        MOV     DPTR,#global_hooks + 4
??cJSON_InitHooks_1:
        MOV     A,#??osal_mem_realloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??osal_mem_realloc?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  247     }
??cJSON_InitHooks_3:
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock11
//  248 }
//  249 
//  250 /* Internal constructor. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  251 static cJSON *cJSON_New_Item(const internal_hooks * const hooks)
cJSON_New_Item:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI Function cJSON_New_Item
        CODE
//  252 {
        FUNCALL cJSON_New_Item, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
//  253     cJSON* node = (cJSON*)hooks->allocate(sizeof(cJSON));
        ; Setup parameters for indirect call
        MOV     R2,#0x12
        MOV     R3,#0x0
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL   ?CALL_IND
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  254     if (node)
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_New_Item_0
//  255     {
//  256         memset(node, '\0', sizeof(cJSON));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0x12
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  257     }
//  258 
//  259     return node;
??cJSON_New_Item_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock12
//  260 }
//  261 
//  262 /* Delete a cJSON structure. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  263 CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
cJSON_Delete:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI Function cJSON_Delete
        CODE
//  264 {
        FUNCALL cJSON_Delete, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  265     cJSON *next = NULL;
        LJMP    ??cJSON_Delete_0 & 0xFFFF
//  266     while (item != NULL)
//  267     {
//  268         next = item->next;
??cJSON_Delete_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine39 & 0xFFFF
//  269         if (!(item->type & cJSON_IsReference) && (item->child != NULL))
??CrossCallReturnLabel_56:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        JNZ     ??cJSON_Delete_2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_489:
        JZ      ??cJSON_Delete_2
//  270         {
//  271             cJSON_Delete(item->child);
        ; Setup parameters for call to function cJSON_Delete
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine194_0 & 0xFFFF
//  272         }
??CrossCallReturnLabel_415:
        LCALL   ??cJSON_Delete?relay
//  273         if (!(item->type & cJSON_IsReference) && (item->valuestring != NULL))
??cJSON_Delete_2:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        JNZ     ??cJSON_Delete_3
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_497:
        JZ      ??cJSON_Delete_3
//  274         {
//  275             global_hooks.deallocate(item->valuestring);
        ; Setup parameters for indirect call
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine23 & 0xFFFF
//  276         }
??CrossCallReturnLabel_23:
        LCALL   ?CALL_IND
//  277         if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
??cJSON_Delete_3:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??cJSON_Delete_4
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_643:
        MOV     A,R7
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_350:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_459:
        JZ      ??cJSON_Delete_4
//  278         {
//  279             global_hooks.deallocate(item->string);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine112 & 0xFFFF
//  280         }
??CrossCallReturnLabel_644:
        MOV     A,R7
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL   ?CALL_IND
//  281         global_hooks.deallocate(item);
??cJSON_Delete_4:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPTR,#global_hooks + 2
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL   ?CALL_IND
//  282         item = next;
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  283     }
??cJSON_Delete_0:
        MOV     A,R6
        ORL     A,R7
        JZ      $+5
        LJMP    ??cJSON_Delete_1 & 0xFFFF
//  284 }
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock13
//  285 
//  286 /* get the decimal point character of the current locale */
//  287 static unsigned char get_decimal_point(void)
//  288 {
//  289 #ifdef ENABLE_LOCALES
//  290     struct lconv *lconv = localeconv();
//  291     return (unsigned char) lconv->decimal_point[0];
//  292 #else
//  293     return '.';
//  294 #endif
//  295 }
//  296 
//  297 typedef struct
//  298 {
//  299     const unsigned char *content;
//  300     size_t length;
//  301     size_t offset;
//  302     size_t depth; /* How deeply nested (in arrays/objects) is the input at the current offset. */
//  303     internal_hooks hooks;
//  304 } parse_buffer;
//  305 
//  306 /* check if the given size is left to read in a given parse buffer (starting with 1) */
//  307 #define can_read(buffer, size) ((buffer != NULL) && (((buffer)->offset + size) <= (buffer)->length))
//  308 /* check if the buffer can be accessed at the given index (starting with 0) */
//  309 #define can_access_at_index(buffer, index) ((buffer != NULL) && (((buffer)->offset + index) < (buffer)->length))
//  310 #define cannot_access_at_index(buffer, index) (!can_access_at_index(buffer, index))
//  311 /* get a pointer to the buffer at the position */
//  312 #define buffer_at_offset(buffer) ((buffer)->content + (buffer)->offset)
//  313 
//  314 /* Parse the input text to generate a number, and populate the result into item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  315 static cJSON_bool parse_number(cJSON * const item, parse_buffer * const input_buffer)
parse_number:
        CFI Block cfiBlock14 Using cfiCommon0
        CFI Function parse_number
        CODE
//  316 {
        FUNCALL parse_number, strtod
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 66
        MOV     A,#-0x42
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 86)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  317     double number = 0;
//  318     unsigned char *after_end = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  319     unsigned char number_c_string[64];
//  320     unsigned char decimal_point = get_decimal_point();
//  321     size_t i = 0;
//  322 
//  323     if ((input_buffer == NULL) || (input_buffer->content == NULL))
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_number_0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_460:
        JNZ     ??parse_number_1
//  324     {
//  325         return false;
??parse_number_0:
        MOV     R2,#0x0
        LJMP    ??parse_number_2 & 0xFFFF
//  326     }
//  327 
//  328     /* copy the number into a temporary buffer and replace '.' with the decimal point
//  329      * of the current locale (for strtod)
//  330      * This also takes care of '\0' not necessarily being available for marking the end of the input */
//  331     for (i = 0; (i < (sizeof(number_c_string) - 1)) && can_access_at_index(input_buffer, i); i++)
??parse_number_1:
        MOV     R0,#0x0
        MOV     R1,#0x0
??parse_number_3:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_365:
        JNC     ??parse_number_4
//  332     {
//  333         switch (buffer_at_offset(input_buffer)[i])
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?UC_SWITCH_SPARSE
`?<Jumptable for parse_number>_0`:
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        1
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        48
        DATA
        DATA8
        DATA
        DATA8
        DB        57
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        43
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        45
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        46
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_6
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        69
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        101
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_4
        CODE
//  334         {
//  335             case '0':
//  336             case '1':
//  337             case '2':
//  338             case '3':
//  339             case '4':
//  340             case '5':
//  341             case '6':
//  342             case '7':
//  343             case '8':
//  344             case '9':
//  345             case '+':
//  346             case '-':
//  347             case 'e':
//  348             case 'E':
//  349                 number_c_string[i] = buffer_at_offset(input_buffer)[i];
??parse_number_5:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_27:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_127:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??parse_number_7
//  350                 break;
//  351 
//  352             case '.':
//  353                 number_c_string[i] = decimal_point;
??parse_number_6:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
//  354                 break;
//  355 
//  356             default:
//  357                 goto loop_end;
//  358         }
//  359     }
??CrossCallReturnLabel_128:
        MOV     A,#0x2e
??parse_number_7:
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_228:
        CLR     C
        MOV     A,R0
        SUBB    A,#0x3f
        MOV     A,R1
        SUBB    A,#0x0
        JC      ??parse_number_3
//  360 loop_end:
//  361     number_c_string[i] = '\0';
??parse_number_4:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_129:
        CLR     A
        LCALL   ??Subroutine167_0 & 0xFFFF
//  362 
//  363     number = strtod((const char*)number_c_string, (char**)&after_end);
??CrossCallReturnLabel_291:
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strtod?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
//  364     if (number_c_string == after_end)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_612:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,DPL
        XRL     A,R0
        JNZ     ??parse_number_8
        MOV     A,DPH
        XRL     A,R1
??parse_number_8:
        JNZ     $+5
        LJMP    ??parse_number_0 & 0xFFFF
//  365     {
//  366         return false; /* parse_error */
//  367     }
//  368 
//  369     item->valuedouble = number;
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_139:
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//  370 
//  371     /* use saturation in case of overflow */
//  372     if (number >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_GE
        JNC     ??parse_number_9
//  373     {
//  374         item->valueint = INT_MAX;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??parse_number_10
//  375     }
//  376     else if (number <= (double)INT_MIN)
??parse_number_9:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_LT
        JNC     ??parse_number_11
//  377     {
//  378         item->valueint = INT_MIN;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??parse_number_10
//  379     }
//  380     else
//  381     {
//  382         item->valueint = (int)number;
??parse_number_11:
        MOV     R0,#?V0 + 4
        LCALL   ?FLT_TO_L
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
//  383     }
??parse_number_10:
        LCALL   ?Subroutine95 & 0xFFFF
//  384 
//  385     item->type = cJSON_Number;
??CrossCallReturnLabel_154:
        MOV     A,#0x8
        LCALL   ??Subroutine217_0 & 0xFFFF
//  386 
//  387     input_buffer->offset += (size_t)(after_end - (size_t)number_c_string);
??CrossCallReturnLabel_560:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     C
        CLR     A
        SUBB    A,DPL
        MOV     R0,A
        CLR     A
        SUBB    A,DPH
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_81:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine55 & 0xFFFF
//  388     return true;
??CrossCallReturnLabel_83:
        MOV     R2,#0x1
??parse_number_2:
        MOV     R3,#0x0
        MOV     A,#0x42
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock14
//  389 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
        CFI Block cfiCond15 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_228
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond16) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond16) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond16) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond16) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond16) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond16) CFA_SP SP+0
        CFI (cfiCond16) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiPicker17 Using cfiCommon1
        CFI (cfiPicker17) NoFunction
        CFI (cfiPicker17) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiPicker17
        REQUIRE ??Subroutine153_0
        ; // Fall through to label ??Subroutine153_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine153_0:
        CFI Block cfiCond18 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_230
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond19 Using cfiCommon0
        CFI (cfiCond19) NoFunction
        CFI (cfiCond19) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond19) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond19) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond19) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond19) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond19) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond19) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond19) CFA_SP SP+0
        CFI (cfiCond19) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond20 Using cfiCommon0
        CFI (cfiCond20) NoFunction
        CFI (cfiCond20) Conditional ??CrossCallReturnLabel_228
        CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond20) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond20) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond20) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond20) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond20) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond20) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond20) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond20) CFA_SP SP+0
        CFI (cfiCond20) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond21) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond21) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond21) CFA_SP SP+0
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiPicker22 Using cfiCommon1
        CFI (cfiPicker22) NoFunction
        CFI (cfiPicker22) Picker
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond18
        CFI EndBlock cfiCond19
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiPicker22

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
        CFI Block cfiCond23 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_127
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond24 Using cfiCommon0
        CFI (cfiCond24) NoFunction
        CFI (cfiCond24) Conditional ??CrossCallReturnLabel_128
        CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond24) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond24) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond24) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond24) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond24) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond24) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond24) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond24) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond24) CFA_SP SP+0
        CFI (cfiCond24) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond25 Using cfiCommon0
        CFI (cfiCond25) NoFunction
        CFI (cfiCond25) Conditional ??CrossCallReturnLabel_129
        CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond25) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond25) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond25) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond25) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond25) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond25) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond25) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond25) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond25) CFA_SP SP+0
        CFI (cfiCond25) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiPicker26 Using cfiCommon1
        CFI (cfiPicker26) NoFunction
        CFI (cfiPicker26) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_215:
        RET
        CFI EndBlock cfiCond23
        CFI EndBlock cfiCond24
        CFI EndBlock cfiCond25
        CFI EndBlock cfiPicker26

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
        CFI Block cfiCond27 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_127
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond28 Using cfiCommon0
        CFI (cfiCond28) NoFunction
        CFI (cfiCond28) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_128
        CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond28) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond28) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond28) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond28) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond28) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond28) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond28) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond28) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond28) CFA_SP SP+0
        CFI (cfiCond28) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond29 Using cfiCommon0
        CFI (cfiCond29) NoFunction
        CFI (cfiCond29) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_129
        CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond29) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond29) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond29) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond29) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond29) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond29) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond29) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond29) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond29) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond29) CFA_SP SP+0
        CFI (cfiCond29) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond30 Using cfiCommon0
        CFI (cfiCond30) NoFunction
        CFI (cfiCond30) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_125
        CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond30) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond30) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond30) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond30) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond30) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond30) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond30) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond30) CFA_SP SP+0
        CFI (cfiCond30) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond31 Using cfiCommon0
        CFI (cfiCond31) NoFunction
        CFI (cfiCond31) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_126
        CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond31) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond31) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond31) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond31) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond31) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond31) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond31) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond31) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond31) CFA_SP SP+0
        CFI (cfiCond31) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiPicker32 Using cfiCommon1
        CFI (cfiPicker32) NoFunction
        CFI (cfiPicker32) Picker
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond27
        CFI EndBlock cfiCond28
        CFI EndBlock cfiCond29
        CFI EndBlock cfiCond30
        CFI EndBlock cfiCond31
        CFI EndBlock cfiPicker32

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond33 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond34 Using cfiCommon0
        CFI (cfiCond34) NoFunction
        CFI (cfiCond34) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond34) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond34) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond34) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond34) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond34) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond34) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond34) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond34) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond34) CFA_SP SP+0
        CFI (cfiCond34) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiPicker35 Using cfiCommon1
        CFI (cfiPicker35) NoFunction
        CFI (cfiPicker35) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_557:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOV     R3,A
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond33
        CFI EndBlock cfiCond34
        CFI EndBlock cfiPicker35
//  390 
//  391 /* don't ask me, but the original cJSON_SetNumberValue returns an integer or double */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  392 CJSON_PUBLIC(double) cJSON_SetNumberHelper(cJSON *object, double number)
cJSON_SetNumberHelper:
        CFI Block cfiBlock36 Using cfiCommon0
        CFI Function cJSON_SetNumberHelper
        CODE
//  393 {
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  394     if (number >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??cJSON_SetNumberHelper_0
//  395     {
//  396         object->valueint = INT_MAX;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??cJSON_SetNumberHelper_1
//  397     }
//  398     else if (number <= (double)INT_MIN)
??cJSON_SetNumberHelper_0:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JNC     ??cJSON_SetNumberHelper_2
//  399     {
//  400         object->valueint = INT_MIN;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??cJSON_SetNumberHelper_1
//  401     }
//  402     else
//  403     {
//  404         object->valueint = (int)number;
??cJSON_SetNumberHelper_2:
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
??cJSON_SetNumberHelper_1:
        MOVX    @DPTR,A
//  405     }
//  406 
//  407     return object->valuedouble = number;
        MOV     A,R2
        ADD     A,#0xc
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?XLOAD_R2345
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock36
//  408 }
//  409 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  410 CJSON_PUBLIC(char*) cJSON_SetValuestring(cJSON *object, const char *valuestring)
cJSON_SetValuestring:
        CFI Block cfiBlock37 Using cfiCommon0
        CFI Function cJSON_SetValuestring
        CODE
//  411 {
        FUNCALL cJSON_SetValuestring, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, cJSON_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  412     char *copy = NULL;
//  413     /* if object's type is not cJSON_String or is cJSON_IsReference, it should not set valuestring */
//  414     if (!(object->type & cJSON_String) || (object->type & cJSON_IsReference))
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x10
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        MOV     R1,A
        MOV     A,#0x10
        XRL     A,R0
        JNZ     ??cJSON_SetValuestring_0
        MOV     A,R1
??cJSON_SetValuestring_0:
        JZ      ??cJSON_SetValuestring_1
//  415     {
//  416         return NULL;
??cJSON_SetValuestring_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??cJSON_SetValuestring_3 & 0xFFFF
//  417     }
//  418     if (strlen(valuestring) <= strlen(object->valuestring))
??cJSON_SetValuestring_1:
        ; Setup parameters for call to function strlen
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_102:
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        ; Setup parameters for call to function strlen
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??strlen?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,?V0 + 4
        MOV     A,?V0 + 3
        SUBB    A,?V0 + 5
        JC      ??cJSON_SetValuestring_4
//  419     {
//  420         strcpy(object->valuestring, valuestring);
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        ; Setup parameters for call to function strcpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_405:
        LCALL   ??strcpy?relay
//  421         return object->valuestring;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??cJSON_SetValuestring_5
//  422     }
//  423     copy = (char*) cJSON_strdup((const unsigned char*)valuestring, &global_hooks);
??cJSON_SetValuestring_4:
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_strdup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
//  424     if (copy == NULL)
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_SetValuestring_2
//  425     {
//  426         return NULL;
//  427     }
//  428     if (object->valuestring != NULL)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_498:
        JZ      ??CrossCallReturnLabel_104
//  429     {
//  430         cJSON_free(object->valuestring);
        ; Setup parameters for call to function cJSON_free
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine67 & 0xFFFF
//  431     }
//  432     object->valuestring = copy;
??CrossCallReturnLabel_104:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  433 
//  434     return copy;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
??cJSON_SetValuestring_5:
        MOV     R3,A
??cJSON_SetValuestring_3:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock37
//  435 }
//  436 
//  437 typedef struct
//  438 {
//  439     unsigned char *buffer;
//  440     size_t length;
//  441     size_t offset;
//  442     size_t depth; /* current nesting depth (for formatted printing) */
//  443     cJSON_bool noalloc;
//  444     cJSON_bool format; /* is this print a formatted print */
//  445     internal_hooks hooks;
//  446 } printbuffer;
//  447 
//  448 /* realloc printbuffer if necessary to have at least "needed" bytes more */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  449 static unsigned char* ensure(printbuffer * const p, size_t needed)
ensure:
        CFI Block cfiBlock38 Using cfiCommon0
        CFI Function ensure
        CODE
//  450 {
        FUNCALL ensure, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  451     unsigned char *newbuffer = NULL;
//  452     size_t newsize = 0;
//  453 
//  454     if ((p == NULL) || (p->buffer == NULL))
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??ensure_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_461:
        JNZ     ??ensure_1
//  455     {
//  456         return NULL;
??ensure_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??ensure_2 & 0xFFFF
//  457     }
//  458 
//  459     if ((p->length > 0) && (p->offset >= p->length))
??ensure_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_488:
        JZ      ??ensure_3
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_8:
        JNC     ??ensure_0
//  460     {
//  461         /* make sure that offset is valid */
//  462         return NULL;
//  463     }
//  464 
//  465     if (needed > INT_MAX)
??ensure_3:
        CLR     C
        MOV     A,R5
        SUBB    A,#-0x80
        JNC     ??ensure_0
//  466     {
//  467         /* sizes bigger than INT_MAX are currently not supported */
//  468         return NULL;
//  469     }
//  470 
//  471     needed += p->offset + 1;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_39:
        MOV     A,R4
        ADD     A,R0
        MOV     R4,A
        MOV     A,R5
        ADDC    A,R1
        MOV     R5,A
//  472     if (needed <= p->length)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R4
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R5
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JC      ??ensure_4
//  473     {
//  474         return p->buffer + p->offset;
        DEC     R0
        LCALL   ?Subroutine52 & 0xFFFF
//  475     }
??CrossCallReturnLabel_79:
        LJMP    ??ensure_5 & 0xFFFF
//  476 
//  477     if (p->noalloc) {
??ensure_4:
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_490:
        JNZ     ??ensure_0
//  478         return NULL;
//  479     }
//  480 
//  481     /* calculate new buffer size */
//  482     if (needed > (INT_MAX / 2))
        CLR     C
        MOV     A,R5
        SUBB    A,#0x40
        JC      ??ensure_6
//  483     {
//  484         /* overflow of int, use INT_MAX if possible */
//  485         if (needed <= INT_MAX)
        CLR     C
        MOV     A,R5
        SUBB    A,#-0x80
        JNC     ??ensure_0
//  486         {
//  487             newsize = INT_MAX;
        MOV     R6,#-0x1
        MOV     R7,#0x7f
        SJMP    ??ensure_7
//  488         }
//  489         else
//  490         {
//  491             return NULL;
//  492         }
//  493     }
//  494     else
//  495     {
//  496         newsize = needed * 2;
??ensure_6:
        MOV     A,R4
        CLR     C
        RLC     A
        MOV     R4,A
        MOV     A,R5
        RLC     A
        MOV     R5,A
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  497     }
//  498 
//  499     if (p->hooks.reallocate != NULL)
??ensure_7:
        MOV     A,R2
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_639:
        MOV     A,R3
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_352:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_462:
        JZ      ??ensure_8
//  500     {
//  501         /* reallocate with realloc if available */
//  502         newbuffer = (unsigned char*)p->hooks.reallocate(p->buffer, newsize);
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_606:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  503         if (newbuffer == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??ensure_9
//  504         {
//  505             p->hooks.deallocate(p->buffer);
??ensure_10:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL   ?CALL_IND
//  506             p->length = 0;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine163_0 & 0xFFFF
//  507             p->buffer = NULL;
//  508 
//  509             return NULL;
//  510         }
//  511     }
??CrossCallReturnLabel_250:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        LJMP    ??ensure_0 & 0xFFFF
//  512     else
//  513     {
//  514         /* otherwise reallocate manually */
//  515         newbuffer = (unsigned char*)p->hooks.allocate(newsize);
??ensure_8:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  516         if (!newbuffer)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??ensure_10
//  517         {
//  518             p->hooks.deallocate(p->buffer);
//  519             p->length = 0;
//  520             p->buffer = NULL;
//  521 
//  522             return NULL;
//  523         }
//  524 
//  525         memcpy(newbuffer, p->buffer, p->offset + 1);
        ; Setup parameters for call to function memcpy
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_49:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  526         p->hooks.deallocate(p->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine26 & 0xFFFF
//  527     }
??CrossCallReturnLabel_29:
        LCALL   ?CALL_IND
//  528     p->length = newsize;
??ensure_9:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine99 & 0xFFFF
//  529     p->buffer = newbuffer;
??CrossCallReturnLabel_248:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ??Subroutine163_0 & 0xFFFF
//  530 
//  531     return newbuffer + p->offset;
??CrossCallReturnLabel_251:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_618:
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
??ensure_5:
        ADDC    A,R1
        MOV     R3,A
??ensure_2:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock38
//  532 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
        CFI Block cfiCond39 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_139
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond41 Using cfiCommon0
        CFI (cfiCond41) NoFunction
        CFI (cfiCond41) Conditional ??CrossCallReturnLabel_141
        CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond41) CFA_SP SP+0
        CFI (cfiCond41) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker42 Using cfiCommon1
        CFI (cfiPicker42) NoFunction
        CFI (cfiPicker42) Picker
        MOV     A,?V0 + 0
        ADD     A,#0xc
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_651:
        RET
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiCond41
        CFI EndBlock cfiPicker42

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond43 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond44 Using cfiCommon0
        CFI (cfiCond44) NoFunction
        CFI (cfiCond44) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond44) CFA_SP SP+0
        CFI (cfiCond44) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker45 Using cfiCommon1
        CFI (cfiPicker45) NoFunction
        CFI (cfiPicker45) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_549:
        MOV     A,?V0 + 0
        ADD     A,#0xe
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_649:
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_280:
        RET
        CFI EndBlock cfiCond43
        CFI EndBlock cfiCond44
        CFI EndBlock cfiPicker45
//  533 
//  534 /* calculate the new length of the string in a printbuffer and update the offset */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  535 static void update_offset(printbuffer * const buffer)
update_offset:
        CFI Block cfiBlock46 Using cfiCommon0
        CFI Function update_offset
        CODE
//  536 {
        FUNCALL update_offset, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  537     const unsigned char *buffer_pointer = NULL;
//  538     if ((buffer == NULL) || (buffer->buffer == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??CrossCallReturnLabel_84
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_463:
        JZ      ??CrossCallReturnLabel_84
//  539     {
//  540         return;
//  541     }
//  542     buffer_pointer = buffer->buffer + buffer->offset;
//  543 
//  544     buffer->offset += strlen((const char*)buffer_pointer);
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        ; Setup parameters for call to function strlen
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_80:
        ADDC    A,R1
        MOV     R3,A
        LCALL   ??strlen?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine55 & 0xFFFF
//  545 }
??CrossCallReturnLabel_84:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock46

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
        CFI Block cfiCond47 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond48 Using cfiCommon0
        CFI (cfiCond48) NoFunction
        CFI (cfiCond48) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond48) CFA_SP SP+0
        CFI (cfiCond48) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_85
        CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond49) CFA_SP SP+0
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker50 Using cfiCommon1
        CFI (cfiPicker50) NoFunction
        CFI (cfiPicker50) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond47
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiPicker50

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
        CFI Block cfiCond51 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_79
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond52 Using cfiCommon0
        CFI (cfiCond52) NoFunction
        CFI (cfiCond52) Conditional ??CrossCallReturnLabel_80
        CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond52) CFA_SP SP+0
        CFI (cfiCond52) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker53 Using cfiCommon1
        CFI (cfiPicker53) NoFunction
        CFI (cfiPicker53) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond51
        CFI EndBlock cfiCond52
        CFI EndBlock cfiPicker53
//  546 
//  547 /* securely comparison of floating-point variables */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  548 static cJSON_bool compare_double(double a, double b)
compare_double:
        CFI Block cfiBlock54 Using cfiCommon0
        CFI Function compare_double
        CODE
//  549 {
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  550     double maxVal = fabs(a) > fabs(b) ? fabs(a) : fabs(b);
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     A,?V0 + 11
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 11,A
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 14,R4
        MOV     A,R5
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 15,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_LT
        JNC     ??compare_double_0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 10,R4
        MOV     A,R5
        SJMP    ??compare_double_1
??compare_double_0:
        MOV     ?V0 + 11,?V0 + 7
        MOV     A,?V0 + 11
??compare_double_1:
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 11,A
//  551     return (fabs(a - b) <= maxVal * DBL_EPSILON);
        MOV     DPTR,#__Constant_34000000
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     A,?V0 + 3
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??compare_double_2
        SETB    B.0
        SJMP    ??compare_double_3
??compare_double_2:
        CLR     B.0
??compare_double_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
        MOV     R3,#0x0
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock54
//  552 }
//  553 
//  554 /* Render the number nicely from the given item into a string. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  555 static cJSON_bool print_number(const cJSON * const item, printbuffer * const output_buffer)
print_number:
        CFI Block cfiBlock55 Using cfiCommon0
        CFI Function print_number
        CODE
//  556 {
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 52, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 52, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sscanf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 52, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 52, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, compare_double
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 30
        MOV     A,#-0x1e
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  557     unsigned char *output_pointer = NULL;
//  558     double d = item->valuedouble;
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_145:
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  559     int length = 0;
//  560     size_t i = 0;
//  561     unsigned char number_buffer[26] = {0}; /* temporary buffer to print the number into */
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>` & 0xff
        MOV     A,#0x1a
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  562     unsigned char decimal_point = get_decimal_point();
//  563     double test = 0.0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R2345
//  564 
//  565     if (output_buffer == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??print_number_0
//  566     {
//  567         return false;
??print_number_1:
        MOV     R2,#0x0
        LJMP    ??print_number_2 & 0xFFFF
//  568     }
//  569 
//  570     /* This checks for NaN and Infinity */
//  571     if (isnan(d) || isinf(d))
??print_number_0:
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_EQ
        JNZ     ??print_number_3
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_EQ
        JZ      ??print_number_4
//  572     {
//  573         length = sprintf((char*)number_buffer, "null");
??print_number_3:
        ; Setup parameters for call to function sprintf
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        LJMP    ??print_number_5 & 0xFFFF
//  574     }
//  575 	else if(d == (double)item->valueint)
??print_number_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL   ?L_TO_FLT
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_EQ
        JNZ     ??print_number_6
//  576 	{
//  577 		length = sprintf((char*)number_buffer, "%d", item->valueint);
        ; Setup parameters for call to function sprintf
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
        CFI CFA_XSP16 add(XSP16, 52)
        MOV     R4,#`?<Constant "%d">` & 0xff
        MOV     R5,#(`?<Constant "%d">` >> 8) & 0xff
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
        LJMP    ??print_number_5 & 0xFFFF
//  578 	}
//  579     else
//  580     {
//  581         /* Try 15 decimal places of precision to avoid nonsignificant nonzero digits */
//  582         length = sprintf((char*)number_buffer, "%1.15g", d);
??print_number_6:
        ; Setup parameters for call to function sprintf
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 54)
        MOV     R4,#`?<Constant "%1.15g">` & 0xff
        MOV     R5,#(`?<Constant "%1.15g">` >> 8) & 0xff
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  583 
//  584         /* Check whether the original double can be recovered */
//  585         if ((sscanf((char*)number_buffer, "%lg", &test) != 1) || !compare_double((double)test, d))
        ; Setup parameters for call to function sscanf
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 52)
        MOV     R4,#`?<Constant "%lg">` & 0xff
        MOV     R5,#(`?<Constant "%lg">` >> 8) & 0xff
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sscanf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V0 + 2,R2
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??print_number_7
        MOV     A,R3
??print_number_7:
        JNZ     ??print_number_8
        ; Setup parameters for call to function compare_double
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 54)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   ??compare_double?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??print_number_9
//  586         {
//  587             /* If not, print with 17 decimal places of precision */
//  588             length = sprintf((char*)number_buffer, "%1.17g", d);
??print_number_8:
        ; Setup parameters for call to function sprintf
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 54)
        MOV     R4,#`?<Constant "%1.17g">` & 0xff
        MOV     R5,#(`?<Constant "%1.17g">` >> 8) & 0xff
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 50)
??print_number_5:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  589         }
//  590     }
//  591 
//  592     /* sprintf failed or buffer overrun occurred */
//  593     if ((length < 0) || (length > (int)(sizeof(number_buffer) - 1)))
??print_number_9:
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,#0x1a
        MOV     A,?V0 + 1
        SUBB    A,#0x0
        JC      $+5
        LJMP    ??print_number_1 & 0xFFFF
//  594     {
//  595         return false;
//  596     }
//  597 
//  598     /* reserve appropriate space in the output */
//  599     output_pointer = ensure(output_buffer, (size_t)length + sizeof(""));
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ??Subroutine171_0 & 0xFFFF
//  600     if (output_pointer == NULL)
??CrossCallReturnLabel_308:
        JNZ     $+5
        LJMP    ??print_number_1 & 0xFFFF
//  601     {
//  602         return false;
//  603     }
//  604 
//  605     /* copy the printed number to the output and replace locale
//  606      * dependent decimal point with '.' */
//  607     for (i = 0; i < ((size_t)length); i++)
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??CrossCallReturnLabel_229
//  608     {
//  609         if (number_buffer[i] == decimal_point)
//  610         {
//  611             output_pointer[i] = '.';
//  612             continue;
//  613         }
//  614 
//  615         output_pointer[i] = number_buffer[i];
??print_number_10:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_125:
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_122:
        POP     A
        CFI CFA_SP SP+0
??print_number_11:
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_229:
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 0
        MOV     A,R1
        SUBB    A,?V0 + 1
        JNC     ??print_number_12
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_126:
        XRL     A,#0x2e
        JNZ     ??print_number_10
        LCALL   ?Subroutine79 & 0xFFFF
//  616     }
??CrossCallReturnLabel_123:
        MOV     A,#0x2e
        SJMP    ??print_number_11
//  617     output_pointer[i] = '\0';
??print_number_12:
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL   ??Subroutine179_0 & 0xFFFF
//  618 
//  619     output_buffer->offset += (size_t)length;
??CrossCallReturnLabel_345:
        ADD     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 1
        MOVX    @DPTR,A
//  620 
//  621     return true;
        MOV     R2,#0x1
??print_number_2:
        MOV     R3,#0x0
        MOV     A,#0x1e
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock55
//  622 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
        CFI Block cfiCond56 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_125
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond57 Using cfiCommon0
        CFI (cfiCond57) NoFunction
        CFI (cfiCond57) Conditional ??CrossCallReturnLabel_126
        CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond57) CFA_SP SP+0
        CFI (cfiCond57) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiPicker58 Using cfiCommon1
        CFI (cfiPicker58) NoFunction
        CFI (cfiPicker58) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_214:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond56
        CFI EndBlock cfiCond57
        CFI EndBlock cfiPicker58

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
        CFI Block cfiCond59 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_122
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond60 Using cfiCommon0
        CFI (cfiCond60) NoFunction
        CFI (cfiCond60) Conditional ??CrossCallReturnLabel_123
        CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond60) CFA_SP SP+0
        CFI (cfiCond60) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond61 Using cfiCommon0
        CFI (cfiCond61) NoFunction
        CFI (cfiCond61) Conditional ??CrossCallReturnLabel_124
        CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond61) CFA_SP SP+0
        CFI (cfiCond61) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiPicker62 Using cfiCommon1
        CFI (cfiPicker62) NoFunction
        CFI (cfiPicker62) Picker
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond59
        CFI EndBlock cfiCond60
        CFI EndBlock cfiCond61
        CFI EndBlock cfiPicker62
//  623 
//  624 /* parse 4 digit hexadecimal number */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  625 static unsigned parse_hex4(const unsigned char * const input)
parse_hex4:
        CFI Block cfiBlock63 Using cfiCommon0
        CFI Function parse_hex4
        CODE
//  626 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  627     unsigned int h = 0;
        MOV     R0,#0x0
        MOV     R1,#0x0
//  628     size_t i = 0;
//  629 
//  630     for (i = 0; i < 4; i++)
        MOV     R4,#0x0
        MOV     R5,#0x0
//  631     {
//  632         /* parse digit */
//  633         if ((input[i] >= '0') && (input[i] <= '9'))
??parse_hex4_0:
        MOV     A,R2
        ADD     A,R4
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R5
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#-0x30
        CLR     C
        SUBB    A,#0xa
        MOVX    A,@DPTR
        JNC     ??parse_hex4_1
//  634         {
//  635             h += (unsigned int) input[i] - '0';
        ADD     A,#-0x30
??parse_hex4_2:
        MOV     R6,A
        CLR     A
        ADDC    A,#-0x1
        MOV     R7,A
        MOV     A,R0
        ADD     A,R6
        MOV     R0,A
        MOV     A,R1
        ADDC    A,R7
        MOV     R1,A
//  636         }
//  637         else if ((input[i] >= 'A') && (input[i] <= 'F'))
//  638         {
//  639             h += (unsigned int) 10 + input[i] - 'A';
//  640         }
//  641         else if ((input[i] >= 'a') && (input[i] <= 'f'))
//  642         {
//  643             h += (unsigned int) 10 + input[i] - 'a';
//  644         }
//  645         else /* invalid */
//  646         {
//  647             return 0;
//  648         }
//  649 
//  650         if (i < 3)
        CLR     C
        MOV     A,R4
        SUBB    A,#0x3
        MOV     A,R5
        SUBB    A,#0x0
        JNC     ??parse_hex4_3
//  651         {
//  652             /* shift left to make place for the next nibble */
//  653             h = h << 4;
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
//  654         }
??parse_hex4_3:
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_371:
        CLR     C
        MOV     A,R4
        SUBB    A,#0x4
        MOV     A,R5
        SUBB    A,#0x0
        JC      ??parse_hex4_0
//  655     }
//  656 
//  657     return h;
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
??parse_hex4_4:
        LJMP    ??Subroutine162_0 & 0xFFFF
??parse_hex4_1:
        ADD     A,#-0x41
        CLR     C
        SUBB    A,#0x6
        MOVX    A,@DPTR
        JNC     ??parse_hex4_5
        ADD     A,#-0x37
        SJMP    ??parse_hex4_2
??parse_hex4_5:
        ADD     A,#-0x61
        CLR     C
        SUBB    A,#0x6
        JNC     ??parse_hex4_6
        MOVX    A,@DPTR
        ADD     A,#-0x57
        SJMP    ??parse_hex4_2
??parse_hex4_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??parse_hex4_4
        CFI EndBlock cfiBlock63
//  658 }
//  659 
//  660 /* converts a UTF-16 literal to UTF-8
//  661  * A literal can be one or two sequences of the form \uXXXX */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  662 static unsigned char utf16_literal_to_utf8(const unsigned char * const input_pointer, const unsigned char * const input_end, unsigned char **output_pointer)
utf16_literal_to_utf8:
        CFI Block cfiBlock64 Using cfiCommon0
        CFI Function utf16_literal_to_utf8
        CODE
//  663 {
        FUNCALL utf16_literal_to_utf8, parse_hex4
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL utf16_literal_to_utf8, parse_hex4
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine59 & 0xFFFF
//  664     long unsigned int codepoint = 0;
//  665     unsigned int first_code = 0;
//  666     const unsigned char *first_sequence = input_pointer;
//  667     unsigned char utf8_length = 0;
//  668     unsigned char utf8_position = 0;
//  669     unsigned char sequence_length = 0;
//  670     unsigned char first_byte_mark = 0;
??CrossCallReturnLabel_90:
        MOV     R7,#0x0
//  671 
//  672     if ((input_end - first_sequence) < 6)
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 0
        MOV     R0,A
        MOV     A,R5
        SUBB    A,?V0 + 1
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x6
        MOV     A,R1
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_507:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  673     {
//  674         /* input ends unexpectedly */
//  675         goto fail;
//  676     }
//  677 
//  678     /* get the first utf16 sequence */
//  679     first_code = parse_hex4(first_sequence + 2);
        ; Setup parameters for call to function parse_hex4
        MOV     A,R2
        ADD     A,#0x2
        INC     R2
        INC     R2
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??parse_hex4?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
//  680 
//  681     /* check that the code is valid */
//  682     if (((first_code >= 0xDC00) && (first_code <= 0xDFFF)))
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_183:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  683     {
//  684         goto fail;
//  685     }
//  686 
//  687     /* UTF16 surrogate pair */
//  688     if ((first_code >= 0xD800) && (first_code <= 0xDBFF))
        MOV     A,R2
        ADD     A,#0x0
        MOV     A,R3
        ADDC    A,#0x28
        CLR     C
        SUBB    A,#0x4
        JNC     ??utf16_literal_to_utf8_1
//  689     {
//  690         const unsigned char *second_sequence = first_sequence + 6;
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
//  691         unsigned int second_code = 0;
//  692         sequence_length = 12; /* \uXXXX\uXXXX */
        MOV     R6,#0xc
//  693 
//  694         if ((input_end - second_sequence) < 6)
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
        SUBB    A,R1
        MOV     R3,A
        CLR     C
        MOV     A,R2
        SUBB    A,#0x6
        MOV     A,R3
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_508:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  695         {
//  696             /* input ends unexpectedly */
//  697             goto fail;
//  698         }
//  699 
//  700         if ((second_sequence[0] != '\\') || (second_sequence[1] != 'u'))
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JZ      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x75
        JZ      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  701         {
//  702             /* missing second half of the surrogate pair */
//  703             goto fail;
//  704         }
//  705 
//  706         /* get the second utf16 sequence */
//  707         second_code = parse_hex4(second_sequence + 2);
        ; Setup parameters for call to function parse_hex4
        MOV     A,R0
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??parse_hex4?relay
        MOV     ?V0 + 0,R2
//  708         /* check that the code is valid */
//  709         if ((second_code < 0xDC00) || (second_code > 0xDFFF))
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_184:
        JC      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  710         {
//  711             /* invalid second half of the surrogate pair */
//  712             goto fail;
//  713         }
//  714 
//  715 
//  716         /* calculate the unicode codepoint from the surrogate pair */
//  717         codepoint = 0x10000 + (((first_code & 0x3FF) << 10) | (second_code & 0x3FF));
        MOV     A,#0xa
        MOV     R0,#?V0 + 6
        LCALL   ?S_SHL
        MOV     A,R3
        ANL     A,#0x3
        MOV     R1,A
        MOV     A,?V0 + 7
        ORL     A,R1
        MOV     ?V0 + 1,A
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     DPTR,#__Constant_10000
        MOV     R0,#?V0 + 0
        LCALL   ?L_ADD_X
        SJMP    ??utf16_literal_to_utf8_2
//  718     }
//  719     else
//  720     {
//  721         sequence_length = 6; /* \uXXXX */
??utf16_literal_to_utf8_1:
        MOV     R6,#0x6
//  722         codepoint = first_code;
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
//  723     }
//  724 
//  725     /* encode as UTF-8
//  726      * takes at maximum 4 bytes to encode:
//  727      * 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx */
//  728     if (codepoint < 0x80)
??utf16_literal_to_utf8_2:
        MOV     DPTR,#__Constant_80
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_3
//  729     {
//  730         /* normal ascii, encoding 0xxxxxxx */
//  731         utf8_length = 1;
        MOV     R1,#0x1
        SJMP    ??utf16_literal_to_utf8_4
//  732     }
//  733     else if (codepoint < 0x800)
??utf16_literal_to_utf8_3:
        MOV     DPTR,#__Constant_800
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_5
//  734     {
//  735         /* two bytes, encoding 110xxxxx 10xxxxxx */
//  736         utf8_length = 2;
        MOV     R1,#0x2
//  737         first_byte_mark = 0xC0; /* 11000000 */
        MOV     R7,#-0x40
        SJMP    ??utf16_literal_to_utf8_4
//  738     }
//  739     else if (codepoint < 0x10000)
??utf16_literal_to_utf8_5:
        MOV     DPTR,#__Constant_10000
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_6
//  740     {
//  741         /* three bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx */
//  742         utf8_length = 3;
        MOV     R1,#0x3
//  743         first_byte_mark = 0xE0; /* 11100000 */
        MOV     R7,#-0x20
        SJMP    ??utf16_literal_to_utf8_4
//  744     }
//  745     else if (codepoint <= 0x10FFFF)
??utf16_literal_to_utf8_6:
        MOV     DPTR,#__Constant_110000
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_0
//  746     {
//  747         /* four bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx */
//  748         utf8_length = 4;
        MOV     R1,#0x4
//  749         first_byte_mark = 0xF0; /* 11110000 */
        MOV     R7,#-0x10
//  750     }
//  751     else
//  752     {
//  753         /* invalid unicode codepoint */
//  754         goto fail;
//  755     }
//  756 
//  757     /* encode as utf8 */
//  758     for (utf8_position = (unsigned char)(utf8_length - 1); utf8_position > 0; utf8_position--)
??utf16_literal_to_utf8_4:
        MOV     A,#-0x1
        ADD     A,R1
        MOV     R2,A
        SJMP    ??utf16_literal_to_utf8_7
//  759     {
//  760         /* 10xxxxxx */
//  761         (*output_pointer)[utf8_position] = (unsigned char)((codepoint | 0x80) & 0xBF);
??utf16_literal_to_utf8_8:
        MOV     A,?V0 + 0
        ANL     A,#0xbf
        ORL     A,#0x80
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,R2
        MOV     R4,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R0
        MOV     DPH,A
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  762         codepoint >>= 6;
        MOV     A,#0x6
        MOV     R0,#?V0 + 0
        LCALL   ?UL_SHR
//  763     }
        DEC     R2
??utf16_literal_to_utf8_7:
        MOV     A,R2
        JNZ     ??utf16_literal_to_utf8_8
//  764     /* encode first byte */
//  765     if (utf8_length > 1)
        MOV     A,R1
        CLR     C
        SUBB    A,#0x2
        MOV     A,?V0 + 0
        JC      ??utf16_literal_to_utf8_9
//  766     {
//  767         (*output_pointer)[0] = (unsigned char)((codepoint | first_byte_mark) & 0xFF);
        ORL     A,R7
        SJMP    ??utf16_literal_to_utf8_10
//  768     }
//  769     else
//  770     {
//  771         (*output_pointer)[0] = (unsigned char)(codepoint & 0x7F);
??utf16_literal_to_utf8_9:
        ANL     A,#0x7f
??utf16_literal_to_utf8_10:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
//  772     }
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_258:
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  773 
//  774     *output_pointer += utf8_length;
        MOV     A,R1
        MOV     R0,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine200_0 & 0xFFFF
//  775 
//  776     return sequence_length;
??CrossCallReturnLabel_432:
        MOV     A,R6
        MOV     R1,A
        SJMP    ??utf16_literal_to_utf8_11
//  777 
//  778 fail:
//  779     return 0;
??utf16_literal_to_utf8_0:
        MOV     R1,#0x0
??utf16_literal_to_utf8_11:
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock64
//  780 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
        CFI Block cfiCond65 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_183
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond66 Using cfiCommon0
        CFI (cfiCond66) NoFunction
        CFI (cfiCond66) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond66) CFA_SP SP+0
        CFI (cfiCond66) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker67 Using cfiCommon1
        CFI (cfiPicker67) NoFunction
        CFI (cfiPicker67) Picker
        MOV     A,R2
        ADD     A,#0x0
        MOV     A,R3
        ADDC    A,#0x24
        CLR     C
        SUBB    A,#0x4
        RET
        CFI EndBlock cfiCond65
        CFI EndBlock cfiCond66
        CFI EndBlock cfiPicker67
//  781 
//  782 /* Parse the input text into an unescaped cinput, and populate item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  783 static cJSON_bool parse_string(cJSON * const item, parse_buffer * const input_buffer)
parse_string:
        CFI Block cfiBlock68 Using cfiCommon0
        CFI Function parse_string
        CODE
//  784 {
        FUNCALL parse_string, utf16_literal_to_utf8
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_234:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  785     const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
//  786     const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  787     unsigned char *output_pointer = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  788     unsigned char *output = NULL;
//  789 
//  790     /* not a string */
//  791     if (buffer_at_offset(input_buffer)[0] != '\"')
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  792     {
//  793         goto fail;
//  794     }
//  795 
//  796     {
//  797         /* calculate approximate size of the output (overestimate) */
//  798         size_t allocation_length = 0;
//  799         size_t skipped_bytes = 0;
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??parse_string_1
//  800         while (((size_t)(input_end - input_buffer->content) < input_buffer->length) && (*input_end != '\"'))
//  801         {
//  802             /* is escape sequence */
//  803             if (input_end[0] == '\\')
??parse_string_2:
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JNZ     ??parse_string_3
//  804             {
//  805                 if ((size_t)(input_end + 1 - input_buffer->content) >= input_buffer->length)
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_406:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,DPL
        CLR     C
        SUBB    A,R2
        MOV     R4,A
        MOV     A,DPH
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_367:
        JC      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  806                 {
//  807                     /* prevent buffer overflow when last input character is a backslash */
//  808                     goto fail;
//  809                 }
//  810                 skipped_bytes++;
        LCALL   ??Subroutine153_0 & 0xFFFF
//  811                 input_end++;
??CrossCallReturnLabel_230:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  812             }
//  813             input_end++;
??parse_string_3:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  814         }
??parse_string_1:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_407:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R2
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_368:
        JC      $+5
        LJMP    ??parse_string_0 & 0xFFFF
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        XRL     A,#0x22
        JNZ     ??parse_string_2
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  815         if (((size_t)(input_end - input_buffer->content) >= input_buffer->length) || (*input_end != '\"'))
//  816         {
//  817             goto fail; /* string ended unexpectedly */
//  818         }
//  819 
//  820         /* This is at most how much we need for the output */
//  821         allocation_length = (size_t) (input_end - buffer_at_offset(input_buffer)) - skipped_bytes;
//  822         output = (unsigned char*)input_buffer->hooks.allocate(allocation_length + sizeof(""));
        ; Setup parameters for indirect call
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_86:
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOV     R3,A
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        MOV     A,?V0 + 3
        SUBB    A,R3
        MOV     R3,A
        MOV     A,R2
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,R3
        SUBB    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x1
        MOV     R2,A
        MOV     A,R1
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_150:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL   ?CALL_IND
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
//  823         if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  824         {
//  825             goto fail; /* allocation failure */
//  826         }
//  827     }
//  828 
//  829     output_pointer = output;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        SJMP    ??parse_string_4
//  830     /* loop through the string literal */
//  831     while (input_pointer < input_end)
//  832     {
//  833         if (*input_pointer != '\\')
//  834         {
//  835             *output_pointer++ = *input_pointer++;
??parse_string_5:
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine72 & 0xFFFF
//  836         }
??CrossCallReturnLabel_272:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_176:
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_40:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??parse_string_4:
        MOVX    @DPTR,A
??parse_string_6:
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 2
        MOV     A,R7
        SUBB    A,?V0 + 3
        JC      $+5
        LJMP    ??parse_string_7 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JNZ     ??parse_string_5
//  837         /* escape sequence */
//  838         else
//  839         {
//  840             unsigned char sequence_length = 2;
        MOV     ?V0 + 8,#0x2
//  841             if ((input_end - input_pointer) < 1)
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R6
        MOV     R0,A
        MOV     A,?V0 + 3
        SUBB    A,R7
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x1
        MOV     A,R1
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_509:
        JNC     $+5
        LJMP    ??parse_string_8 & 0xFFFF
//  842             {
//  843                 goto fail;
//  844             }
//  845 
//  846             switch (input_pointer[1])
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#-0x22
        JZ      ??parse_string_9
        ADD     A,#-0xd
        JZ      ??parse_string_9
        ADD     A,#-0x2d
        JZ      ??parse_string_9
        ADD     A,#-0x6
        JZ      ??parse_string_10
        ADD     A,#-0x4
        JZ      ??parse_string_11
        ADD     A,#-0x8
        JZ      ??parse_string_12
        ADD     A,#-0x4
        JZ      ??parse_string_13
        ADD     A,#-0x2
        JZ      ??parse_string_14
        DEC     A
        JZ      ??parse_string_15
        LJMP    ??parse_string_8 & 0xFFFF
//  847             {
//  848                 case 'b':
//  849                     *output_pointer++ = '\b';
??parse_string_10:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV     A,#0x8
??parse_string_16:
        LCALL   ?Subroutine32 & 0xFFFF
//  850                     break;
??CrossCallReturnLabel_38:
        SJMP    ??parse_string_17
//  851                 case 'f':
//  852                     *output_pointer++ = '\f';
??parse_string_11:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV     A,#0xc
        SJMP    ??parse_string_16
//  853                     break;
//  854                 case 'n':
//  855                     *output_pointer++ = '\n';
??parse_string_12:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV     A,#0xa
        SJMP    ??parse_string_16
//  856                     break;
//  857                 case 'r':
//  858                     *output_pointer++ = '\r';
??parse_string_13:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV     A,#0xd
        SJMP    ??parse_string_16
//  859                     break;
//  860                 case 't':
//  861                     *output_pointer++ = '\t';
??parse_string_14:
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_277:
        MOV     A,#0x9
        SJMP    ??parse_string_16
//  862                     break;
//  863                 case '\"':
//  864                 case '\\':
//  865                 case '/':
//  866                     *output_pointer++ = input_pointer[1];
??parse_string_9:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_278:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??parse_string_16
//  867                     break;
//  868 
//  869                 /* UTF-16 literal */
//  870                 case 'u':
//  871                     sequence_length = utf16_literal_to_utf8(input_pointer, input_end, &output_pointer);
??parse_string_15:
        ; Setup parameters for call to function utf16_literal_to_utf8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 8,DPL
        MOV     ?V0 + 9,DPH
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??utf16_literal_to_utf8?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 8,A
//  872                     if (sequence_length == 0)
        JZ      ??parse_string_8
//  873                     {
//  874                         /* failed to convert UTF16-literal to UTF-8 */
//  875                         goto fail;
//  876                     }
//  877                     break;
//  878 
//  879                 default:
//  880                     goto fail;
//  881             }
//  882             input_pointer += sequence_length;
??parse_string_17:
        MOV     A,R6
        ADD     A,?V0 + 8
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        LJMP    ??parse_string_6 & 0xFFFF
//  883         }
//  884     }
//  885 
//  886     /* zero terminate the output */
//  887     *output_pointer = '\0';
??parse_string_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine65 & 0xFFFF
//  888 
//  889     item->type = cJSON_String;
??CrossCallReturnLabel_100:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        LCALL   ?Subroutine100 & 0xFFFF
//  890     item->valuestring = (char*)output;
??CrossCallReturnLabel_159:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ??Subroutine163_0 & 0xFFFF
//  891 
//  892     input_buffer->offset = (size_t) (input_end - input_buffer->content);
//  893     input_buffer->offset++;
??CrossCallReturnLabel_252:
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_613:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,?V0 + 3
        SUBB    A,R1
        MOV     R1,A
        LCALL   ??Subroutine153_0 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL   ?Subroutine98 & 0xFFFF
//  894 
//  895     return true;
??CrossCallReturnLabel_453:
        MOV     R2,#0x1
        SJMP    ??parse_string_18
//  896 
//  897 fail:
//  898     if (output != NULL)
//  899     {
//  900         input_buffer->hooks.deallocate(output);
??parse_string_8:
        ; Setup parameters for indirect call
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
//  901     }
??CrossCallReturnLabel_260:
        LCALL   ?CALL_IND
//  902 
//  903     if (input_pointer != NULL)
??parse_string_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_454
//  904     {
//  905         input_buffer->offset = (size_t)(input_pointer - input_buffer->content);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine46 & 0xFFFF
//  906     }
??CrossCallReturnLabel_69:
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,R7
        SUBB    A,R1
        MOV     R1,A
        LCALL   ?Subroutine98 & 0xFFFF
//  907 
//  908     return false;
??CrossCallReturnLabel_454:
        MOV     R2,#0x0
??parse_string_18:
        MOV     R3,#0x0
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock68
//  909 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
        CFI Block cfiCond69 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_234
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond70 Using cfiCommon0
        CFI (cfiCond70) NoFunction
        CFI (cfiCond70) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond70) CFA_SP SP+0
        CFI (cfiCond70) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker71 Using cfiCommon1
        CFI (cfiPicker71) NoFunction
        CFI (cfiPicker71) Picker
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond69
        CFI EndBlock cfiCond70
        CFI EndBlock cfiPicker71
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine154_0:
        CFI Block cfiCond72 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_233
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond73 Using cfiCommon0
        CFI (cfiCond73) NoFunction
        CFI (cfiCond73) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond73) CFA_SP SP+0
        CFI (cfiCond73) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond74 Using cfiCommon0
        CFI (cfiCond74) NoFunction
        CFI (cfiCond74) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond74) CFA_SP SP+0
        CFI (cfiCond74) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker75 Using cfiCommon1
        CFI (cfiPicker75) NoFunction
        CFI (cfiPicker75) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond72
        CFI EndBlock cfiCond73
        CFI EndBlock cfiCond74
        CFI EndBlock cfiPicker75
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine155_0:
        CFI Block cfiCond76 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_232
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond77 Using cfiCommon0
        CFI (cfiCond77) NoFunction
        CFI (cfiCond77) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond77) CFA_SP SP+0
        CFI (cfiCond77) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond78 Using cfiCommon0
        CFI (cfiCond78) NoFunction
        CFI (cfiCond78) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond78) CFA_SP SP+0
        CFI (cfiCond78) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond79 Using cfiCommon0
        CFI (cfiCond79) NoFunction
        CFI (cfiCond79) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond79) CFA_SP SP+0
        CFI (cfiCond79) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker80 Using cfiCommon1
        CFI (cfiPicker80) NoFunction
        CFI (cfiPicker80) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_636:
        MOV     DPL,R4
        MOV     DPH,R5
        RET
        CFI EndBlock cfiCond76
        CFI EndBlock cfiCond77
        CFI EndBlock cfiCond78
        CFI EndBlock cfiCond79
        CFI EndBlock cfiPicker80
//  910 
//  911 /* Render the cstring provided to an escaped version that can be printed. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  912 static cJSON_bool print_string_ptr(const unsigned char * const input, printbuffer * const output_buffer)
print_string_ptr:
        CFI Block cfiBlock81 Using cfiCommon0
        CFI Function print_string_ptr
        CODE
//  913 {
        FUNCALL print_string_ptr, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
//  914     const unsigned char *input_pointer = NULL;
//  915     unsigned char *output = NULL;
//  916     unsigned char *output_pointer = NULL;
//  917     size_t output_length = 0;
//  918     /* numbers of additional characters needed for escaping */
//  919     size_t escape_characters = 0;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
//  920 
//  921     if (output_buffer == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??print_string_ptr_0
//  922     {
//  923         return false;
??print_string_ptr_1:
        MOV     R2,#0x0
??print_string_ptr_2:
        MOV     R3,#0x0
        LJMP    ??print_string_ptr_3 & 0xFFFF
//  924     }
//  925 
//  926     /* empty string */
//  927     if (input == NULL)
??print_string_ptr_0:
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JNZ     ??print_string_ptr_4
//  928     {
//  929         output = ensure(output_buffer, sizeof("\"\""));
        ; Setup parameters for call to function ensure
        MOV     R4,#0x3
        MOV     R5,#0x0
        LCALL   ??ensure?relay
        MOV     ?V0 + 3,R3
//  930         if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??print_string_ptr_1
//  931         {
//  932             return false;
//  933         }
//  934         strcpy((char*)output, "\"\"");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "\\"\\"">` & 0xff
        MOV     R5,#(`?<Constant "\\"\\"">` >> 8) & 0xff
        LCALL   ??strcpy?relay
//  935 
//  936         return true;
        MOV     R2,#0x1
        SJMP    ??print_string_ptr_2
//  937     }
//  938 
//  939     /* set "flag" to 1 if something needs to be escaped */
//  940     for (input_pointer = input; *input_pointer; input_pointer++)
??print_string_ptr_4:
        MOV     ?V0 + 0,?V0 + 6
        MOV     ?V0 + 1,?V0 + 7
        SJMP    ??print_string_ptr_5
//  941     {
//  942         switch (*input_pointer)
//  943         {
//  944             case '\"':
//  945             case '\\':
//  946             case '\b':
//  947             case '\f':
//  948             case '\n':
//  949             case '\r':
//  950             case '\t':
//  951                 /* one character escape sequence */
//  952                 escape_characters++;
//  953                 break;
//  954             default:
//  955                 if (*input_pointer < 32)
??print_string_ptr_6:
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x20
        JNC     ??print_string_ptr_7
//  956                 {
//  957                     /* UTF-16 escape sequence uXXXX */
//  958                     escape_characters += 5;
        MOV     A,?V0 + 4
        ADD     A,#0x5
??print_string_ptr_8:
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
//  959                 }
??print_string_ptr_7:
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
??print_string_ptr_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        JZ      ??print_string_ptr_9
        ADD     A,#-0x8
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        ADD     A,#-0x2
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        ADD     A,#-0x15
        JZ      ??print_string_ptr_10
        ADD     A,#-0x3a
        JNZ     ??print_string_ptr_6
??print_string_ptr_10:
        MOV     A,?V0 + 4
        ADD     A,#0x1
        SJMP    ??print_string_ptr_8
//  960                 break;
//  961         }
//  962     }
//  963     output_length = (size_t)(input_pointer - input) + escape_characters;
??print_string_ptr_9:
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 6
        MOV     R0,A
        MOV     A,?V0 + 1
        SUBB    A,?V0 + 7
        MOV     R1,A
        MOV     A,R0
        ADD     A,?V0 + 4
        MOV     ?V0 + 8,A
        MOV     A,R1
        ADDC    A,?V0 + 5
        MOV     ?V0 + 9,A
//  964 
//  965     output = ensure(output_buffer, output_length + sizeof("\"\""));
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 8
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,?V0 + 9
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  966     if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??print_string_ptr_1 & 0xFFFF
//  967     {
//  968         return false;
//  969     }
//  970 
//  971     /* no characters have to be escaped */
//  972     if (escape_characters == 0)
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??print_string_ptr_11
//  973     {
//  974         output[0] = '\"';
        MOV     A,#0x22
        MOVX    @DPTR,A
//  975         memcpy(output + 1, input, output_length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine165_0 & 0xFFFF
??CrossCallReturnLabel_287:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
//  976         output[output_length + 1] = '\"';
        LJMP    ??print_string_ptr_12 & 0xFFFF
//  977         output[output_length + 2] = '\0';
//  978 
//  979         return true;
//  980     }
//  981 
//  982     output[0] = '\"';
??print_string_ptr_11:
        MOV     A,#0x22
        MOVX    @DPTR,A
//  983     output_pointer = output + 1;
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  984     /* copy the string */
//  985     for (input_pointer = input; *input_pointer != '\0'; (void)input_pointer++, output_pointer++)
        MOV     ?V0 + 0,?V0 + 6
        MOV     ?V0 + 1,?V0 + 7
        SJMP    ??print_string_ptr_13
//  986     {
//  987         if ((*input_pointer > 31) && (*input_pointer != '\"') && (*input_pointer != '\\'))
//  988         {
//  989             /* normal character, copy */
//  990             *output_pointer = *input_pointer;
//  991         }
//  992         else
//  993         {
//  994             /* character needs to be escaped */
//  995             *output_pointer++ = '\\';
//  996             switch (*input_pointer)
//  997             {
//  998                 case '\\':
//  999                     *output_pointer = '\\';
// 1000                     break;
// 1001                 case '\"':
// 1002                     *output_pointer = '\"';
// 1003                     break;
// 1004                 case '\b':
// 1005                     *output_pointer = 'b';
// 1006                     break;
// 1007                 case '\f':
// 1008                     *output_pointer = 'f';
// 1009                     break;
// 1010                 case '\n':
// 1011                     *output_pointer = 'n';
// 1012                     break;
// 1013                 case '\r':
// 1014                     *output_pointer = 'r';
// 1015                     break;
// 1016                 case '\t':
// 1017                     *output_pointer = 't';
// 1018                     break;
// 1019                 default:
// 1020                     /* escape and print as unicode codepoint */
// 1021                     sprintf((char*)output_pointer, "u%04x", *input_pointer);
??print_string_ptr_14:
        ; Setup parameters for call to function sprintf
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,#`?<Constant "u%04x">` & 0xff
        MOV     R5,#(`?<Constant "u%04x">` >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sprintf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
// 1022                     output_pointer += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 1023                     break;
??print_string_ptr_15:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
??print_string_ptr_13:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        JZ      ??print_string_ptr_12
        CLR     C
        SUBB    A,#0x20
        JC      ??print_string_ptr_16
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      ??print_string_ptr_16
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JZ      ??print_string_ptr_16
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
??print_string_ptr_17:
        MOVX    @DPTR,A
        SJMP    ??print_string_ptr_15
??print_string_ptr_16:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x5c
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#-0x8
        JZ      ??print_string_ptr_18
        DEC     A
        JZ      ??print_string_ptr_19
        DEC     A
        JZ      ??print_string_ptr_20
        ADD     A,#-0x2
        JZ      ??print_string_ptr_21
        DEC     A
        JZ      ??print_string_ptr_22
        ADD     A,#-0x15
        JZ      ??print_string_ptr_23
        ADD     A,#-0x3a
        JZ      $+5
        LJMP    ??print_string_ptr_14 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x5c
        SJMP    ??print_string_ptr_17
??print_string_ptr_23:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x22
        SJMP    ??print_string_ptr_17
??print_string_ptr_18:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x62
        SJMP    ??print_string_ptr_17
??print_string_ptr_21:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x66
        SJMP    ??print_string_ptr_17
??print_string_ptr_20:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x6e
        SJMP    ??print_string_ptr_17
??print_string_ptr_22:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x72
        SJMP    ??print_string_ptr_17
??print_string_ptr_19:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x74
        SJMP    ??print_string_ptr_17
// 1024             }
// 1025         }
// 1026     }
// 1027     output[output_length + 1] = '\"';
??print_string_ptr_12:
        MOV     A,?V0 + 2
        ADD     A,?V0 + 8
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,?V0 + 9
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     A,#0x22
        MOVX    @DPTR,A
// 1028     output[output_length + 2] = '\0';
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1029 
// 1030     return true;
        MOV     R2,#0x1
        MOV     R3,A
        CFI EndBlock cfiBlock81
??print_string_ptr_3:
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1031 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiBlock82 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock82
// 1032 
// 1033 /* Invoke print_string_ptr (which is useful) on an item. */
// 1034 static cJSON_bool print_string(const cJSON * const item, printbuffer * const p)
// 1035 {
// 1036     return print_string_ptr((unsigned char*)item->valuestring, p);
// 1037 }
// 1038 
// 1039 /* Predeclare these prototypes. */
// 1040 static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer);
// 1041 static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer);
// 1042 static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer);
// 1043 static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer);
// 1044 static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer);
// 1045 static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer);
// 1046 
// 1047 /* Utility to jump whitespace and cr/lf */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1048 static parse_buffer *buffer_skip_whitespace(parse_buffer * const buffer)
buffer_skip_whitespace:
        CFI Block cfiBlock83 Using cfiCommon0
        CFI Function buffer_skip_whitespace
        CODE
// 1049 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1050     if ((buffer == NULL) || (buffer->content == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??buffer_skip_whitespace_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_464:
        JNZ     ??buffer_skip_whitespace_1
// 1051     {
// 1052         return NULL;
??buffer_skip_whitespace_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
// 1053     }
??buffer_skip_whitespace_2:
        LJMP    ??Subroutine209_0 & 0xFFFF
??buffer_skip_whitespace_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-6
        PUSH    DPH
        CFI CFA_SP SP+-7
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_619:
        POP     DPH
        CFI CFA_SP SP+-6
        POP     DPL
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_9:
        JC      ??CrossCallReturnLabel_239
// 1054 
// 1055     if (cannot_access_at_index(buffer, 0))
// 1056     {
// 1057         return buffer;
??buffer_skip_whitespace_3:
        SJMP    ??buffer_skip_whitespace_2
// 1058     }
// 1059 
// 1060     while (can_access_at_index(buffer, 0) && (buffer_at_offset(buffer)[0] <= 32))
// 1061     {
// 1062        buffer->offset++;
??buffer_skip_whitespace_4:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R4
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x21
        JNC     ??buffer_skip_whitespace_2
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine157_0 & 0xFFFF
// 1063     }
??CrossCallReturnLabel_239:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-6
        PUSH    DPH
        CFI CFA_SP SP+-7
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_620:
        POP     DPH
        CFI CFA_SP SP+-6
        POP     DPL
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_621:
        MOV     DPL,R2
        MOV     DPH,R3
        JC      ??buffer_skip_whitespace_4
// 1064 
// 1065     if (buffer->offset == buffer->length)
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??buffer_skip_whitespace_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??buffer_skip_whitespace_5:
        JNZ     ??buffer_skip_whitespace_2
// 1066     {
// 1067         buffer->offset--;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine172_0 & 0xFFFF
// 1068     }
??CrossCallReturnLabel_310:
        SJMP    ??buffer_skip_whitespace_2
        CFI EndBlock cfiBlock83
// 1069 
// 1070     return buffer;
// 1071 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
        CFI Block cfiCond84 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_242
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond85 Using cfiCommon0
        CFI (cfiCond85) NoFunction
        CFI (cfiCond85) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond85) CFA_SP SP+0
        CFI (cfiCond85) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond86 Using cfiCommon0
        CFI (cfiCond86) NoFunction
        CFI (cfiCond86) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond86) CFA_SP SP+0
        CFI (cfiCond86) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker87 Using cfiCommon1
        CFI (cfiPicker87) NoFunction
        CFI (cfiPicker87) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond84
        CFI EndBlock cfiCond85
        CFI EndBlock cfiCond86
        CFI EndBlock cfiPicker87
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine156_0:
        CFI Block cfiCond88 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_241
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond89 Using cfiCommon0
        CFI (cfiCond89) NoFunction
        CFI (cfiCond89) Conditional ??CrossCallReturnLabel_242
        CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond89) CFA_SP SP+0
        CFI (cfiCond89) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond90 Using cfiCommon0
        CFI (cfiCond90) NoFunction
        CFI (cfiCond90) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond90) CFA_SP SP+0
        CFI (cfiCond90) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond91 Using cfiCommon0
        CFI (cfiCond91) NoFunction
        CFI (cfiCond91) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond91) CFA_SP SP+0
        CFI (cfiCond91) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker92 Using cfiCommon1
        CFI (cfiPicker92) NoFunction
        CFI (cfiPicker92) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond88
        CFI EndBlock cfiCond89
        CFI EndBlock cfiCond90
        CFI EndBlock cfiCond91
        CFI EndBlock cfiPicker92
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine157_0:
        CFI Block cfiCond93 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_239
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond94 Using cfiCommon0
        CFI (cfiCond94) NoFunction
        CFI (cfiCond94) Conditional ??CrossCallReturnLabel_240
        CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond94) CFA_SP SP+0
        CFI (cfiCond94) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond95 Using cfiCommon0
        CFI (cfiCond95) NoFunction
        CFI (cfiCond95) Conditional ??CrossCallReturnLabel_241
        CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond95) CFA_SP SP+0
        CFI (cfiCond95) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond96 Using cfiCommon0
        CFI (cfiCond96) NoFunction
        CFI (cfiCond96) Conditional ??CrossCallReturnLabel_242
        CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond96) CFA_SP SP+0
        CFI (cfiCond96) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond97 Using cfiCommon0
        CFI (cfiCond97) NoFunction
        CFI (cfiCond97) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond97) CFA_SP SP+0
        CFI (cfiCond97) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond98 Using cfiCommon0
        CFI (cfiCond98) NoFunction
        CFI (cfiCond98) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond98) CFA_SP SP+0
        CFI (cfiCond98) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker99 Using cfiCommon1
        CFI (cfiPicker99) NoFunction
        CFI (cfiPicker99) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond93
        CFI EndBlock cfiCond94
        CFI EndBlock cfiCond95
        CFI EndBlock cfiCond96
        CFI EndBlock cfiCond97
        CFI EndBlock cfiCond98
        CFI EndBlock cfiPicker99
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine158_0:
        CFI Block cfiCond100 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_238
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond101 Using cfiCommon0
        CFI (cfiCond101) NoFunction
        CFI (cfiCond101) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond101) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond101) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond101) CFA_SP SP+-5
        CFI Block cfiCond102 Using cfiCommon0
        CFI (cfiCond102) NoFunction
        CFI (cfiCond102) Conditional ??CrossCallReturnLabel_240
        CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond102) CFA_SP SP+0
        CFI (cfiCond102) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond103 Using cfiCommon0
        CFI (cfiCond103) NoFunction
        CFI (cfiCond103) Conditional ??CrossCallReturnLabel_241
        CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond103) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond103) CFA_SP SP+0
        CFI (cfiCond103) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond104 Using cfiCommon0
        CFI (cfiCond104) NoFunction
        CFI (cfiCond104) Conditional ??CrossCallReturnLabel_242
        CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond104) CFA_SP SP+0
        CFI (cfiCond104) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond105 Using cfiCommon0
        CFI (cfiCond105) NoFunction
        CFI (cfiCond105) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond105) CFA_SP SP+0
        CFI (cfiCond105) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond106 Using cfiCommon0
        CFI (cfiCond106) NoFunction
        CFI (cfiCond106) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond106) CFA_SP SP+0
        CFI (cfiCond106) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker107 Using cfiCommon1
        CFI (cfiPicker107) NoFunction
        CFI (cfiPicker107) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        CFI EndBlock cfiCond100
        CFI EndBlock cfiCond101
        CFI EndBlock cfiCond102
        CFI EndBlock cfiCond103
        CFI EndBlock cfiCond104
        CFI EndBlock cfiCond105
        CFI EndBlock cfiCond106
        CFI EndBlock cfiPicker107
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine159_0:
        CFI Block cfiCond108 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_236
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond109 Using cfiCommon0
        CFI (cfiCond109) NoFunction
        CFI (cfiCond109) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond109) CFA_SP SP+0
        CFI (cfiCond109) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond110 Using cfiCommon0
        CFI (cfiCond110) NoFunction
        CFI (cfiCond110) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond110) CFA_SP SP+0
        CFI (cfiCond110) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond111 Using cfiCommon0
        CFI (cfiCond111) NoFunction
        CFI (cfiCond111) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond111) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond111) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond111) CFA_SP SP+-5
        CFI Block cfiCond112 Using cfiCommon0
        CFI (cfiCond112) NoFunction
        CFI (cfiCond112) Conditional ??CrossCallReturnLabel_240
        CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond112) CFA_SP SP+0
        CFI (cfiCond112) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond113 Using cfiCommon0
        CFI (cfiCond113) NoFunction
        CFI (cfiCond113) Conditional ??CrossCallReturnLabel_241
        CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond113) CFA_SP SP+0
        CFI (cfiCond113) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond114 Using cfiCommon0
        CFI (cfiCond114) NoFunction
        CFI (cfiCond114) Conditional ??CrossCallReturnLabel_242
        CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond114) CFA_SP SP+0
        CFI (cfiCond114) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond115 Using cfiCommon0
        CFI (cfiCond115) NoFunction
        CFI (cfiCond115) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond115) CFA_SP SP+0
        CFI (cfiCond115) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond116 Using cfiCommon0
        CFI (cfiCond116) NoFunction
        CFI (cfiCond116) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond116) CFA_SP SP+0
        CFI (cfiCond116) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker117 Using cfiCommon1
        CFI (cfiPicker117) NoFunction
        CFI (cfiPicker117) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_247:
        RET
        CFI EndBlock cfiCond108
        CFI EndBlock cfiCond109
        CFI EndBlock cfiCond110
        CFI EndBlock cfiCond111
        CFI EndBlock cfiCond112
        CFI EndBlock cfiCond113
        CFI EndBlock cfiCond114
        CFI EndBlock cfiCond115
        CFI EndBlock cfiCond116
        CFI EndBlock cfiPicker117
// 1072 
// 1073 /* skip the UTF-8 BOM (byte order mark) if it is at the beginning of a buffer */
// 1074 static parse_buffer *skip_utf8_bom(parse_buffer * const buffer)
// 1075 {
// 1076     if ((buffer == NULL) || (buffer->content == NULL) || (buffer->offset != 0))
// 1077     {
// 1078         return NULL;
// 1079     }
// 1080 
// 1081     if (can_access_at_index(buffer, 4) && (strncmp((const char*)buffer_at_offset(buffer), "\xEF\xBB\xBF", 3) == 0))
// 1082     {
// 1083         buffer->offset += 3;
// 1084     }
// 1085 
// 1086     return buffer;
// 1087 }
// 1088 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1089 CJSON_PUBLIC(cJSON *) cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)
cJSON_ParseWithOpts:
        CFI Block cfiBlock118 Using cfiCommon0
        CFI Function cJSON_ParseWithOpts
        CODE
// 1090 {
        FUNCALL cJSON_ParseWithOpts, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithOpts, cJSON_ParseWithLengthOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine176_0 & 0xFFFF
// 1091     size_t buffer_length;
// 1092 
// 1093     if (NULL == value)
??CrossCallReturnLabel_337:
        JNZ     ??cJSON_ParseWithOpts_0
// 1094     {
// 1095         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_ParseWithOpts_1
// 1096     }
// 1097 
// 1098     /* Adding null character size due to require_null_terminated. */
// 1099     buffer_length = strlen(value) + sizeof("");
// 1100 
// 1101     return cJSON_ParseWithLengthOpts(value, buffer_length, return_parse_end, require_null_terminated);
??cJSON_ParseWithOpts_0:
        ; Setup parameters for call to function cJSON_ParseWithLengthOpts
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        ; Setup parameters for call to function strlen
        LCALL   ??strlen?relay
        MOV     A,R2
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_ParseWithLengthOpts?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
??cJSON_ParseWithOpts_1:
        SJMP    ??Subroutine162_0
        CFI EndBlock cfiBlock118
// 1102 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock119 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        LCALL   ??get_object_item?relay
        CFI EndBlock cfiBlock119
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine160_0:
        CFI Block cfiBlock120 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        CFI EndBlock cfiBlock120
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine161_0:
        CFI Block cfiBlock121 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock121
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine162_0:
        CFI Block cfiBlock122 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock122
// 1103 
// 1104 /* Parse an object - create a new root, and populate. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1105 CJSON_PUBLIC(cJSON *) cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)
cJSON_ParseWithLengthOpts:
        CFI Block cfiBlock123 Using cfiCommon0
        CFI Function cJSON_ParseWithLengthOpts
        CODE
// 1106 {
        FUNCALL cJSON_ParseWithLengthOpts, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine59 & 0xFFFF
// 1107     parse_buffer buffer = { 0, 0, 0, 0, { 0, 0, 0 } };
??CrossCallReturnLabel_91:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char const *)0, 0, 0, 0,` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char const *)0, 0, 0, 0,` & 0xff
        MOV     A,#0xe
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1108     cJSON *item = NULL;
// 1109 
// 1110     /* reset error position */
// 1111     global_error.json = NULL;
        MOV     DPTR,#global_error
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1112     global_error.position = 0;
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1113 
// 1114     if (value == NULL || 0 == buffer_length)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_445 & 0xFFFF
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??cJSON_ParseWithLengthOpts_0 & 0xFFFF
// 1115     {
// 1116         goto fail;
// 1117     }
// 1118 
// 1119     buffer.content = (const unsigned char*)value;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine186_0 & 0xFFFF
// 1120     buffer.length = buffer_length;
??CrossCallReturnLabel_373:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
// 1121     buffer.offset = 0;
??CrossCallReturnLabel_433:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1122     buffer.hooks = global_hooks;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1123 
// 1124     item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1125     if (item == NULL) /* memory fail */
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_ParseWithLengthOpts_0 & 0xFFFF
// 1126     {
// 1127         goto fail;
// 1128     }
// 1129 
// 1130     if (!parse_value(item, buffer_skip_whitespace(skip_utf8_bom(&buffer))))
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_465:
        JZ      ??cJSON_ParseWithLengthOpts_1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_466:
        JNZ     ??cJSON_ParseWithLengthOpts_1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0x5
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        JC      ??CrossCallReturnLabel_236
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 6,#0x3
        MOV     ?V0 + 7,#0x0
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,#`?<Constant "\\357\\273\\277">` & 0xff
        MOV     R5,#(`?<Constant "\\357\\273\\277">` >> 8) & 0xff
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_408:
        LCALL   ??strncmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JNZ     ??CrossCallReturnLabel_236
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x3
        LCALL   ??Subroutine159_0 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        SJMP    ??cJSON_ParseWithLengthOpts_2
??cJSON_ParseWithLengthOpts_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_ParseWithLengthOpts_2:
        ; Setup parameters for call to function parse_value
        ; Setup parameters for call to function buffer_skip_whitespace
        LCALL   ??buffer_skip_whitespace?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_195:
        JZ      ??cJSON_ParseWithLengthOpts_3
// 1131     {
// 1132         /* parse failure. ep is set. */
// 1133         goto fail;
// 1134     }
// 1135 
// 1136     /* if we require null-terminated JSON without appended garbage, skip and then check for a null terminator */
// 1137     if (require_null_terminated)
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??cJSON_ParseWithLengthOpts_4
// 1138     {
// 1139         buffer_skip_whitespace(&buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??buffer_skip_whitespace?relay
// 1140         if ((buffer.offset >= buffer.length) || buffer_at_offset(&buffer)[0] != '\0')
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine230_0 & 0xFFFF
// 1141         {
// 1142             goto fail;
// 1143         }
// 1144     }
??CrossCallReturnLabel_614:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_11:
        JNC     ??cJSON_ParseWithLengthOpts_3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_320:
        JNZ     ??cJSON_ParseWithLengthOpts_3
// 1145     if (return_parse_end)
??cJSON_ParseWithLengthOpts_4:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_434
// 1146     {
// 1147         *return_parse_end = (const char*)buffer_at_offset(&buffer);
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
// 1148     }
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_82:
        LCALL   ??Subroutine200_0 & 0xFFFF
// 1149 
// 1150     return item;
??CrossCallReturnLabel_434:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    ??cJSON_ParseWithLengthOpts_5
// 1151 
// 1152 fail:
// 1153     if (item != NULL)
// 1154     {
// 1155         cJSON_Delete(item);
??cJSON_ParseWithLengthOpts_3:
        ; Setup parameters for call to function cJSON_Delete
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Delete?relay
// 1156     }
// 1157 
// 1158     if (value != NULL)
// 1159     {
// 1160         error local_error;
// 1161         local_error.json = (const unsigned char*)value;
// 1162         local_error.position = 0;
??cJSON_ParseWithLengthOpts_0:
        MOV     R0,#0x0
        MOV     R1,#0x0
// 1163 
// 1164         if (buffer.offset < buffer.length)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_409:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R2
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R3
        JNC     ??cJSON_ParseWithLengthOpts_6
// 1165         {
// 1166             local_error.position = buffer.offset;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??cJSON_ParseWithLengthOpts_7
// 1167         }
// 1168         else if (buffer.length > 0)
??cJSON_ParseWithLengthOpts_6:
        MOV     A,R2
        ORL     A,R3
        JZ      ??cJSON_ParseWithLengthOpts_8
// 1169         {
// 1170             local_error.position = buffer.length - 1;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
??cJSON_ParseWithLengthOpts_7:
        MOV     R1,A
// 1171         }
// 1172 
// 1173         if (return_parse_end != NULL)
??cJSON_ParseWithLengthOpts_8:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_374
// 1174         {
// 1175             *return_parse_end = (const char*)local_error.json + local_error.position;
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine186_0 & 0xFFFF
// 1176         }
// 1177 
// 1178         global_error = local_error;
??CrossCallReturnLabel_374:
        MOV     DPTR,#global_error
        LCALL   ??Subroutine177_0 & 0xFFFF
// 1179     }
??CrossCallReturnLabel_338:
        LCALL   ??Subroutine199_0 & 0xFFFF
// 1180 
// 1181     return NULL;
??CrossCallReturnLabel_445:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_ParseWithLengthOpts_5:
        MOV     A,#0xe
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock123
// 1182 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
        CFI Block cfiCond124 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_90
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond125 Using cfiCommon0
        CFI (cfiCond125) NoFunction
        CFI (cfiCond125) Conditional ??CrossCallReturnLabel_91
        CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond125) CFA_SP SP+0
        CFI (cfiCond125) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond126 Using cfiCommon0
        CFI (cfiCond126) NoFunction
        CFI (cfiCond126) Conditional ??CrossCallReturnLabel_92
        CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond126) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond126) CFA_SP SP+0
        CFI (cfiCond126) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker127 Using cfiCommon1
        CFI (cfiPicker127) NoFunction
        CFI (cfiPicker127) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        RET
        CFI EndBlock cfiCond124
        CFI EndBlock cfiCond125
        CFI EndBlock cfiCond126
        CFI EndBlock cfiPicker127

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
        CFI Block cfiCond128 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_81
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond129 Using cfiCommon0
        CFI (cfiCond129) NoFunction
        CFI (cfiCond129) Conditional ??CrossCallReturnLabel_82
        CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond129) CFA_SP SP+0
        CFI (cfiCond129) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker130 Using cfiCommon1
        CFI (cfiPicker130) NoFunction
        CFI (cfiPicker130) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
        CFI EndBlock cfiCond128
        CFI EndBlock cfiCond129
        CFI EndBlock cfiPicker130

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
        CFI Block cfiCond131 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_77
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond132 Using cfiCommon0
        CFI (cfiCond132) NoFunction
        CFI (cfiCond132) Conditional ??CrossCallReturnLabel_78
        CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond132) CFA_SP SP+0
        CFI (cfiCond132) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker133 Using cfiCommon1
        CFI (cfiPicker133) NoFunction
        CFI (cfiPicker133) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_633:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond131
        CFI EndBlock cfiCond132
        CFI EndBlock cfiPicker133
// 1183 
// 1184 /* Default options for cJSON_Parse */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1185 CJSON_PUBLIC(cJSON *) cJSON_Parse(const char *value)
cJSON_Parse:
        CFI Block cfiBlock134 Using cfiCommon0
        CFI Function cJSON_Parse
        CODE
// 1186 {
        FUNCALL cJSON_Parse, cJSON_ParseWithOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1187     return cJSON_ParseWithOpts(value, 0, 0);
        ; Setup parameters for call to function cJSON_ParseWithOpts
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        LCALL   ??cJSON_ParseWithOpts?relay
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock134
// 1188 }
// 1189 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1190 CJSON_PUBLIC(cJSON *) cJSON_ParseWithLength(const char *value, size_t buffer_length)
cJSON_ParseWithLength:
        CFI Block cfiBlock135 Using cfiCommon0
        CFI Function cJSON_ParseWithLength
        CODE
// 1191 {
        FUNCALL cJSON_ParseWithLength, cJSON_ParseWithLengthOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1192     return cJSON_ParseWithLengthOpts(value, buffer_length, 0, 0);
        ; Setup parameters for call to function cJSON_ParseWithLengthOpts
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ??cJSON_ParseWithLengthOpts?relay
        MOV     A,#0x4
        LJMP    ??Subroutine161_0 & 0xFFFF
        CFI EndBlock cfiBlock135
// 1193 }
// 1194 
// 1195 #define cjson_min(a, b) (((a) < (b)) ? (a) : (b))
// 1196 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1197 static unsigned char *print(const cJSON * const item, cJSON_bool format, const internal_hooks * const hooks)
print:
        CFI Block cfiBlock136 Using cfiCommon0
        CFI Function print
        CODE
// 1198 {
        FUNCALL print, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
// 1199     static const size_t default_buffer_size = 256;
// 1200     printbuffer buffer[1];
// 1201     unsigned char *printed = NULL;
??CrossCallReturnLabel_523:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1202 
// 1203     memset(buffer, 0, sizeof(buffer));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 6,#0x12
        MOV     ?V0 + 7,R6
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
// 1204 
// 1205     /* create buffer */
// 1206     buffer->buffer = (unsigned char*) hooks->allocate(default_buffer_size);
        ; Setup parameters for indirect call
        MOV     R2,#0x0
        MOV     R3,#0x1
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL   ?CALL_IND
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine186_0 & 0xFFFF
// 1207     buffer->length = default_buffer_size;
??CrossCallReturnLabel_375:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        INC     A
        MOVX    @DPTR,A
// 1208     buffer->format = format;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ??Subroutine163_0 & 0xFFFF
// 1209     buffer->hooks = *hooks;
??CrossCallReturnLabel_253:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1210     if (buffer->buffer == NULL)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_467:
        JNZ     $+5
        LJMP    ??print_0 & 0xFFFF
// 1211     {
// 1212         goto fail;
// 1213     }
// 1214 
// 1215     /* print the value */
// 1216     if (!print_value(item, buffer))
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_329:
        JNZ     $+5
        LJMP    ??print_1 & 0xFFFF
// 1217     {
// 1218         goto fail;
// 1219     }
// 1220     update_offset(buffer);
        ; Setup parameters for call to function update_offset
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ?Subroutine125 & 0xFFFF
// 1221 
// 1222     /* check if reallocate is available */
// 1223     if (hooks->reallocate != NULL)
??CrossCallReturnLabel_193:
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_491:
        JZ      ??print_2
// 1224     {
// 1225         printed = (unsigned char*) hooks->reallocate(buffer->buffer, buffer->offset + 1);
        ; Setup parameters for indirect call
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_114:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_87:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_607:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 1226         if (printed == NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??print_1 & 0xFFFF
// 1227             goto fail;
// 1228         }
// 1229         buffer->buffer = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        SJMP    ??print_3
// 1230     }
// 1231     else /* otherwise copy the JSON over to a new buffer */
// 1232     {
// 1233         printed = (unsigned char*) hooks->allocate(buffer->offset + 1);
??print_2:
        ; Setup parameters for indirect call
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_262:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 1234         if (printed == NULL)
        MOV     A,R6
        ORL     A,R7
        JZ      ??print_1
// 1235         {
// 1236             goto fail;
// 1237         }
// 1238         memcpy(printed, buffer->buffer, cjson_min(buffer->length, buffer->offset + 1));
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_41:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_12:
        JNC     ??print_4
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??print_5
??print_4:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
??print_5:
        MOV     ?V0 + 3,A
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
// 1239         printed[buffer->offset] = '\0'; /* just to be sure */
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_70:
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,R1
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
// 1240 
// 1241         /* free the buffer */
// 1242         hooks->deallocate(buffer->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine30 & 0xFFFF
// 1243     }
??CrossCallReturnLabel_35:
        LCALL   ?CALL_IND
// 1244 
// 1245     return printed;
??print_3:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??print_6
// 1246 
// 1247 fail:
// 1248     if (buffer->buffer != NULL)
??print_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_468:
        JZ      ??print_7
// 1249     {
// 1250         hooks->deallocate(buffer->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine30 & 0xFFFF
// 1251     }
??CrossCallReturnLabel_36:
        LCALL   ?CALL_IND
// 1252 
// 1253     if (printed != NULL)
??print_7:
        MOV     A,R6
        ORL     A,R7
        JZ      ??print_0
// 1254     {
// 1255         hooks->deallocate(printed);
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
// 1256     }
??CrossCallReturnLabel_263:
        LCALL   ?CALL_IND
// 1257 
// 1258     return NULL;
??print_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??print_6:
        MOV     A,#0x12
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock136
// 1259 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
        CFI Block cfiCond137 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_248
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond138 Using cfiCommon0
        CFI (cfiCond138) NoFunction
        CFI (cfiCond138) Conditional ??CrossCallReturnLabel_249
        CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond138) CFA_SP SP+0
        CFI (cfiCond138) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker139 Using cfiCommon1
        CFI (cfiPicker139) NoFunction
        CFI (cfiPicker139) Picker
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        CFI EndBlock cfiCond137
        CFI EndBlock cfiCond138
        CFI EndBlock cfiPicker139
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine163_0:
        CFI Block cfiCond140 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_250
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond141 Using cfiCommon0
        CFI (cfiCond141) NoFunction
        CFI (cfiCond141) Conditional ??CrossCallReturnLabel_251
        CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond141) CFA_SP SP+0
        CFI (cfiCond141) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond142 Using cfiCommon0
        CFI (cfiCond142) NoFunction
        CFI (cfiCond142) Conditional ??CrossCallReturnLabel_252
        CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond142) CFA_SP SP+0
        CFI (cfiCond142) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond143 Using cfiCommon0
        CFI (cfiCond143) NoFunction
        CFI (cfiCond143) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond143) CFA_SP SP+0
        CFI (cfiCond143) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond144 Using cfiCommon0
        CFI (cfiCond144) NoFunction
        CFI (cfiCond144) Conditional ??CrossCallReturnLabel_248
        CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond144) CFA_SP SP+0
        CFI (cfiCond144) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond145 Using cfiCommon0
        CFI (cfiCond145) NoFunction
        CFI (cfiCond145) Conditional ??CrossCallReturnLabel_249
        CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond145) CFA_SP SP+0
        CFI (cfiCond145) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker146 Using cfiCommon1
        CFI (cfiPicker146) NoFunction
        CFI (cfiPicker146) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond140
        CFI EndBlock cfiCond141
        CFI EndBlock cfiCond142
        CFI EndBlock cfiCond143
        CFI EndBlock cfiCond144
        CFI EndBlock cfiCond145
        CFI EndBlock cfiPicker146

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
        CFI Block cfiCond147 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_150
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond148 Using cfiCommon0
        CFI (cfiCond148) NoFunction
        CFI (cfiCond148) Conditional ??CrossCallReturnLabel_151
        CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond148) CFA_SP SP+0
        CFI (cfiCond148) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker149 Using cfiCommon1
        CFI (cfiPicker149) NoFunction
        CFI (cfiPicker149) Picker
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond147
        CFI EndBlock cfiCond148
        CFI EndBlock cfiPicker149

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
        CFI Block cfiCond150 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_272
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond151 Using cfiCommon0
        CFI (cfiCond151) NoFunction
        CFI (cfiCond151) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond151) CFA_SP SP+0
        CFI (cfiCond151) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond152 Using cfiCommon0
        CFI (cfiCond152) NoFunction
        CFI (cfiCond152) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond152) CFA_SP SP+0
        CFI (cfiCond152) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond153 Using cfiCommon0
        CFI (cfiCond153) NoFunction
        CFI (cfiCond153) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond153) CFA_SP SP+0
        CFI (cfiCond153) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond154 Using cfiCommon0
        CFI (cfiCond154) NoFunction
        CFI (cfiCond154) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond154) CFA_SP SP+0
        CFI (cfiCond154) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond155 Using cfiCommon0
        CFI (cfiCond155) NoFunction
        CFI (cfiCond155) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond155) CFA_SP SP+0
        CFI (cfiCond155) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond156 Using cfiCommon0
        CFI (cfiCond156) NoFunction
        CFI (cfiCond156) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond156) CFA_SP SP+-1
        CFI (cfiCond156) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker157 Using cfiCommon1
        CFI (cfiPicker157) NoFunction
        CFI (cfiPicker157) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond150
        CFI EndBlock cfiCond151
        CFI EndBlock cfiCond152
        CFI EndBlock cfiCond153
        CFI EndBlock cfiCond154
        CFI EndBlock cfiCond155
        CFI EndBlock cfiCond156
        CFI EndBlock cfiPicker157
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine164_0:
        CFI Block cfiCond158 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_254
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond159 Using cfiCommon0
        CFI (cfiCond159) NoFunction
        CFI (cfiCond159) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond159) CFA_SP SP+0
        CFI (cfiCond159) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond160 Using cfiCommon0
        CFI (cfiCond160) NoFunction
        CFI (cfiCond160) Conditional ??CrossCallReturnLabel_256
        CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond160) CFA_SP SP+0
        CFI (cfiCond160) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond161 Using cfiCommon0
        CFI (cfiCond161) NoFunction
        CFI (cfiCond161) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond161) CFA_SP SP+0
        CFI (cfiCond161) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond162 Using cfiCommon0
        CFI (cfiCond162) NoFunction
        CFI (cfiCond162) Conditional ??CrossCallReturnLabel_258
        CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond162) CFA_SP SP+-1
        CFI (cfiCond162) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond163 Using cfiCommon0
        CFI (cfiCond163) NoFunction
        CFI (cfiCond163) Conditional ??CrossCallReturnLabel_259
        CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond163) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond163) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond163) CFA_SP SP+0
        CFI (cfiCond163) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond164 Using cfiCommon0
        CFI (cfiCond164) NoFunction
        CFI (cfiCond164) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond164) CFA_SP SP+0
        CFI (cfiCond164) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond165 Using cfiCommon0
        CFI (cfiCond165) NoFunction
        CFI (cfiCond165) Conditional ??CrossCallReturnLabel_261
        CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond165) CFA_SP SP+0
        CFI (cfiCond165) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond166 Using cfiCommon0
        CFI (cfiCond166) NoFunction
        CFI (cfiCond166) Conditional ??CrossCallReturnLabel_262
        CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond166) CFA_SP SP+0
        CFI (cfiCond166) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond167 Using cfiCommon0
        CFI (cfiCond167) NoFunction
        CFI (cfiCond167) Conditional ??CrossCallReturnLabel_263
        CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond167) CFA_SP SP+0
        CFI (cfiCond167) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond168 Using cfiCommon0
        CFI (cfiCond168) NoFunction
        CFI (cfiCond168) Conditional ??CrossCallReturnLabel_264
        CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond168) CFA_SP SP+0
        CFI (cfiCond168) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond169 Using cfiCommon0
        CFI (cfiCond169) NoFunction
        CFI (cfiCond169) Conditional ??CrossCallReturnLabel_265
        CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond169) CFA_SP SP+0
        CFI (cfiCond169) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond170 Using cfiCommon0
        CFI (cfiCond170) NoFunction
        CFI (cfiCond170) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond170) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond170) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond170) CFA_SP SP+-5
        CFI Block cfiCond171 Using cfiCommon0
        CFI (cfiCond171) NoFunction
        CFI (cfiCond171) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond171) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond171) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond171) CFA_SP SP+-5
        CFI Block cfiCond172 Using cfiCommon0
        CFI (cfiCond172) NoFunction
        CFI (cfiCond172) Conditional ??CrossCallReturnLabel_266
        CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond172) CFA_SP SP+0
        CFI (cfiCond172) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond173 Using cfiCommon0
        CFI (cfiCond173) NoFunction
        CFI (cfiCond173) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond173) CFA_SP SP+-1
        CFI (cfiCond173) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond174 Using cfiCommon0
        CFI (cfiCond174) NoFunction
        CFI (cfiCond174) Conditional ??CrossCallReturnLabel_268
        CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond174) CFA_SP SP+-1
        CFI (cfiCond174) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond175 Using cfiCommon0
        CFI (cfiCond175) NoFunction
        CFI (cfiCond175) Conditional ??CrossCallReturnLabel_269
        CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond175) CFA_SP SP+0
        CFI (cfiCond175) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond176 Using cfiCommon0
        CFI (cfiCond176) NoFunction
        CFI (cfiCond176) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond176) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond176) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond176) CFA_SP SP+-6
        CFI (cfiCond176) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond177 Using cfiCommon0
        CFI (cfiCond177) NoFunction
        CFI (cfiCond177) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond177) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond177) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond177) CFA_SP SP+-1
        CFI (cfiCond177) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond178 Using cfiCommon0
        CFI (cfiCond178) NoFunction
        CFI (cfiCond178) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond178) CFA_SP SP+0
        CFI (cfiCond178) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond179 Using cfiCommon0
        CFI (cfiCond179) NoFunction
        CFI (cfiCond179) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond179) CFA_SP SP+0
        CFI (cfiCond179) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond180 Using cfiCommon0
        CFI (cfiCond180) NoFunction
        CFI (cfiCond180) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond180) CFA_SP SP+0
        CFI (cfiCond180) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond181 Using cfiCommon0
        CFI (cfiCond181) NoFunction
        CFI (cfiCond181) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond181) CFA_SP SP+0
        CFI (cfiCond181) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond182 Using cfiCommon0
        CFI (cfiCond182) NoFunction
        CFI (cfiCond182) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond182) CFA_SP SP+0
        CFI (cfiCond182) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond183 Using cfiCommon0
        CFI (cfiCond183) NoFunction
        CFI (cfiCond183) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond183) CFA_SP SP+-1
        CFI (cfiCond183) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker184 Using cfiCommon1
        CFI (cfiPicker184) NoFunction
        CFI (cfiPicker184) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_284:
        RET
        CFI EndBlock cfiCond158
        CFI EndBlock cfiCond159
        CFI EndBlock cfiCond160
        CFI EndBlock cfiCond161
        CFI EndBlock cfiCond162
        CFI EndBlock cfiCond163
        CFI EndBlock cfiCond164
        CFI EndBlock cfiCond165
        CFI EndBlock cfiCond166
        CFI EndBlock cfiCond167
        CFI EndBlock cfiCond168
        CFI EndBlock cfiCond169
        CFI EndBlock cfiCond170
        CFI EndBlock cfiCond171
        CFI EndBlock cfiCond172
        CFI EndBlock cfiCond173
        CFI EndBlock cfiCond174
        CFI EndBlock cfiCond175
        CFI EndBlock cfiCond176
        CFI EndBlock cfiCond177
        CFI EndBlock cfiCond178
        CFI EndBlock cfiCond179
        CFI EndBlock cfiCond180
        CFI EndBlock cfiCond181
        CFI EndBlock cfiCond182
        CFI EndBlock cfiCond183
        CFI EndBlock cfiPicker184

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
        CFI Block cfiCond185 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_86
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond186 Using cfiCommon0
        CFI (cfiCond186) NoFunction
        CFI (cfiCond186) Conditional ??CrossCallReturnLabel_87
        CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond186) CFA_SP SP+0
        CFI (cfiCond186) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker187 Using cfiCommon1
        CFI (cfiPicker187) NoFunction
        CFI (cfiPicker187) Picker
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_211:
        RET
        CFI EndBlock cfiCond185
        CFI EndBlock cfiCond186
        CFI EndBlock cfiPicker187

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
        CFI Block cfiCond188 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_86
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond189 Using cfiCommon0
        CFI (cfiCond189) NoFunction
        CFI (cfiCond189) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_87
        CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond189) CFA_SP SP+0
        CFI (cfiCond189) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond190 Using cfiCommon0
        CFI (cfiCond190) NoFunction
        CFI (cfiCond190) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_35
        CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond190) CFA_SP SP+0
        CFI (cfiCond190) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond191 Using cfiCommon0
        CFI (cfiCond191) NoFunction
        CFI (cfiCond191) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_36
        CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond191) CFA_SP SP+0
        CFI (cfiCond191) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker192 Using cfiCommon1
        CFI (cfiPicker192) NoFunction
        CFI (cfiPicker192) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond188
        CFI EndBlock cfiCond189
        CFI EndBlock cfiCond190
        CFI EndBlock cfiCond191
        CFI EndBlock cfiPicker192

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
        CFI Block cfiCond193 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_49
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond194 Using cfiCommon0
        CFI (cfiCond194) NoFunction
        CFI (cfiCond194) Conditional ??CrossCallReturnLabel_50
        CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond194) CFA_SP SP+0
        CFI (cfiCond194) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond195 Using cfiCommon0
        CFI (cfiCond195) NoFunction
        CFI (cfiCond195) Conditional ??CrossCallReturnLabel_51
        CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond195) CFA_SP SP+0
        CFI (cfiCond195) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker196 Using cfiCommon1
        CFI (cfiPicker196) NoFunction
        CFI (cfiPicker196) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_286:
        RET
        CFI EndBlock cfiCond193
        CFI EndBlock cfiCond194
        CFI EndBlock cfiCond195
        CFI EndBlock cfiPicker196

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
        CFI Block cfiCond197 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_285
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond198 Using cfiCommon0
        CFI (cfiCond198) NoFunction
        CFI (cfiCond198) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_49
        CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond198) CFA_SP SP+0
        CFI (cfiCond198) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond199 Using cfiCommon0
        CFI (cfiCond199) NoFunction
        CFI (cfiCond199) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_50
        CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond199) CFA_SP SP+0
        CFI (cfiCond199) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond200 Using cfiCommon0
        CFI (cfiCond200) NoFunction
        CFI (cfiCond200) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_51
        CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond200) CFA_SP SP+0
        CFI (cfiCond200) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker201 Using cfiCommon1
        CFI (cfiPicker201) NoFunction
        CFI (cfiPicker201) Picker
        MOV     R5,A
        CFI EndBlock cfiCond197
        CFI EndBlock cfiCond198
        CFI EndBlock cfiCond199
        CFI EndBlock cfiCond200
        CFI EndBlock cfiPicker201
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine165_0:
        CFI Block cfiCond202 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_287
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond203 Using cfiCommon0
        CFI (cfiCond203) NoFunction
        CFI (cfiCond203) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond203) CFA_SP SP+0
        CFI (cfiCond203) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond204 Using cfiCommon0
        CFI (cfiCond204) NoFunction
        CFI (cfiCond204) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond204) CFA_SP SP+0
        CFI (cfiCond204) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond205 Using cfiCommon0
        CFI (cfiCond205) NoFunction
        CFI (cfiCond205) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_49
        CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond205) CFA_SP SP+0
        CFI (cfiCond205) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond206 Using cfiCommon0
        CFI (cfiCond206) NoFunction
        CFI (cfiCond206) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_50
        CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond206) CFA_SP SP+0
        CFI (cfiCond206) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond207 Using cfiCommon0
        CFI (cfiCond207) NoFunction
        CFI (cfiCond207) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_51
        CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond207) CFA_SP SP+0
        CFI (cfiCond207) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker208 Using cfiCommon1
        CFI (cfiPicker208) NoFunction
        CFI (cfiPicker208) Picker
        LCALL   ??memcpy?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond202
        CFI EndBlock cfiCond203
        CFI EndBlock cfiCond204
        CFI EndBlock cfiCond205
        CFI EndBlock cfiCond206
        CFI EndBlock cfiCond207
        CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond209 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond210 Using cfiCommon0
        CFI (cfiCond210) NoFunction
        CFI (cfiCond210) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond210) CFA_SP SP+0
        CFI (cfiCond210) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond211 Using cfiCommon0
        CFI (cfiCond211) NoFunction
        CFI (cfiCond211) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond211) CFA_SP SP+-2
        CFI (cfiCond211) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond212 Using cfiCommon0
        CFI (cfiCond212) NoFunction
        CFI (cfiCond212) Conditional ??CrossCallReturnLabel_42
        CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond212) CFA_SP SP+0
        CFI (cfiCond212) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond213 Using cfiCommon0
        CFI (cfiCond213) NoFunction
        CFI (cfiCond213) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond213) CFA_SP SP+0
        CFI (cfiCond213) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond214 Using cfiCommon0
        CFI (cfiCond214) NoFunction
        CFI (cfiCond214) Conditional ??CrossCallReturnLabel_44
        CFI (cfiCond214) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond214) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond214) CFA_SP SP+-5
        CFI (cfiCond214) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker215 Using cfiCommon1
        CFI (cfiPicker215) NoFunction
        CFI (cfiPicker215) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_206:
        RET
        CFI EndBlock cfiCond209
        CFI EndBlock cfiCond210
        CFI EndBlock cfiCond211
        CFI EndBlock cfiCond212
        CFI EndBlock cfiCond213
        CFI EndBlock cfiCond214
        CFI EndBlock cfiPicker215

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
        CFI Block cfiCond216 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond217 Using cfiCommon0
        CFI (cfiCond217) NoFunction
        CFI (cfiCond217) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_40
        CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond217) CFA_SP SP+0
        CFI (cfiCond217) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond218 Using cfiCommon0
        CFI (cfiCond218) NoFunction
        CFI (cfiCond218) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_41
        CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond218) CFA_SP SP+-2
        CFI (cfiCond218) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond219 Using cfiCommon0
        CFI (cfiCond219) NoFunction
        CFI (cfiCond219) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_42
        CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond219) CFA_SP SP+0
        CFI (cfiCond219) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond220 Using cfiCommon0
        CFI (cfiCond220) NoFunction
        CFI (cfiCond220) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_43
        CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond220) CFA_SP SP+0
        CFI (cfiCond220) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond221 Using cfiCommon0
        CFI (cfiCond221) NoFunction
        CFI (cfiCond221) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_44
        CFI (cfiCond221) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond221) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond221) CFA_SP SP+-5
        CFI (cfiCond221) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond222 Using cfiCommon0
        CFI (cfiCond222) NoFunction
        CFI (cfiCond222) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_1
        CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond222) CFA_SP SP+0
        CFI (cfiCond222) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond223 Using cfiCommon0
        CFI (cfiCond223) NoFunction
        CFI (cfiCond223) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_0
        CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond223) CFA_SP SP+0
        CFI (cfiCond223) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond224 Using cfiCommon0
        CFI (cfiCond224) NoFunction
        CFI (cfiCond224) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_1
        CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond224) CFA_SP SP+0
        CFI (cfiCond224) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond225 Using cfiCommon0
        CFI (cfiCond225) NoFunction
        CFI (cfiCond225) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_0
        CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond225) CFA_SP SP+0
        CFI (cfiCond225) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond226 Using cfiCommon0
        CFI (cfiCond226) NoFunction
        CFI (cfiCond226) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_38
        CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond226) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond226) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond226) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond226) CFA_SP SP+0
        CFI (cfiCond226) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond227 Using cfiCommon0
        CFI (cfiCond227) NoFunction
        CFI (cfiCond227) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_37
        CFI (cfiCond227) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond227) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond227) CFA_SP SP+-5
        CFI (cfiCond227) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker228 Using cfiCommon1
        CFI (cfiPicker228) NoFunction
        CFI (cfiPicker228) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond216
        CFI EndBlock cfiCond217
        CFI EndBlock cfiCond218
        CFI EndBlock cfiCond219
        CFI EndBlock cfiCond220
        CFI EndBlock cfiCond221
        CFI EndBlock cfiCond222
        CFI EndBlock cfiCond223
        CFI EndBlock cfiCond224
        CFI EndBlock cfiCond225
        CFI EndBlock cfiCond226
        CFI EndBlock cfiCond227
        CFI EndBlock cfiPicker228

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond229 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_35
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond230 Using cfiCommon0
        CFI (cfiCond230) NoFunction
        CFI (cfiCond230) Conditional ??CrossCallReturnLabel_36
        CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond230) CFA_SP SP+0
        CFI (cfiCond230) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker231 Using cfiCommon1
        CFI (cfiPicker231) NoFunction
        CFI (cfiPicker231) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_210:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_281:
        RET
        CFI EndBlock cfiCond229
        CFI EndBlock cfiCond230
        CFI EndBlock cfiPicker231

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
        CFI Block cfiCond232 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond233 Using cfiCommon0
        CFI (cfiCond233) NoFunction
        CFI (cfiCond233) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_29
        CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond233) CFA_SP SP+0
        CFI (cfiCond233) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond234 Using cfiCommon0
        CFI (cfiCond234) NoFunction
        CFI (cfiCond234) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_272
        CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond234) CFA_SP SP+-1
        CFI (cfiCond234) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond235 Using cfiCommon0
        CFI (cfiCond235) NoFunction
        CFI (cfiCond235) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_273
        CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond235) CFA_SP SP+0
        CFI (cfiCond235) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond236 Using cfiCommon0
        CFI (cfiCond236) NoFunction
        CFI (cfiCond236) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_274
        CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond236) CFA_SP SP+0
        CFI (cfiCond236) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond237 Using cfiCommon0
        CFI (cfiCond237) NoFunction
        CFI (cfiCond237) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_275
        CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond237) CFA_SP SP+0
        CFI (cfiCond237) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond238 Using cfiCommon0
        CFI (cfiCond238) NoFunction
        CFI (cfiCond238) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_276
        CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond238) CFA_SP SP+0
        CFI (cfiCond238) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond239 Using cfiCommon0
        CFI (cfiCond239) NoFunction
        CFI (cfiCond239) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_277
        CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond239) CFA_SP SP+0
        CFI (cfiCond239) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond240 Using cfiCommon0
        CFI (cfiCond240) NoFunction
        CFI (cfiCond240) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_278
        CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond240) CFA_SP SP+-1
        CFI (cfiCond240) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond241 Using cfiCommon0
        CFI (cfiCond241) NoFunction
        CFI (cfiCond241) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_254
        CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond241) CFA_SP SP+0
        CFI (cfiCond241) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond242 Using cfiCommon0
        CFI (cfiCond242) NoFunction
        CFI (cfiCond242) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_255
        CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond242) CFA_SP SP+0
        CFI (cfiCond242) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond243 Using cfiCommon0
        CFI (cfiCond243) NoFunction
        CFI (cfiCond243) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_256
        CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond243) CFA_SP SP+0
        CFI (cfiCond243) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond244 Using cfiCommon0
        CFI (cfiCond244) NoFunction
        CFI (cfiCond244) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_257
        CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond244) CFA_SP SP+0
        CFI (cfiCond244) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond245 Using cfiCommon0
        CFI (cfiCond245) NoFunction
        CFI (cfiCond245) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_258
        CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond245) CFA_SP SP+-1
        CFI (cfiCond245) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond246 Using cfiCommon0
        CFI (cfiCond246) NoFunction
        CFI (cfiCond246) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_259
        CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond246) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond246) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond246) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond246) CFA_SP SP+0
        CFI (cfiCond246) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond247 Using cfiCommon0
        CFI (cfiCond247) NoFunction
        CFI (cfiCond247) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_260
        CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond247) CFA_SP SP+0
        CFI (cfiCond247) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond248 Using cfiCommon0
        CFI (cfiCond248) NoFunction
        CFI (cfiCond248) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_261
        CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond248) CFA_SP SP+0
        CFI (cfiCond248) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond249 Using cfiCommon0
        CFI (cfiCond249) NoFunction
        CFI (cfiCond249) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_262
        CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond249) CFA_SP SP+0
        CFI (cfiCond249) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond250 Using cfiCommon0
        CFI (cfiCond250) NoFunction
        CFI (cfiCond250) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_263
        CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond250) CFA_SP SP+0
        CFI (cfiCond250) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond251 Using cfiCommon0
        CFI (cfiCond251) NoFunction
        CFI (cfiCond251) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_264
        CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond251) CFA_SP SP+0
        CFI (cfiCond251) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond252 Using cfiCommon0
        CFI (cfiCond252) NoFunction
        CFI (cfiCond252) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_265
        CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond252) CFA_SP SP+0
        CFI (cfiCond252) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond253 Using cfiCommon0
        CFI (cfiCond253) NoFunction
        CFI (cfiCond253) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond253) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond253) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond253) CFA_SP SP+-5
        CFI Block cfiCond254 Using cfiCommon0
        CFI (cfiCond254) NoFunction
        CFI (cfiCond254) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond254) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond254) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond254) CFA_SP SP+-5
        CFI Block cfiCond255 Using cfiCommon0
        CFI (cfiCond255) NoFunction
        CFI (cfiCond255) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_266
        CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond255) CFA_SP SP+0
        CFI (cfiCond255) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond256 Using cfiCommon0
        CFI (cfiCond256) NoFunction
        CFI (cfiCond256) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_267
        CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond256) CFA_SP SP+-1
        CFI (cfiCond256) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond257 Using cfiCommon0
        CFI (cfiCond257) NoFunction
        CFI (cfiCond257) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_268
        CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond257) CFA_SP SP+-1
        CFI (cfiCond257) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond258 Using cfiCommon0
        CFI (cfiCond258) NoFunction
        CFI (cfiCond258) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_269
        CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond258) CFA_SP SP+0
        CFI (cfiCond258) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond259 Using cfiCommon0
        CFI (cfiCond259) NoFunction
        CFI (cfiCond259) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_270
        CFI (cfiCond259) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond259) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond259) CFA_SP SP+-6
        CFI (cfiCond259) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond260 Using cfiCommon0
        CFI (cfiCond260) NoFunction
        CFI (cfiCond260) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_35
        CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond260) CFA_SP SP+0
        CFI (cfiCond260) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond261 Using cfiCommon0
        CFI (cfiCond261) NoFunction
        CFI (cfiCond261) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_36
        CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond261) CFA_SP SP+0
        CFI (cfiCond261) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond262 Using cfiCommon0
        CFI (cfiCond262) NoFunction
        CFI (cfiCond262) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_23
        CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond262) CFA_SP SP+0
        CFI (cfiCond262) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond263 Using cfiCommon0
        CFI (cfiCond263) NoFunction
        CFI (cfiCond263) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_24
        CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond263) CFA_SP SP+0
        CFI (cfiCond263) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond264 Using cfiCommon0
        CFI (cfiCond264) NoFunction
        CFI (cfiCond264) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_25
        CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond264) CFA_SP SP+0
        CFI (cfiCond264) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond265 Using cfiCommon0
        CFI (cfiCond265) NoFunction
        CFI (cfiCond265) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_110
        CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond265) CFA_SP SP+0
        CFI (cfiCond265) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond266 Using cfiCommon0
        CFI (cfiCond266) NoFunction
        CFI (cfiCond266) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_111
        CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond266) CFA_SP SP+-1
        CFI (cfiCond266) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond267 Using cfiCommon0
        CFI (cfiCond267) NoFunction
        CFI (cfiCond267) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_100
        CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond267) CFA_SP SP+0
        CFI (cfiCond267) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond268 Using cfiCommon0
        CFI (cfiCond268) NoFunction
        CFI (cfiCond268) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_101
        CFI (cfiCond268) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond268) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond268) CFA_SP SP+-5
        CFI (cfiCond268) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker269 Using cfiCommon1
        CFI (cfiPicker269) NoFunction
        CFI (cfiPicker269) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_608:
        RET
        CFI EndBlock cfiCond232
        CFI EndBlock cfiCond233
        CFI EndBlock cfiCond234
        CFI EndBlock cfiCond235
        CFI EndBlock cfiCond236
        CFI EndBlock cfiCond237
        CFI EndBlock cfiCond238
        CFI EndBlock cfiCond239
        CFI EndBlock cfiCond240
        CFI EndBlock cfiCond241
        CFI EndBlock cfiCond242
        CFI EndBlock cfiCond243
        CFI EndBlock cfiCond244
        CFI EndBlock cfiCond245
        CFI EndBlock cfiCond246
        CFI EndBlock cfiCond247
        CFI EndBlock cfiCond248
        CFI EndBlock cfiCond249
        CFI EndBlock cfiCond250
        CFI EndBlock cfiCond251
        CFI EndBlock cfiCond252
        CFI EndBlock cfiCond253
        CFI EndBlock cfiCond254
        CFI EndBlock cfiCond255
        CFI EndBlock cfiCond256
        CFI EndBlock cfiCond257
        CFI EndBlock cfiCond258
        CFI EndBlock cfiCond259
        CFI EndBlock cfiCond260
        CFI EndBlock cfiCond261
        CFI EndBlock cfiCond262
        CFI EndBlock cfiCond263
        CFI EndBlock cfiCond264
        CFI EndBlock cfiCond265
        CFI EndBlock cfiCond266
        CFI EndBlock cfiCond267
        CFI EndBlock cfiCond268
        CFI EndBlock cfiPicker269

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
        CFI Block cfiCond270 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_606
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond271 Using cfiCommon0
        CFI (cfiCond271) NoFunction
        CFI (cfiCond271) Conditional ??CrossCallReturnLabel_607
        CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond271) CFA_SP SP+0
        CFI (cfiCond271) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond272 Using cfiCommon0
        CFI (cfiCond272) NoFunction
        CFI (cfiCond272) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_28
        CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond272) CFA_SP SP+0
        CFI (cfiCond272) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond273 Using cfiCommon0
        CFI (cfiCond273) NoFunction
        CFI (cfiCond273) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_29
        CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond273) CFA_SP SP+0
        CFI (cfiCond273) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond274 Using cfiCommon0
        CFI (cfiCond274) NoFunction
        CFI (cfiCond274) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_272
        CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond274) CFA_SP SP+-1
        CFI (cfiCond274) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond275 Using cfiCommon0
        CFI (cfiCond275) NoFunction
        CFI (cfiCond275) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_273
        CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond275) CFA_SP SP+0
        CFI (cfiCond275) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond276 Using cfiCommon0
        CFI (cfiCond276) NoFunction
        CFI (cfiCond276) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_274
        CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond276) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond276) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond276) CFA_SP SP+0
        CFI (cfiCond276) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond277 Using cfiCommon0
        CFI (cfiCond277) NoFunction
        CFI (cfiCond277) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_275
        CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond277) CFA_SP SP+0
        CFI (cfiCond277) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond278 Using cfiCommon0
        CFI (cfiCond278) NoFunction
        CFI (cfiCond278) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_276
        CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond278) CFA_SP SP+0
        CFI (cfiCond278) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond279 Using cfiCommon0
        CFI (cfiCond279) NoFunction
        CFI (cfiCond279) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_277
        CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond279) CFA_SP SP+0
        CFI (cfiCond279) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond280 Using cfiCommon0
        CFI (cfiCond280) NoFunction
        CFI (cfiCond280) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_278
        CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond280) CFA_SP SP+-1
        CFI (cfiCond280) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond281 Using cfiCommon0
        CFI (cfiCond281) NoFunction
        CFI (cfiCond281) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_254
        CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond281) CFA_SP SP+0
        CFI (cfiCond281) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond282 Using cfiCommon0
        CFI (cfiCond282) NoFunction
        CFI (cfiCond282) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_255
        CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond282) CFA_SP SP+0
        CFI (cfiCond282) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond283 Using cfiCommon0
        CFI (cfiCond283) NoFunction
        CFI (cfiCond283) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_256
        CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond283) CFA_SP SP+0
        CFI (cfiCond283) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond284 Using cfiCommon0
        CFI (cfiCond284) NoFunction
        CFI (cfiCond284) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_257
        CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond284) CFA_SP SP+0
        CFI (cfiCond284) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond285 Using cfiCommon0
        CFI (cfiCond285) NoFunction
        CFI (cfiCond285) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_258
        CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond285) CFA_SP SP+-1
        CFI (cfiCond285) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond286 Using cfiCommon0
        CFI (cfiCond286) NoFunction
        CFI (cfiCond286) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_259
        CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond286) CFA_SP SP+0
        CFI (cfiCond286) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond287 Using cfiCommon0
        CFI (cfiCond287) NoFunction
        CFI (cfiCond287) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_260
        CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond287) CFA_SP SP+0
        CFI (cfiCond287) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond288 Using cfiCommon0
        CFI (cfiCond288) NoFunction
        CFI (cfiCond288) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_261
        CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond288) CFA_SP SP+0
        CFI (cfiCond288) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond289 Using cfiCommon0
        CFI (cfiCond289) NoFunction
        CFI (cfiCond289) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_262
        CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond289) CFA_SP SP+0
        CFI (cfiCond289) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond290 Using cfiCommon0
        CFI (cfiCond290) NoFunction
        CFI (cfiCond290) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_263
        CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond290) CFA_SP SP+0
        CFI (cfiCond290) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond291 Using cfiCommon0
        CFI (cfiCond291) NoFunction
        CFI (cfiCond291) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_264
        CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond291) CFA_SP SP+0
        CFI (cfiCond291) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond292 Using cfiCommon0
        CFI (cfiCond292) NoFunction
        CFI (cfiCond292) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_265
        CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond292) CFA_SP SP+0
        CFI (cfiCond292) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond293 Using cfiCommon0
        CFI (cfiCond293) NoFunction
        CFI (cfiCond293) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond293) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond293) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond293) CFA_SP SP+-5
        CFI Block cfiCond294 Using cfiCommon0
        CFI (cfiCond294) NoFunction
        CFI (cfiCond294) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond294) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond294) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond294) CFA_SP SP+-5
        CFI Block cfiCond295 Using cfiCommon0
        CFI (cfiCond295) NoFunction
        CFI (cfiCond295) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_266
        CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond295) CFA_SP SP+0
        CFI (cfiCond295) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond296 Using cfiCommon0
        CFI (cfiCond296) NoFunction
        CFI (cfiCond296) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_267
        CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond296) CFA_SP SP+-1
        CFI (cfiCond296) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond297 Using cfiCommon0
        CFI (cfiCond297) NoFunction
        CFI (cfiCond297) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_268
        CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond297) CFA_SP SP+-1
        CFI (cfiCond297) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond298 Using cfiCommon0
        CFI (cfiCond298) NoFunction
        CFI (cfiCond298) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_269
        CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond298) CFA_SP SP+0
        CFI (cfiCond298) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond299 Using cfiCommon0
        CFI (cfiCond299) NoFunction
        CFI (cfiCond299) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_270
        CFI (cfiCond299) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond299) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond299) CFA_SP SP+-6
        CFI (cfiCond299) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond300 Using cfiCommon0
        CFI (cfiCond300) NoFunction
        CFI (cfiCond300) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_35
        CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond300) CFA_SP SP+0
        CFI (cfiCond300) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond301 Using cfiCommon0
        CFI (cfiCond301) NoFunction
        CFI (cfiCond301) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_36
        CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond301) CFA_SP SP+0
        CFI (cfiCond301) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond302 Using cfiCommon0
        CFI (cfiCond302) NoFunction
        CFI (cfiCond302) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_23
        CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond302) CFA_SP SP+0
        CFI (cfiCond302) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond303 Using cfiCommon0
        CFI (cfiCond303) NoFunction
        CFI (cfiCond303) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_24
        CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond303) CFA_SP SP+0
        CFI (cfiCond303) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond304 Using cfiCommon0
        CFI (cfiCond304) NoFunction
        CFI (cfiCond304) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_25
        CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond304) CFA_SP SP+0
        CFI (cfiCond304) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond305 Using cfiCommon0
        CFI (cfiCond305) NoFunction
        CFI (cfiCond305) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_110
        CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond305) CFA_SP SP+0
        CFI (cfiCond305) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond306 Using cfiCommon0
        CFI (cfiCond306) NoFunction
        CFI (cfiCond306) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_111
        CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond306) CFA_SP SP+-1
        CFI (cfiCond306) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond307 Using cfiCommon0
        CFI (cfiCond307) NoFunction
        CFI (cfiCond307) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_100
        CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond307) CFA_SP SP+0
        CFI (cfiCond307) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond308 Using cfiCommon0
        CFI (cfiCond308) NoFunction
        CFI (cfiCond308) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_101
        CFI (cfiCond308) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond308) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond308) CFA_SP SP+-5
        CFI (cfiCond308) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker309 Using cfiCommon1
        CFI (cfiPicker309) NoFunction
        CFI (cfiPicker309) Picker
        INC     DPTR
        CFI EndBlock cfiCond270
        CFI EndBlock cfiCond271
        CFI EndBlock cfiCond272
        CFI EndBlock cfiCond273
        CFI EndBlock cfiCond274
        CFI EndBlock cfiCond275
        CFI EndBlock cfiCond276
        CFI EndBlock cfiCond277
        CFI EndBlock cfiCond278
        CFI EndBlock cfiCond279
        CFI EndBlock cfiCond280
        CFI EndBlock cfiCond281
        CFI EndBlock cfiCond282
        CFI EndBlock cfiCond283
        CFI EndBlock cfiCond284
        CFI EndBlock cfiCond285
        CFI EndBlock cfiCond286
        CFI EndBlock cfiCond287
        CFI EndBlock cfiCond288
        CFI EndBlock cfiCond289
        CFI EndBlock cfiCond290
        CFI EndBlock cfiCond291
        CFI EndBlock cfiCond292
        CFI EndBlock cfiCond293
        CFI EndBlock cfiCond294
        CFI EndBlock cfiCond295
        CFI EndBlock cfiCond296
        CFI EndBlock cfiCond297
        CFI EndBlock cfiCond298
        CFI EndBlock cfiCond299
        CFI EndBlock cfiCond300
        CFI EndBlock cfiCond301
        CFI EndBlock cfiCond302
        CFI EndBlock cfiCond303
        CFI EndBlock cfiCond304
        CFI EndBlock cfiCond305
        CFI EndBlock cfiCond306
        CFI EndBlock cfiCond307
        CFI EndBlock cfiCond308
        CFI EndBlock cfiPicker309
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine166_0:
        CFI Block cfiCond310 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_61
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond311 Using cfiCommon0
        CFI (cfiCond311) NoFunction
        CFI (cfiCond311) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_62
        CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond311) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond311) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond311) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond311) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond311) CFA_SP SP+0
        CFI (cfiCond311) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond312 Using cfiCommon0
        CFI (cfiCond312) NoFunction
        CFI (cfiCond312) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_30
        CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond312) CFA_SP SP+0
        CFI (cfiCond312) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond313 Using cfiCommon0
        CFI (cfiCond313) NoFunction
        CFI (cfiCond313) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_31
        CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond313) CFA_SP SP+0
        CFI (cfiCond313) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond314 Using cfiCommon0
        CFI (cfiCond314) NoFunction
        CFI (cfiCond314) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_32
        CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond314) CFA_SP SP+0
        CFI (cfiCond314) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond315 Using cfiCommon0
        CFI (cfiCond315) NoFunction
        CFI (cfiCond315) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_588
        CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond315) CFA_SP SP+0
        CFI (cfiCond315) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond316 Using cfiCommon0
        CFI (cfiCond316) NoFunction
        CFI (cfiCond316) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_589
        CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond316) CFA_SP SP+0
        CFI (cfiCond316) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond317 Using cfiCommon0
        CFI (cfiCond317) NoFunction
        CFI (cfiCond317) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_587
        CFI (cfiCond317) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond317) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond317) CFA_SP SP+-5
        CFI (cfiCond317) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond318 Using cfiCommon0
        CFI (cfiCond318) NoFunction
        CFI (cfiCond318) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_112
        CFI (cfiCond318) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond318) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond318) CFA_SP SP+-5
        CFI (cfiCond318) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond319 Using cfiCommon0
        CFI (cfiCond319) NoFunction
        CFI (cfiCond319) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_113
        CFI (cfiCond319) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond319) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond319) CFA_SP SP+-5
        CFI (cfiCond319) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond320 Using cfiCommon0
        CFI (cfiCond320) NoFunction
        CFI (cfiCond320) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_604
        CFI (cfiCond320) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond320) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond320) CFA_SP SP+-5
        CFI (cfiCond320) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond321 Using cfiCommon0
        CFI (cfiCond321) NoFunction
        CFI (cfiCond321) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_605
        CFI (cfiCond321) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond321) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond321) CFA_SP SP+-5
        CFI (cfiCond321) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond322 Using cfiCommon0
        CFI (cfiCond322) NoFunction
        CFI (cfiCond322) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_603
        CFI (cfiCond322) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond322) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond322) CFA_SP SP+-5
        CFI (cfiCond322) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond323 Using cfiCommon0
        CFI (cfiCond323) NoFunction
        CFI (cfiCond323) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_600
        CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond323) CFA_SP SP+0
        CFI (cfiCond323) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond324 Using cfiCommon0
        CFI (cfiCond324) NoFunction
        CFI (cfiCond324) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_601
        CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond324) CFA_SP SP+0
        CFI (cfiCond324) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond325 Using cfiCommon0
        CFI (cfiCond325) NoFunction
        CFI (cfiCond325) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_602
        CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond325) CFA_SP SP+0
        CFI (cfiCond325) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond326 Using cfiCommon0
        CFI (cfiCond326) NoFunction
        CFI (cfiCond326) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_595
        CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond326) CFA_SP SP+0
        CFI (cfiCond326) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond327 Using cfiCommon0
        CFI (cfiCond327) NoFunction
        CFI (cfiCond327) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_596
        CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond327) CFA_SP SP+0
        CFI (cfiCond327) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond328 Using cfiCommon0
        CFI (cfiCond328) NoFunction
        CFI (cfiCond328) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_597
        CFI (cfiCond328) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond328) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond328) CFA_SP SP+-5
        CFI (cfiCond328) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond329 Using cfiCommon0
        CFI (cfiCond329) NoFunction
        CFI (cfiCond329) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_598
        CFI (cfiCond329) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond329) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond329) CFA_SP SP+-5
        CFI (cfiCond329) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond330 Using cfiCommon0
        CFI (cfiCond330) NoFunction
        CFI (cfiCond330) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_599
        CFI (cfiCond330) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond330) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond330) CFA_SP SP+-5
        CFI (cfiCond330) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond331 Using cfiCommon0
        CFI (cfiCond331) NoFunction
        CFI (cfiCond331) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_594
        CFI (cfiCond331) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond331) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond331) CFA_SP SP+-5
        CFI (cfiCond331) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond332 Using cfiCommon0
        CFI (cfiCond332) NoFunction
        CFI (cfiCond332) Conditional ??CrossCallReturnLabel_606
        CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond332) CFA_SP SP+0
        CFI (cfiCond332) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond333 Using cfiCommon0
        CFI (cfiCond333) NoFunction
        CFI (cfiCond333) Conditional ??CrossCallReturnLabel_607
        CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond333) CFA_SP SP+0
        CFI (cfiCond333) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond334 Using cfiCommon0
        CFI (cfiCond334) NoFunction
        CFI (cfiCond334) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_28
        CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond334) CFA_SP SP+0
        CFI (cfiCond334) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond335 Using cfiCommon0
        CFI (cfiCond335) NoFunction
        CFI (cfiCond335) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_29
        CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond335) CFA_SP SP+0
        CFI (cfiCond335) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond336 Using cfiCommon0
        CFI (cfiCond336) NoFunction
        CFI (cfiCond336) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_272
        CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond336) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond336) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond336) CFA_SP SP+-1
        CFI (cfiCond336) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond337 Using cfiCommon0
        CFI (cfiCond337) NoFunction
        CFI (cfiCond337) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_273
        CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond337) CFA_SP SP+0
        CFI (cfiCond337) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond338 Using cfiCommon0
        CFI (cfiCond338) NoFunction
        CFI (cfiCond338) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_274
        CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond338) CFA_SP SP+0
        CFI (cfiCond338) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond339 Using cfiCommon0
        CFI (cfiCond339) NoFunction
        CFI (cfiCond339) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_275
        CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond339) CFA_SP SP+0
        CFI (cfiCond339) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond340 Using cfiCommon0
        CFI (cfiCond340) NoFunction
        CFI (cfiCond340) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_276
        CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond340) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond340) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond340) CFA_SP SP+0
        CFI (cfiCond340) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond341 Using cfiCommon0
        CFI (cfiCond341) NoFunction
        CFI (cfiCond341) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_277
        CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond341) CFA_SP SP+0
        CFI (cfiCond341) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond342 Using cfiCommon0
        CFI (cfiCond342) NoFunction
        CFI (cfiCond342) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_278
        CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond342) CFA_SP SP+-1
        CFI (cfiCond342) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond343 Using cfiCommon0
        CFI (cfiCond343) NoFunction
        CFI (cfiCond343) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_254
        CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond343) CFA_SP SP+0
        CFI (cfiCond343) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond344 Using cfiCommon0
        CFI (cfiCond344) NoFunction
        CFI (cfiCond344) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_255
        CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond344) CFA_SP SP+0
        CFI (cfiCond344) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond345 Using cfiCommon0
        CFI (cfiCond345) NoFunction
        CFI (cfiCond345) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_256
        CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond345) CFA_SP SP+0
        CFI (cfiCond345) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond346 Using cfiCommon0
        CFI (cfiCond346) NoFunction
        CFI (cfiCond346) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_257
        CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond346) CFA_SP SP+0
        CFI (cfiCond346) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond347 Using cfiCommon0
        CFI (cfiCond347) NoFunction
        CFI (cfiCond347) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_258
        CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond347) CFA_SP SP+-1
        CFI (cfiCond347) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond348 Using cfiCommon0
        CFI (cfiCond348) NoFunction
        CFI (cfiCond348) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_259
        CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond348) CFA_SP SP+0
        CFI (cfiCond348) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond349 Using cfiCommon0
        CFI (cfiCond349) NoFunction
        CFI (cfiCond349) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_260
        CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond349) CFA_SP SP+0
        CFI (cfiCond349) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond350 Using cfiCommon0
        CFI (cfiCond350) NoFunction
        CFI (cfiCond350) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_261
        CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond350) CFA_SP SP+0
        CFI (cfiCond350) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond351 Using cfiCommon0
        CFI (cfiCond351) NoFunction
        CFI (cfiCond351) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_262
        CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond351) CFA_SP SP+0
        CFI (cfiCond351) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond352 Using cfiCommon0
        CFI (cfiCond352) NoFunction
        CFI (cfiCond352) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_263
        CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond352) CFA_SP SP+0
        CFI (cfiCond352) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond353 Using cfiCommon0
        CFI (cfiCond353) NoFunction
        CFI (cfiCond353) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_264
        CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond353) CFA_SP SP+0
        CFI (cfiCond353) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond354 Using cfiCommon0
        CFI (cfiCond354) NoFunction
        CFI (cfiCond354) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_265
        CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond354) CFA_SP SP+0
        CFI (cfiCond354) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond355 Using cfiCommon0
        CFI (cfiCond355) NoFunction
        CFI (cfiCond355) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond355) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond355) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond355) CFA_SP SP+-5
        CFI Block cfiCond356 Using cfiCommon0
        CFI (cfiCond356) NoFunction
        CFI (cfiCond356) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_271
        CFI (cfiCond356) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond356) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond356) CFA_SP SP+-5
        CFI Block cfiCond357 Using cfiCommon0
        CFI (cfiCond357) NoFunction
        CFI (cfiCond357) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_266
        CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond357) CFA_SP SP+0
        CFI (cfiCond357) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond358 Using cfiCommon0
        CFI (cfiCond358) NoFunction
        CFI (cfiCond358) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_267
        CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond358) CFA_SP SP+-1
        CFI (cfiCond358) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond359 Using cfiCommon0
        CFI (cfiCond359) NoFunction
        CFI (cfiCond359) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_268
        CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond359) CFA_SP SP+-1
        CFI (cfiCond359) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond360 Using cfiCommon0
        CFI (cfiCond360) NoFunction
        CFI (cfiCond360) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_269
        CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond360) CFA_SP SP+0
        CFI (cfiCond360) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond361 Using cfiCommon0
        CFI (cfiCond361) NoFunction
        CFI (cfiCond361) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_270
        CFI (cfiCond361) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond361) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond361) CFA_SP SP+-6
        CFI (cfiCond361) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond362 Using cfiCommon0
        CFI (cfiCond362) NoFunction
        CFI (cfiCond362) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_35
        CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond362) CFA_SP SP+0
        CFI (cfiCond362) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond363 Using cfiCommon0
        CFI (cfiCond363) NoFunction
        CFI (cfiCond363) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_36
        CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond363) CFA_SP SP+0
        CFI (cfiCond363) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond364 Using cfiCommon0
        CFI (cfiCond364) NoFunction
        CFI (cfiCond364) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_23
        CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond364) CFA_SP SP+0
        CFI (cfiCond364) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond365 Using cfiCommon0
        CFI (cfiCond365) NoFunction
        CFI (cfiCond365) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_24
        CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond365) CFA_SP SP+0
        CFI (cfiCond365) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond366 Using cfiCommon0
        CFI (cfiCond366) NoFunction
        CFI (cfiCond366) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_25
        CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond366) CFA_SP SP+0
        CFI (cfiCond366) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond367 Using cfiCommon0
        CFI (cfiCond367) NoFunction
        CFI (cfiCond367) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_110
        CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond367) CFA_SP SP+0
        CFI (cfiCond367) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond368 Using cfiCommon0
        CFI (cfiCond368) NoFunction
        CFI (cfiCond368) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_111
        CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond368) CFA_SP SP+-1
        CFI (cfiCond368) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond369 Using cfiCommon0
        CFI (cfiCond369) NoFunction
        CFI (cfiCond369) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_100
        CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond369) CFA_SP SP+0
        CFI (cfiCond369) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond370 Using cfiCommon0
        CFI (cfiCond370) NoFunction
        CFI (cfiCond370) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_101
        CFI (cfiCond370) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond370) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond370) CFA_SP SP+-5
        CFI (cfiCond370) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker371 Using cfiCommon1
        CFI (cfiPicker371) NoFunction
        CFI (cfiPicker371) Picker
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond310
        CFI EndBlock cfiCond311
        CFI EndBlock cfiCond312
        CFI EndBlock cfiCond313
        CFI EndBlock cfiCond314
        CFI EndBlock cfiCond315
        CFI EndBlock cfiCond316
        CFI EndBlock cfiCond317
        CFI EndBlock cfiCond318
        CFI EndBlock cfiCond319
        CFI EndBlock cfiCond320
        CFI EndBlock cfiCond321
        CFI EndBlock cfiCond322
        CFI EndBlock cfiCond323
        CFI EndBlock cfiCond324
        CFI EndBlock cfiCond325
        CFI EndBlock cfiCond326
        CFI EndBlock cfiCond327
        CFI EndBlock cfiCond328
        CFI EndBlock cfiCond329
        CFI EndBlock cfiCond330
        CFI EndBlock cfiCond331
        CFI EndBlock cfiCond332
        CFI EndBlock cfiCond333
        CFI EndBlock cfiCond334
        CFI EndBlock cfiCond335
        CFI EndBlock cfiCond336
        CFI EndBlock cfiCond337
        CFI EndBlock cfiCond338
        CFI EndBlock cfiCond339
        CFI EndBlock cfiCond340
        CFI EndBlock cfiCond341
        CFI EndBlock cfiCond342
        CFI EndBlock cfiCond343
        CFI EndBlock cfiCond344
        CFI EndBlock cfiCond345
        CFI EndBlock cfiCond346
        CFI EndBlock cfiCond347
        CFI EndBlock cfiCond348
        CFI EndBlock cfiCond349
        CFI EndBlock cfiCond350
        CFI EndBlock cfiCond351
        CFI EndBlock cfiCond352
        CFI EndBlock cfiCond353
        CFI EndBlock cfiCond354
        CFI EndBlock cfiCond355
        CFI EndBlock cfiCond356
        CFI EndBlock cfiCond357
        CFI EndBlock cfiCond358
        CFI EndBlock cfiCond359
        CFI EndBlock cfiCond360
        CFI EndBlock cfiCond361
        CFI EndBlock cfiCond362
        CFI EndBlock cfiCond363
        CFI EndBlock cfiCond364
        CFI EndBlock cfiCond365
        CFI EndBlock cfiCond366
        CFI EndBlock cfiCond367
        CFI EndBlock cfiCond368
        CFI EndBlock cfiCond369
        CFI EndBlock cfiCond370
        CFI EndBlock cfiPicker371

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond372 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_8
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond373 Using cfiCommon0
        CFI (cfiCond373) NoFunction
        CFI (cfiCond373) Conditional ??CrossCallReturnLabel_9
        CFI (cfiCond373) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond373) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond373) CFA_SP SP+-5
        CFI Block cfiCond374 Using cfiCommon0
        CFI (cfiCond374) NoFunction
        CFI (cfiCond374) Conditional ??CrossCallReturnLabel_10
        CFI (cfiCond374) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond374) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond374) CFA_SP SP+-5
        CFI Block cfiCond375 Using cfiCommon0
        CFI (cfiCond375) NoFunction
        CFI (cfiCond375) Conditional ??CrossCallReturnLabel_11
        CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond375) CFA_SP SP+0
        CFI (cfiCond375) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond376 Using cfiCommon0
        CFI (cfiCond376) NoFunction
        CFI (cfiCond376) Conditional ??CrossCallReturnLabel_12
        CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond376) CFA_SP SP+0
        CFI (cfiCond376) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond377 Using cfiCommon0
        CFI (cfiCond377) NoFunction
        CFI (cfiCond377) Conditional ??CrossCallReturnLabel_13
        CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond377) CFA_SP SP+0
        CFI (cfiCond377) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond378 Using cfiCommon0
        CFI (cfiCond378) NoFunction
        CFI (cfiCond378) Conditional ??CrossCallReturnLabel_14
        CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond378) CFA_SP SP+0
        CFI (cfiCond378) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond379 Using cfiCommon0
        CFI (cfiCond379) NoFunction
        CFI (cfiCond379) Conditional ??CrossCallReturnLabel_15
        CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond379) CFA_SP SP+0
        CFI (cfiCond379) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond380 Using cfiCommon0
        CFI (cfiCond380) NoFunction
        CFI (cfiCond380) Conditional ??CrossCallReturnLabel_16
        CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond380) CFA_SP SP+0
        CFI (cfiCond380) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond381 Using cfiCommon0
        CFI (cfiCond381) NoFunction
        CFI (cfiCond381) Conditional ??CrossCallReturnLabel_17
        CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond381) CFA_SP SP+0
        CFI (cfiCond381) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond382 Using cfiCommon0
        CFI (cfiCond382) NoFunction
        CFI (cfiCond382) Conditional ??CrossCallReturnLabel_18
        CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond382) CFA_SP SP+0
        CFI (cfiCond382) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond383 Using cfiCommon0
        CFI (cfiCond383) NoFunction
        CFI (cfiCond383) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond383) CFA_SP SP+0
        CFI (cfiCond383) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond384 Using cfiCommon0
        CFI (cfiCond384) NoFunction
        CFI (cfiCond384) Conditional ??CrossCallReturnLabel_20
        CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond384) CFA_SP SP+0
        CFI (cfiCond384) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond385 Using cfiCommon0
        CFI (cfiCond385) NoFunction
        CFI (cfiCond385) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond385) CFA_SP SP+0
        CFI (cfiCond385) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond386 Using cfiCommon0
        CFI (cfiCond386) NoFunction
        CFI (cfiCond386) Conditional ??CrossCallReturnLabel_22
        CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond386) CFA_SP SP+0
        CFI (cfiCond386) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker387 Using cfiCommon1
        CFI (cfiPicker387) NoFunction
        CFI (cfiPicker387) Picker
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R0
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        RET
        CFI EndBlock cfiCond372
        CFI EndBlock cfiCond373
        CFI EndBlock cfiCond374
        CFI EndBlock cfiCond375
        CFI EndBlock cfiCond376
        CFI EndBlock cfiCond377
        CFI EndBlock cfiCond378
        CFI EndBlock cfiCond379
        CFI EndBlock cfiCond380
        CFI EndBlock cfiCond381
        CFI EndBlock cfiCond382
        CFI EndBlock cfiCond383
        CFI EndBlock cfiCond384
        CFI EndBlock cfiCond385
        CFI EndBlock cfiCond386
        CFI EndBlock cfiPicker387
// 1260 
// 1261 /* Render a cJSON item/entity/structure to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1262 CJSON_PUBLIC(char *) cJSON_Print(const cJSON *item)
cJSON_Print:
        CFI Block cfiBlock388 Using cfiCommon0
        CFI Function cJSON_Print
        CODE
// 1263 {
        FUNCALL cJSON_Print, print
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1264     return (char*)print(item, true, &global_hooks);
        ; Setup parameters for call to function print
        MOV     ?V0 + 0,#global_hooks & 0xff
        MOV     ?V0 + 1,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x1
        CFI EndBlock cfiBlock388
        REQUIRE ?Subroutine12
        ; // Fall through to label ?Subroutine12
// 1265 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiBlock389 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        LCALL   ??print?relay
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock389
// 1266 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1267 CJSON_PUBLIC(char *) cJSON_PrintUnformatted(const cJSON *item)
cJSON_PrintUnformatted:
        CFI Block cfiBlock390 Using cfiCommon0
        CFI Function cJSON_PrintUnformatted
        CODE
// 1268 {
        FUNCALL cJSON_PrintUnformatted, print
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1269     return (char*)print(item, false, &global_hooks);
        ; Setup parameters for call to function print
        MOV     ?V0 + 0,#global_hooks & 0xff
        MOV     ?V0 + 1,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        SJMP    ?Subroutine12
        CFI EndBlock cfiBlock390
// 1270 }
// 1271 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1272 CJSON_PUBLIC(char *) cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)
cJSON_PrintBuffered:
        CFI Block cfiBlock391 Using cfiCommon0
        CFI Function cJSON_PrintBuffered
        CODE
// 1273 {
        FUNCALL cJSON_PrintBuffered, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
// 1274     printbuffer p = { 0, 0, 0, 0, 0, 0, { 0, 0, 0 } };
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,` & 0xff
        MOV     A,#0x12
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1275 
// 1276     if (prebuffer < 0)
        CLR     C
        MOV     A,?V0 + 1
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_510:
        JNC     ??cJSON_PrintBuffered_0
// 1277     {
// 1278         return NULL;
??cJSON_PrintBuffered_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??CrossCallReturnLabel_410
// 1279     }
// 1280 
// 1281     p.buffer = (unsigned char*)global_hooks.allocate((size_t)prebuffer);
??cJSON_PrintBuffered_0:
        ; Setup parameters for indirect call
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     DPTR,#global_hooks
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL   ?CALL_IND
        LCALL   ?Subroutine106 & 0xFFFF
// 1282     if (!p.buffer)
??CrossCallReturnLabel_289:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_469:
        JZ      ??cJSON_PrintBuffered_1
// 1283     {
// 1284         return NULL;
// 1285     }
// 1286 
// 1287     p.length = (size_t)prebuffer;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine211_0 & 0xFFFF
// 1288     p.offset = 0;
??CrossCallReturnLabel_516:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1289     p.noalloc = false;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1290     p.format = fmt;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine177_0 & 0xFFFF
// 1291     p.hooks = global_hooks;
??CrossCallReturnLabel_339:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1292 
// 1293     if (!print_value(item, &p))
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??print_value?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JNZ     ??cJSON_PrintBuffered_2
// 1294     {
// 1295         global_hooks.deallocate(p.buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine23 & 0xFFFF
// 1296         return NULL;
// 1297     }
??CrossCallReturnLabel_25:
        LCALL   ?CALL_IND
        SJMP    ??cJSON_PrintBuffered_1
// 1298 
// 1299     return (char*)p.buffer;
??cJSON_PrintBuffered_2:
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_410:
        MOV     A,#0x12
        LJMP    ??Subroutine183_0 & 0xFFFF
        CFI EndBlock cfiBlock391
// 1300 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
        CFI Block cfiCond392 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_289
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond393 Using cfiCommon0
        CFI (cfiCond393) NoFunction
        CFI (cfiCond393) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond393) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond393) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond393) CFA_SP SP+-5
        CFI (cfiCond393) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker394 Using cfiCommon1
        CFI (cfiPicker394) NoFunction
        CFI (cfiPicker394) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        CFI EndBlock cfiCond392
        CFI EndBlock cfiCond393
        CFI EndBlock cfiPicker394
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine167_0:
        CFI Block cfiCond395 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_291
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond396 Using cfiCommon0
        CFI (cfiCond396) NoFunction
        CFI (cfiCond396) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond396) CFA_SP SP+0
        CFI (cfiCond396) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond397 Using cfiCommon0
        CFI (cfiCond397) NoFunction
        CFI (cfiCond397) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond397) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond397) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond397) CFA_SP SP+-5
        CFI (cfiCond397) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker398 Using cfiCommon1
        CFI (cfiPicker398) NoFunction
        CFI (cfiPicker398) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function strtod
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond395
        CFI EndBlock cfiCond396
        CFI EndBlock cfiCond397
        CFI EndBlock cfiPicker398

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond399 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_23
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond400 Using cfiCommon0
        CFI (cfiCond400) NoFunction
        CFI (cfiCond400) Conditional ??CrossCallReturnLabel_24
        CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond400) CFA_SP SP+0
        CFI (cfiCond400) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond401 Using cfiCommon0
        CFI (cfiCond401) NoFunction
        CFI (cfiCond401) Conditional ??CrossCallReturnLabel_25
        CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond401) CFA_SP SP+0
        CFI (cfiCond401) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker402 Using cfiCommon1
        CFI (cfiPicker402) NoFunction
        CFI (cfiPicker402) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_548:
        MOV     DPTR,#global_hooks + 2
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_279:
        RET
        CFI EndBlock cfiCond399
        CFI EndBlock cfiCond400
        CFI EndBlock cfiCond401
        CFI EndBlock cfiPicker402
// 1301 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1302 CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)
cJSON_PrintPreallocated:
        CFI Block cfiBlock403 Using cfiCommon0
        CFI Function cJSON_PrintPreallocated
        CODE
// 1303 {
        FUNCALL cJSON_PrintPreallocated, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
// 1304     printbuffer p = { 0, 0, 0, 0, 0, 0, { 0, 0, 0 } };
??CrossCallReturnLabel_524:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1` & 0xff
        MOV     A,#0x12
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1305 
// 1306     if ((length < 0) || (buffer == NULL))
        CLR     C
        MOV     A,R7
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_511:
        JC      ??cJSON_PrintPreallocated_0
        MOV     A,R0
        ORL     A,R1
        JNZ     ??cJSON_PrintPreallocated_1
// 1307     {
// 1308         return false;
??cJSON_PrintPreallocated_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_PrintPreallocated_2
// 1309     }
// 1310 
// 1311     p.buffer = (unsigned char*)buffer;
??cJSON_PrintPreallocated_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
// 1312     p.length = (size_t)length;
??CrossCallReturnLabel_435:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 1313     p.offset = 0;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1314     p.noalloc = true;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        LCALL   ??Subroutine217_0 & 0xFFFF
// 1315     p.format = format;
??CrossCallReturnLabel_561:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine211_0 & 0xFFFF
// 1316     p.hooks = global_hooks;
??CrossCallReturnLabel_517:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1317 
// 1318     return print_value(item, &p);
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??print_value?relay
??cJSON_PrintPreallocated_2:
        MOV     A,#0x12
        LJMP    ??Subroutine161_0 & 0xFFFF
        CFI EndBlock cfiBlock403
// 1319 }
// 1320 
// 1321 /* Parser core - when encountering text, process appropriately. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1322 static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer)
parse_value:
        CFI Block cfiBlock404 Using cfiCommon0
        CFI Function parse_value
        CODE
// 1323 {
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_string
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_number
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1324     if ((input_buffer == NULL) || (input_buffer->content == NULL))
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_value_0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_470:
        JNZ     ??parse_value_1
// 1325     {
// 1326         return false; /* no input */
??parse_value_0:
        MOV     R2,#0x0
??parse_value_2:
        MOV     R3,#0x0
        LJMP    ??parse_value_3 & 0xFFFF
// 1327     }
??parse_value_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_116:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_13:
        JC      ??parse_value_4
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_2:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_4
// 1328 
// 1329     /* parse the different types of values */
// 1330     /* null */
// 1331     if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "null", 4) == 0))
// 1332     {
// 1333         item->type = cJSON_NULL;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x4
??parse_value_5:
        LCALL   ?Subroutine94 & 0xFFFF
// 1334         input_buffer->offset += 4;
??CrossCallReturnLabel_343:
        ADD     A,#0x4
??parse_value_6:
        LCALL   ??Subroutine159_0 & 0xFFFF
// 1335         return true;
??CrossCallReturnLabel_237:
        MOV     R2,#0x1
        SJMP    ??parse_value_2
// 1336     }
??parse_value_4:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x5
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_14:
        JC      ??parse_value_7
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x5
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "false">` & 0xff
        MOV     R5,#(`?<Constant "false">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_3:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_7
// 1337     /* false */
// 1338     if (can_read(input_buffer, 5) && (strncmp((const char*)buffer_at_offset(input_buffer), "false", 5) == 0))
// 1339     {
// 1340         item->type = cJSON_False;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        LCALL   ?Subroutine94 & 0xFFFF
// 1341         input_buffer->offset += 5;
// 1342         return true;
// 1343     }
??CrossCallReturnLabel_344:
        ADD     A,#0x5
        SJMP    ??parse_value_6
??parse_value_7:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_117:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_15:
        JC      ??parse_value_8
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "true">` & 0xff
        MOV     R5,#(`?<Constant "true">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_8
// 1344     /* true */
// 1345     if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "true", 4) == 0))
// 1346     {
// 1347         item->type = cJSON_True;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        LCALL   ?Subroutine95 & 0xFFFF
// 1348         item->valueint = 1;
// 1349         input_buffer->offset += 4;
// 1350         return true;
// 1351     }
??CrossCallReturnLabel_155:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     A
        LJMP    ??parse_value_5 & 0xFFFF
??parse_value_8:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_626:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_16:
        JC      $+5
        LJMP    ??parse_value_0 & 0xFFFF
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_299:
        XRL     A,#0x22
        JNZ     ??parse_value_9
// 1352     /* string */
// 1353     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '\"'))
// 1354     {
// 1355         return parse_string(item, input_buffer);
        ; Setup parameters for call to function parse_string
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_string?relay
        SJMP    ??parse_value_3
// 1356     }
??parse_value_9:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_293:
        XRL     A,#0x2d
        JZ      ??parse_value_10
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_294:
        ADD     A,#-0x30
        CLR     C
        SUBB    A,#0xa
        JNC     ??parse_value_11
// 1357     /* number */
// 1358     if (can_access_at_index(input_buffer, 0) && ((buffer_at_offset(input_buffer)[0] == '-') || ((buffer_at_offset(input_buffer)[0] >= '0') && (buffer_at_offset(input_buffer)[0] <= '9'))))
// 1359     {
// 1360         return parse_number(item, input_buffer);
??parse_value_10:
        ; Setup parameters for call to function parse_number
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_number?relay
        SJMP    ??parse_value_3
// 1361     }
??parse_value_11:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_295:
        XRL     A,#0x5b
        JNZ     ??parse_value_12
// 1362     /* array */
// 1363     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '['))
// 1364     {
// 1365         return parse_array(item, input_buffer);
        ; Setup parameters for call to function parse_array
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_array?relay
        SJMP    ??parse_value_3
// 1366     }
??parse_value_12:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_296:
        XRL     A,#0x7b
        JZ      $+5
        LJMP    ??parse_value_0 & 0xFFFF
// 1367     /* object */
// 1368     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '{'))
// 1369     {
// 1370         return parse_object(item, input_buffer);
        ; Setup parameters for call to function parse_object
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_object?relay
// 1371     }
??parse_value_3:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock404
// 1372 
// 1373     return false;
// 1374 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
        CFI Block cfiCond405 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_154
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond406 Using cfiCommon0
        CFI (cfiCond406) NoFunction
        CFI (cfiCond406) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond406) CFA_SP SP+0
        CFI (cfiCond406) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond407 Using cfiCommon0
        CFI (cfiCond407) NoFunction
        CFI (cfiCond407) Conditional ??CrossCallReturnLabel_156
        CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond407) CFA_SP SP+0
        CFI (cfiCond407) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker408 Using cfiCommon1
        CFI (cfiPicker408) NoFunction
        CFI (cfiPicker408) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond405
        CFI EndBlock cfiCond406
        CFI EndBlock cfiCond407
        CFI EndBlock cfiPicker408

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
        CFI Block cfiCond409 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_116
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-2
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond410 Using cfiCommon0
        CFI (cfiCond410) NoFunction
        CFI (cfiCond410) Conditional ??CrossCallReturnLabel_117
        CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond410) CFA_SP SP+-2
        CFI (cfiCond410) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker411 Using cfiCommon1
        CFI (cfiPicker411) NoFunction
        CFI (cfiPicker411) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond409
        CFI EndBlock cfiCond410
        CFI EndBlock cfiPicker411

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond412 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_293
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond413 Using cfiCommon0
        CFI (cfiCond413) NoFunction
        CFI (cfiCond413) Conditional ??CrossCallReturnLabel_294
        CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond413) CFA_SP SP+0
        CFI (cfiCond413) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond414 Using cfiCommon0
        CFI (cfiCond414) NoFunction
        CFI (cfiCond414) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond414) CFA_SP SP+0
        CFI (cfiCond414) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond415 Using cfiCommon0
        CFI (cfiCond415) NoFunction
        CFI (cfiCond415) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond415) CFA_SP SP+0
        CFI (cfiCond415) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond416 Using cfiCommon0
        CFI (cfiCond416) NoFunction
        CFI (cfiCond416) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond416) CFA_SP SP+0
        CFI (cfiCond416) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker417 Using cfiCommon1
        CFI (cfiPicker417) NoFunction
        CFI (cfiPicker417) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond412
        CFI EndBlock cfiCond413
        CFI EndBlock cfiCond414
        CFI EndBlock cfiCond415
        CFI EndBlock cfiCond416
        CFI EndBlock cfiPicker417
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine168_0:
        CFI Block cfiCond418 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_292
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond419 Using cfiCommon0
        CFI (cfiCond419) NoFunction
        CFI (cfiCond419) Conditional ??CrossCallReturnLabel_293
        CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond419) CFA_SP SP+0
        CFI (cfiCond419) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond420 Using cfiCommon0
        CFI (cfiCond420) NoFunction
        CFI (cfiCond420) Conditional ??CrossCallReturnLabel_294
        CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond420) CFA_SP SP+0
        CFI (cfiCond420) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond421 Using cfiCommon0
        CFI (cfiCond421) NoFunction
        CFI (cfiCond421) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond421) CFA_SP SP+0
        CFI (cfiCond421) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond422 Using cfiCommon0
        CFI (cfiCond422) NoFunction
        CFI (cfiCond422) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond422) CFA_SP SP+0
        CFI (cfiCond422) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond423 Using cfiCommon0
        CFI (cfiCond423) NoFunction
        CFI (cfiCond423) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond423) CFA_SP SP+0
        CFI (cfiCond423) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker424 Using cfiCommon1
        CFI (cfiPicker424) NoFunction
        CFI (cfiPicker424) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond418
        CFI EndBlock cfiCond419
        CFI EndBlock cfiCond420
        CFI EndBlock cfiCond421
        CFI EndBlock cfiCond422
        CFI EndBlock cfiCond423
        CFI EndBlock cfiPicker424

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond425 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond426 Using cfiCommon0
        CFI (cfiCond426) NoFunction
        CFI (cfiCond426) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond426) CFA_SP SP+0
        CFI (cfiCond426) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond427 Using cfiCommon0
        CFI (cfiCond427) NoFunction
        CFI (cfiCond427) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond427) CFA_SP SP+0
        CFI (cfiCond427) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker428 Using cfiCommon1
        CFI (cfiPicker428) NoFunction
        CFI (cfiPicker428) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV     R3,A
        LCALL   ??strncmp?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond425
        CFI EndBlock cfiCond426
        CFI EndBlock cfiCond427
        CFI EndBlock cfiPicker428

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond429 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_299
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond430 Using cfiCommon0
        CFI (cfiCond430) NoFunction
        CFI (cfiCond430) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond430) CFA_SP SP+0
        CFI (cfiCond430) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond431 Using cfiCommon0
        CFI (cfiCond431) NoFunction
        CFI (cfiCond431) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond431) CFA_SP SP+0
        CFI (cfiCond431) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond432 Using cfiCommon0
        CFI (cfiCond432) NoFunction
        CFI (cfiCond432) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond432) CFA_SP SP+0
        CFI (cfiCond432) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker433 Using cfiCommon1
        CFI (cfiPicker433) NoFunction
        CFI (cfiPicker433) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CFI EndBlock cfiCond429
        CFI EndBlock cfiCond430
        CFI EndBlock cfiCond431
        CFI EndBlock cfiCond432
        CFI EndBlock cfiPicker433
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine169_0:
        CFI Block cfiCond434 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_298
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond435 Using cfiCommon0
        CFI (cfiCond435) NoFunction
        CFI (cfiCond435) Conditional ??CrossCallReturnLabel_299
        CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond435) CFA_SP SP+0
        CFI (cfiCond435) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond436 Using cfiCommon0
        CFI (cfiCond436) NoFunction
        CFI (cfiCond436) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond436) CFA_SP SP+0
        CFI (cfiCond436) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond437 Using cfiCommon0
        CFI (cfiCond437) NoFunction
        CFI (cfiCond437) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond437) CFA_SP SP+0
        CFI (cfiCond437) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond438 Using cfiCommon0
        CFI (cfiCond438) NoFunction
        CFI (cfiCond438) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond438) CFA_SP SP+0
        CFI (cfiCond438) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker439 Using cfiCommon1
        CFI (cfiPicker439) NoFunction
        CFI (cfiPicker439) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond434
        CFI EndBlock cfiCond435
        CFI EndBlock cfiCond436
        CFI EndBlock cfiCond437
        CFI EndBlock cfiCond438
        CFI EndBlock cfiPicker439

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
        CFI Block cfiCond440 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond441 Using cfiCommon0
        CFI (cfiCond441) NoFunction
        CFI (cfiCond441) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_3
        CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond441) CFA_SP SP+0
        CFI (cfiCond441) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond442 Using cfiCommon0
        CFI (cfiCond442) NoFunction
        CFI (cfiCond442) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_4
        CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond442) CFA_SP SP+0
        CFI (cfiCond442) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond443 Using cfiCommon0
        CFI (cfiCond443) NoFunction
        CFI (cfiCond443) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_299
        CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond443) CFA_SP SP+0
        CFI (cfiCond443) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond444 Using cfiCommon0
        CFI (cfiCond444) NoFunction
        CFI (cfiCond444) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_300
        CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond444) CFA_SP SP+0
        CFI (cfiCond444) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond445 Using cfiCommon0
        CFI (cfiCond445) NoFunction
        CFI (cfiCond445) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_301
        CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond445) CFA_SP SP+0
        CFI (cfiCond445) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond446 Using cfiCommon0
        CFI (cfiCond446) NoFunction
        CFI (cfiCond446) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_302
        CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond446) CFA_SP SP+0
        CFI (cfiCond446) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond447 Using cfiCommon0
        CFI (cfiCond447) NoFunction
        CFI (cfiCond447) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_298
        CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond447) CFA_SP SP+0
        CFI (cfiCond447) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker448 Using cfiCommon1
        CFI (cfiPicker448) NoFunction
        CFI (cfiPicker448) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_325:
        RET
        CFI EndBlock cfiCond440
        CFI EndBlock cfiCond441
        CFI EndBlock cfiCond442
        CFI EndBlock cfiCond443
        CFI EndBlock cfiCond444
        CFI EndBlock cfiCond445
        CFI EndBlock cfiCond446
        CFI EndBlock cfiCond447
        CFI EndBlock cfiPicker448

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine150:
        CFI Block cfiCond449 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_324
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond450 Using cfiCommon0
        CFI (cfiCond450) NoFunction
        CFI (cfiCond450) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_2
        CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond450) CFA_SP SP+0
        CFI (cfiCond450) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond451 Using cfiCommon0
        CFI (cfiCond451) NoFunction
        CFI (cfiCond451) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_3
        CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond451) CFA_SP SP+0
        CFI (cfiCond451) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond452 Using cfiCommon0
        CFI (cfiCond452) NoFunction
        CFI (cfiCond452) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_4
        CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond452) CFA_SP SP+0
        CFI (cfiCond452) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond453 Using cfiCommon0
        CFI (cfiCond453) NoFunction
        CFI (cfiCond453) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_299
        CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond453) CFA_SP SP+0
        CFI (cfiCond453) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond454 Using cfiCommon0
        CFI (cfiCond454) NoFunction
        CFI (cfiCond454) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_300
        CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond454) CFA_SP SP+0
        CFI (cfiCond454) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond455 Using cfiCommon0
        CFI (cfiCond455) NoFunction
        CFI (cfiCond455) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_301
        CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond455) CFA_SP SP+0
        CFI (cfiCond455) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond456 Using cfiCommon0
        CFI (cfiCond456) NoFunction
        CFI (cfiCond456) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_302
        CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond456) CFA_SP SP+0
        CFI (cfiCond456) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond457 Using cfiCommon0
        CFI (cfiCond457) NoFunction
        CFI (cfiCond457) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_298
        CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond457) CFA_SP SP+0
        CFI (cfiCond457) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond458 Using cfiCommon0
        CFI (cfiCond458) NoFunction
        CFI (cfiCond458) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322
        CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond458) CFA_SP SP+0
        CFI (cfiCond458) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond459 Using cfiCommon0
        CFI (cfiCond459) NoFunction
        CFI (cfiCond459) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323
        CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond459) CFA_SP SP+0
        CFI (cfiCond459) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond460 Using cfiCommon0
        CFI (cfiCond460) NoFunction
        CFI (cfiCond460) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_320
        CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond460) CFA_SP SP+0
        CFI (cfiCond460) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond461 Using cfiCommon0
        CFI (cfiCond461) NoFunction
        CFI (cfiCond461) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_321
        CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond461) CFA_SP SP+0
        CFI (cfiCond461) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker462 Using cfiCommon1
        CFI (cfiPicker462) NoFunction
        CFI (cfiPicker462) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        RET
        CFI EndBlock cfiCond449
        CFI EndBlock cfiCond450
        CFI EndBlock cfiCond451
        CFI EndBlock cfiCond452
        CFI EndBlock cfiCond453
        CFI EndBlock cfiCond454
        CFI EndBlock cfiCond455
        CFI EndBlock cfiCond456
        CFI EndBlock cfiCond457
        CFI EndBlock cfiCond458
        CFI EndBlock cfiCond459
        CFI EndBlock cfiCond460
        CFI EndBlock cfiCond461
        CFI EndBlock cfiPicker462
// 1375 
// 1376 /* Render a value to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1377 static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer)
print_value:
        CFI Block cfiBlock463 Using cfiCommon0
        CFI Function print_value
        CODE
// 1378 {
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_number
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_string_ptr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1379     unsigned char *output = NULL;
// 1380 
// 1381     if ((item == NULL) || (output_buffer == NULL))
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??print_value_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??print_value_1
// 1382     {
// 1383         return false;
??print_value_0:
        MOV     R2,#0x0
??print_value_2:
        MOV     R3,#0x0
        LJMP    ??print_value_3 & 0xFFFF
// 1384     }
// 1385 
// 1386     switch ((item->type) & 0xFF)
??print_value_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??print_value_4
        DEC     A
        JZ      ??print_value_5
        ADD     A,#-0x2
        JZ      ??print_value_6
        ADD     A,#-0x4
        JZ      ??print_value_7
        ADD     A,#-0x8
        JZ      ??print_value_8
        ADD     A,#-0x10
        JZ      ??print_value_9
        ADD     A,#-0x20
        JZ      ??print_value_10
        ADD     A,#-0x40
        JZ      ??print_value_11
        SJMP    ??print_value_0
// 1387     {
// 1388         case cJSON_NULL:
// 1389             output = ensure(output_buffer, 5);
??print_value_6:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine116 & 0xFFFF
// 1390             if (output == NULL)
??CrossCallReturnLabel_305:
        JZ      ??print_value_0
// 1391             {
// 1392                 return false;
// 1393             }
// 1394             strcpy((char*)output, "null");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
??print_value_12:
        LCALL   ??strcpy?relay
// 1395             return true;
??print_value_13:
        MOV     R2,#0x1
        SJMP    ??print_value_2
// 1396 
// 1397         case cJSON_False:
// 1398             output = ensure(output_buffer, 6);
??print_value_4:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x6
        LCALL   ??Subroutine170_0 & 0xFFFF
// 1399             if (output == NULL)
??CrossCallReturnLabel_307:
        JZ      ??print_value_0
// 1400             {
// 1401                 return false;
// 1402             }
// 1403             strcpy((char*)output, "false");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "false">` & 0xff
        MOV     R5,#(`?<Constant "false">` >> 8) & 0xff
        SJMP    ??print_value_12
// 1404             return true;
// 1405 
// 1406         case cJSON_True:
// 1407             output = ensure(output_buffer, 5);
??print_value_5:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine116 & 0xFFFF
// 1408             if (output == NULL)
??CrossCallReturnLabel_306:
        JZ      ??print_value_0
// 1409             {
// 1410                 return false;
// 1411             }
// 1412             strcpy((char*)output, "true");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "true">` & 0xff
        MOV     R5,#(`?<Constant "true">` >> 8) & 0xff
        SJMP    ??print_value_12
// 1413             return true;
// 1414 
// 1415         case cJSON_Number:
// 1416             return print_number(item, output_buffer);
??print_value_7:
        ; Setup parameters for call to function print_number
        LCALL   ??print_number?relay
        SJMP    ??print_value_3
// 1417 
// 1418         case cJSON_Raw:
// 1419         {
// 1420             size_t raw_length = 0;
// 1421             if (item->valuestring == NULL)
??print_value_11:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_499:
        JZ      ??print_value_0
// 1422             {
// 1423                 return false;
// 1424             }
// 1425 
// 1426             raw_length = strlen(item->valuestring) + sizeof("");
        ; Setup parameters for call to function strlen
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ?Subroutine93 & 0xFFFF
// 1427             output = ensure(output_buffer, raw_length);
??CrossCallReturnLabel_153:
        ; Setup parameters for call to function ensure
        MOV     R4,?V0 + 2
        MOV     R5,A
        LCALL   ??Subroutine171_0 & 0xFFFF
// 1428             if (output == NULL)
??CrossCallReturnLabel_309:
        JZ      ??print_value_0
// 1429             {
// 1430                 return false;
// 1431             }
// 1432             memcpy(output, item->valuestring, raw_length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
// 1433             return true;
        SJMP    ??print_value_13
// 1434         }
// 1435 
// 1436         case cJSON_String:
// 1437             return print_string(item, output_buffer);
??print_value_8:
        ; Setup parameters for call to function print_string_ptr
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_107:
        SJMP    ??print_value_3
// 1438 
// 1439         case cJSON_Array:
// 1440             return print_array(item, output_buffer);
??print_value_9:
        ; Setup parameters for call to function print_array
        LCALL   ??print_array?relay
        SJMP    ??print_value_3
// 1441 
// 1442         case cJSON_Object:
// 1443             return print_object(item, output_buffer);
??print_value_10:
        ; Setup parameters for call to function print_object
        LCALL   ??print_object?relay
// 1444 
// 1445         default:
// 1446             return false;
// 1447     }
??print_value_3:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock463
// 1448 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
        CFI Block cfiCond464 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_305
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond465 Using cfiCommon0
        CFI (cfiCond465) NoFunction
        CFI (cfiCond465) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond465) CFA_SP SP+0
        CFI (cfiCond465) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker466 Using cfiCommon1
        CFI (cfiPicker466) NoFunction
        CFI (cfiPicker466) Picker
        MOV     R4,#0x5
        CFI EndBlock cfiCond464
        CFI EndBlock cfiCond465
        CFI EndBlock cfiPicker466
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine170_0:
        CFI Block cfiCond467 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_307
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond468 Using cfiCommon0
        CFI (cfiCond468) NoFunction
        CFI (cfiCond468) Conditional ??CrossCallReturnLabel_305
        CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond468) CFA_SP SP+0
        CFI (cfiCond468) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond469 Using cfiCommon0
        CFI (cfiCond469) NoFunction
        CFI (cfiCond469) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond469) CFA_SP SP+0
        CFI (cfiCond469) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker470 Using cfiCommon1
        CFI (cfiPicker470) NoFunction
        CFI (cfiPicker470) Picker
        MOV     R5,#0x0
        CFI EndBlock cfiCond467
        CFI EndBlock cfiCond468
        CFI EndBlock cfiCond469
        CFI EndBlock cfiPicker470
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine171_0:
        CFI Block cfiCond471 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_308
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond472 Using cfiCommon0
        CFI (cfiCond472) NoFunction
        CFI (cfiCond472) Conditional ??CrossCallReturnLabel_309
        CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond472) CFA_SP SP+0
        CFI (cfiCond472) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond473 Using cfiCommon0
        CFI (cfiCond473) NoFunction
        CFI (cfiCond473) Conditional ??CrossCallReturnLabel_307
        CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond473) CFA_SP SP+0
        CFI (cfiCond473) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond474 Using cfiCommon0
        CFI (cfiCond474) NoFunction
        CFI (cfiCond474) Conditional ??CrossCallReturnLabel_305
        CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond474) CFA_SP SP+0
        CFI (cfiCond474) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond475 Using cfiCommon0
        CFI (cfiCond475) NoFunction
        CFI (cfiCond475) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond475) CFA_SP SP+0
        CFI (cfiCond475) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker476 Using cfiCommon1
        CFI (cfiPicker476) NoFunction
        CFI (cfiPicker476) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond471
        CFI EndBlock cfiCond472
        CFI EndBlock cfiCond473
        CFI EndBlock cfiCond474
        CFI EndBlock cfiCond475
        CFI EndBlock cfiPicker476

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
        CFI Block cfiCond477 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_152
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond478 Using cfiCommon0
        CFI (cfiCond478) NoFunction
        CFI (cfiCond478) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond478) CFA_SP SP+0
        CFI (cfiCond478) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker479 Using cfiCommon1
        CFI (cfiPicker479) NoFunction
        CFI (cfiPicker479) Picker
        MOV     A,R2
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond477
        CFI EndBlock cfiCond478
        CFI EndBlock cfiPicker479

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
        CFI Block cfiCond480 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_102
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond481 Using cfiCommon0
        CFI (cfiCond481) NoFunction
        CFI (cfiCond481) Conditional ??CrossCallReturnLabel_103
        CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond481) CFA_SP SP+0
        CFI (cfiCond481) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker482 Using cfiCommon1
        CFI (cfiPicker482) NoFunction
        CFI (cfiPicker482) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_558:
        LCALL   ??strlen?relay
        RET
        CFI EndBlock cfiCond480
        CFI EndBlock cfiCond481
        CFI EndBlock cfiPicker482
// 1449 
// 1450 /* Build an array from input text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1451 static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer)
parse_array:
        CFI Block cfiBlock483 Using cfiCommon0
        CFI Function parse_array
        CODE
// 1452 {
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 1453     cJSON *head = NULL; /* head of the linked list */
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1454     cJSON *current_item = NULL;
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R6
// 1455 
// 1456     if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#-0x18
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x3
        JC      ??parse_array_0
// 1457     {
// 1458         return false; /* to deeply nested */
??parse_array_1:
        MOV     R2,#0x0
// 1459     }
??parse_array_2:
        LJMP    ?Subroutine11 & 0xFFFF
// 1460     input_buffer->depth++;
??parse_array_0:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine156_0 & 0xFFFF
// 1461 
// 1462     if (buffer_at_offset(input_buffer)[0] != '[')
??CrossCallReturnLabel_241:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_321:
        XRL     A,#0x5b
        JNZ     ??parse_array_1
// 1463     {
// 1464         /* not an array */
// 1465         goto fail;
// 1466     }
// 1467 
// 1468     input_buffer->offset++;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine35 & 0xFFFF
// 1469     buffer_skip_whitespace(input_buffer);
// 1470     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
??CrossCallReturnLabel_47:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??parse_array_3
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_622:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_17:
        JNC     ??parse_array_3
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_322:
        XRL     A,#0x5d
        JNZ     $+5
        LJMP    ??parse_array_4 & 0xFFFF
// 1471     {
// 1472         /* empty array */
// 1473         goto success;
// 1474     }
// 1475 
// 1476     /* check if we skipped to the end of the buffer */
// 1477     if (cannot_access_at_index(input_buffer, 0))
// 1478     {
// 1479         input_buffer->offset--;
// 1480         goto fail;
// 1481     }
// 1482 
// 1483     /* step back to character in front of the first element */
// 1484     input_buffer->offset--;
        LCALL   ?Subroutine61 & 0xFFFF
// 1485     /* loop through the comma separated array elements */
// 1486     do
// 1487     {
// 1488         /* allocate next item */
// 1489         cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
??CrossCallReturnLabel_314:
        ; Setup parameters for call to function cJSON_New_Item
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R0,?V0 + 6
        MOV     R1,?V0 + 7
// 1490         if (new_item == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??parse_array_5 & 0xFFFF
// 1491         {
// 1492             goto fail; /* allocation failure */
// 1493         }
// 1494 
// 1495         /* attach next item to list */
// 1496         if (head == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??parse_array_6
// 1497         {
// 1498             /* start the linked list */
// 1499             current_item = head = new_item;
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
        SJMP    ??parse_array_7
// 1500         }
??parse_array_3:
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_315:
        SJMP    ??parse_array_1
// 1501         else
// 1502         {
// 1503             /* add to the end and advance */
// 1504             current_item->next = new_item;
??parse_array_6:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine200_0 & 0xFFFF
// 1505             new_item->prev = current_item;
??CrossCallReturnLabel_436:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine103 & 0xFFFF
// 1506             current_item = new_item;
??CrossCallReturnLabel_341:
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
// 1507         }
// 1508 
// 1509         /* parse next value */
// 1510         input_buffer->offset++;
??parse_array_7:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine35 & 0xFFFF
// 1511         buffer_skip_whitespace(input_buffer);
// 1512         if (!parse_value(current_item, input_buffer))
??CrossCallReturnLabel_48:
        ; Setup parameters for call to function parse_value
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_196:
        JZ      ??parse_array_5
// 1513         {
// 1514             goto fail; /* failed to parse value */
// 1515         }
// 1516         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??buffer_skip_whitespace?relay
// 1517     }
// 1518     while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_623:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_18:
        JNC     ??parse_array_5
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_323:
        XRL     A,#0x2c
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_314 & 0xFFFF
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_292:
        XRL     A,#0x5d
        JNZ     ??parse_array_5
// 1519 
// 1520     if (cannot_access_at_index(input_buffer, 0) || buffer_at_offset(input_buffer)[0] != ']')
// 1521     {
// 1522         goto fail; /* expected end of array */
// 1523     }
// 1524 
// 1525 success:
// 1526     input_buffer->depth--;
??parse_array_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine172_0 & 0xFFFF
// 1527 
// 1528     if (head != NULL) {
??CrossCallReturnLabel_311:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_342
// 1529         head->prev = current_item;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine103 & 0xFFFF
// 1530     }
// 1531 
// 1532     item->type = cJSON_Array;
??CrossCallReturnLabel_342:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine101 & 0xFFFF
// 1533     item->child = head;
??CrossCallReturnLabel_568:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine99 & 0xFFFF
// 1534 
// 1535     input_buffer->offset++;
??CrossCallReturnLabel_249:
        LCALL   ?Subroutine57 & 0xFFFF
// 1536 
// 1537     return true;
??CrossCallReturnLabel_88:
        LJMP    ??parse_array_2 & 0xFFFF
// 1538 
// 1539 fail:
// 1540     if (head != NULL)
??parse_array_5:
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??parse_array_1 & 0xFFFF
// 1541     {
// 1542         cJSON_Delete(head);
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        LJMP    ??parse_array_1 & 0xFFFF
        CFI EndBlock cfiBlock483
// 1543     }
// 1544 
// 1545     return false;
// 1546 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
        CFI Block cfiCond484 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_195
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond485 Using cfiCommon0
        CFI (cfiCond485) NoFunction
        CFI (cfiCond485) Conditional ??CrossCallReturnLabel_196
        CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond485) CFA_SP SP+0
        CFI (cfiCond485) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker486 Using cfiCommon1
        CFI (cfiPicker486) NoFunction
        CFI (cfiPicker486) Picker
        LCALL   ??parse_value?relay
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        RET
        CFI EndBlock cfiCond484
        CFI EndBlock cfiCond485
        CFI EndBlock cfiPicker486

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
        CFI Block cfiCond487 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_314
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond488 Using cfiCommon0
        CFI (cfiCond488) NoFunction
        CFI (cfiCond488) Conditional ??CrossCallReturnLabel_315
        CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond488) CFA_SP SP+0
        CFI (cfiCond488) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker489 Using cfiCommon1
        CFI (cfiPicker489) NoFunction
        CFI (cfiPicker489) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond487
        CFI EndBlock cfiCond488
        CFI EndBlock cfiPicker489
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine172_0:
        CFI Block cfiCond490 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_310
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond491 Using cfiCommon0
        CFI (cfiCond491) NoFunction
        CFI (cfiCond491) Conditional ??CrossCallReturnLabel_311
        CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond491) CFA_SP SP+0
        CFI (cfiCond491) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond492 Using cfiCommon0
        CFI (cfiCond492) NoFunction
        CFI (cfiCond492) Conditional ??CrossCallReturnLabel_312
        CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond492) CFA_SP SP+0
        CFI (cfiCond492) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond493 Using cfiCommon0
        CFI (cfiCond493) NoFunction
        CFI (cfiCond493) Conditional ??CrossCallReturnLabel_313
        CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond493) CFA_SP SP+0
        CFI (cfiCond493) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond494 Using cfiCommon0
        CFI (cfiCond494) NoFunction
        CFI (cfiCond494) Conditional ??CrossCallReturnLabel_314
        CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond494) CFA_SP SP+0
        CFI (cfiCond494) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond495 Using cfiCommon0
        CFI (cfiCond495) NoFunction
        CFI (cfiCond495) Conditional ??CrossCallReturnLabel_315
        CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond495) CFA_SP SP+0
        CFI (cfiCond495) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker496 Using cfiCommon1
        CFI (cfiPicker496) NoFunction
        CFI (cfiPicker496) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_317:
        RET
        CFI EndBlock cfiCond490
        CFI EndBlock cfiCond491
        CFI EndBlock cfiCond492
        CFI EndBlock cfiCond493
        CFI EndBlock cfiCond494
        CFI EndBlock cfiCond495
        CFI EndBlock cfiPicker496

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
        CFI Block cfiCond497 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_314
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond498 Using cfiCommon0
        CFI (cfiCond498) NoFunction
        CFI (cfiCond498) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_315
        CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond498) CFA_SP SP+0
        CFI (cfiCond498) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond499 Using cfiCommon0
        CFI (cfiCond499) NoFunction
        CFI (cfiCond499) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_310
        CFI (cfiCond499) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond499) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond499) CFA_SP SP+-5
        CFI Block cfiCond500 Using cfiCommon0
        CFI (cfiCond500) NoFunction
        CFI (cfiCond500) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_311
        CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond500) CFA_SP SP+0
        CFI (cfiCond500) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond501 Using cfiCommon0
        CFI (cfiCond501) NoFunction
        CFI (cfiCond501) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_312
        CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond501) CFA_SP SP+0
        CFI (cfiCond501) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond502 Using cfiCommon0
        CFI (cfiCond502) NoFunction
        CFI (cfiCond502) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_313
        CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond502) CFA_SP SP+0
        CFI (cfiCond502) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond503 Using cfiCommon0
        CFI (cfiCond503) NoFunction
        CFI (cfiCond503) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_93
        CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond503) CFA_SP SP+0
        CFI (cfiCond503) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond504 Using cfiCommon0
        CFI (cfiCond504) NoFunction
        CFI (cfiCond504) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_94
        CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond504) CFA_SP SP+0
        CFI (cfiCond504) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker505 Using cfiCommon1
        CFI (cfiPicker505) NoFunction
        CFI (cfiPicker505) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_319:
        RET
        CFI EndBlock cfiCond497
        CFI EndBlock cfiCond498
        CFI EndBlock cfiCond499
        CFI EndBlock cfiCond500
        CFI EndBlock cfiCond501
        CFI EndBlock cfiCond502
        CFI EndBlock cfiCond503
        CFI EndBlock cfiCond504
        CFI EndBlock cfiPicker505

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine152:
        CFI Block cfiCond506 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_314
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond507 Using cfiCommon0
        CFI (cfiCond507) NoFunction
        CFI (cfiCond507) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_315
        CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond507) CFA_SP SP+0
        CFI (cfiCond507) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond508 Using cfiCommon0
        CFI (cfiCond508) NoFunction
        CFI (cfiCond508) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_310
        CFI (cfiCond508) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond508) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond508) CFA_SP SP+-5
        CFI Block cfiCond509 Using cfiCommon0
        CFI (cfiCond509) NoFunction
        CFI (cfiCond509) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_311
        CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond509) CFA_SP SP+0
        CFI (cfiCond509) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond510 Using cfiCommon0
        CFI (cfiCond510) NoFunction
        CFI (cfiCond510) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_312
        CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond510) CFA_SP SP+0
        CFI (cfiCond510) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond511 Using cfiCommon0
        CFI (cfiCond511) NoFunction
        CFI (cfiCond511) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_313
        CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond511) CFA_SP SP+0
        CFI (cfiCond511) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond512 Using cfiCommon0
        CFI (cfiCond512) NoFunction
        CFI (cfiCond512) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_93
        CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond512) CFA_SP SP+0
        CFI (cfiCond512) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond513 Using cfiCommon0
        CFI (cfiCond513) NoFunction
        CFI (cfiCond513) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_94
        CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond513) CFA_SP SP+0
        CFI (cfiCond513) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond514 Using cfiCommon0
        CFI (cfiCond514) NoFunction
        CFI (cfiCond514) Conditional ??CrossCallReturnLabel_318
        CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond514) CFA_SP SP+0
        CFI (cfiCond514) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker515 Using cfiCommon1
        CFI (cfiPicker515) NoFunction
        CFI (cfiPicker515) Picker
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond506
        CFI EndBlock cfiCond507
        CFI EndBlock cfiCond508
        CFI EndBlock cfiCond509
        CFI EndBlock cfiCond510
        CFI EndBlock cfiCond511
        CFI EndBlock cfiCond512
        CFI EndBlock cfiCond513
        CFI EndBlock cfiCond514
        CFI EndBlock cfiPicker515

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
        CFI Block cfiCond516 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond517 Using cfiCommon0
        CFI (cfiCond517) NoFunction
        CFI (cfiCond517) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond517) CFA_SP SP+0
        CFI (cfiCond517) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker518 Using cfiCommon1
        CFI (cfiPicker518) NoFunction
        CFI (cfiPicker518) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_208:
        ; Setup parameters for call to function buffer_skip_whitespace
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??buffer_skip_whitespace?relay
        RET
        CFI EndBlock cfiCond516
        CFI EndBlock cfiCond517
        CFI EndBlock cfiPicker518

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond519 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_322
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond520 Using cfiCommon0
        CFI (cfiCond520) NoFunction
        CFI (cfiCond520) Conditional ??CrossCallReturnLabel_323
        CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond520) CFA_SP SP+0
        CFI (cfiCond520) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker521 Using cfiCommon1
        CFI (cfiPicker521) NoFunction
        CFI (cfiPicker521) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_634:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond519
        CFI EndBlock cfiCond520
        CFI EndBlock cfiPicker521
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine173_0:
        CFI Block cfiCond522 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_320
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond523 Using cfiCommon0
        CFI (cfiCond523) NoFunction
        CFI (cfiCond523) Conditional ??CrossCallReturnLabel_321
        CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond523) CFA_SP SP+0
        CFI (cfiCond523) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond524 Using cfiCommon0
        CFI (cfiCond524) NoFunction
        CFI (cfiCond524) Conditional ??CrossCallReturnLabel_322
        CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond524) CFA_SP SP+0
        CFI (cfiCond524) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond525 Using cfiCommon0
        CFI (cfiCond525) NoFunction
        CFI (cfiCond525) Conditional ??CrossCallReturnLabel_323
        CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond525) CFA_SP SP+0
        CFI (cfiCond525) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker526 Using cfiCommon1
        CFI (cfiPicker526) NoFunction
        CFI (cfiPicker526) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond522
        CFI EndBlock cfiCond523
        CFI EndBlock cfiCond524
        CFI EndBlock cfiCond525
        CFI EndBlock cfiPicker526

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiBlock527 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock527
// 1547 
// 1548 /* Render an array to text */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1549 static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer)
print_array:
        CFI Block cfiBlock528 Using cfiCommon0
        CFI Function print_array
        CODE
// 1550 {
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL   ?Subroutine40 & 0xFFFF
// 1551     unsigned char *output_pointer = NULL;
// 1552     size_t length = 0;
// 1553     cJSON *current_element = item->child;
// 1554 
// 1555     if (output_buffer == NULL)
??CrossCallReturnLabel_335:
        JNZ     ??print_array_0
// 1556     {
// 1557         return false;
??print_array_1:
        MOV     R2,#0x0
        SJMP    ??CrossCallReturnLabel_93
// 1558     }
// 1559 
// 1560     /* Compose the output array. */
// 1561     /* opening square bracket */
// 1562     output_pointer = ensure(output_buffer, 1);
??print_array_0:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine114 & 0xFFFF
// 1563     if (output_pointer == NULL)
??CrossCallReturnLabel_179:
        JZ      ??print_array_1
// 1564     {
// 1565         return false;
// 1566     }
// 1567 
// 1568     *output_pointer = '[';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x5b
        LCALL   ?Subroutine146 & 0xFFFF
// 1569     output_buffer->offset++;
??CrossCallReturnLabel_221:
        LCALL   ??Subroutine157_0 & 0xFFFF
// 1570     output_buffer->depth++;
??CrossCallReturnLabel_240:
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_242:
        SJMP    ??CrossCallReturnLabel_529
// 1571 
// 1572     while (current_element != NULL)
// 1573     {
// 1574         if (!print_value(current_element, output_buffer))
// 1575         {
// 1576             return false;
// 1577         }
// 1578         update_offset(output_buffer);
// 1579         if (current_element->next)
// 1580         {
// 1581             length = (size_t) (output_buffer->format ? 2 : 1);
??print_array_2:
        MOV     ?V0 + 2,#0x1
// 1582             output_pointer = ensure(output_buffer, length + 1);
??print_array_3:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine86 & 0xFFFF
// 1583             if (output_pointer == NULL)
??CrossCallReturnLabel_330:
        JZ      ??print_array_1
// 1584             {
// 1585                 return false;
// 1586             }
// 1587             *output_pointer++ = ',';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x2c
        LCALL   ?Subroutine21 & 0xFFFF
// 1588             if(output_buffer->format)
??CrossCallReturnLabel_386:
        JZ      ??print_array_4
// 1589             {
// 1590                 *output_pointer++ = ' ';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x20
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
// 1591             }
// 1592             *output_pointer = '\0';
??print_array_4:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
// 1593             output_buffer->offset += length;
        LCALL   ?Subroutine41 & 0xFFFF
// 1594         }
// 1595         current_element = current_element->next;
??CrossCallReturnLabel_58:
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_529:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??print_array_5
        ; Setup parameters for call to function print_value
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_327:
        JZ      ??print_array_1
        ; Setup parameters for call to function update_offset
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_471:
        JZ      ??CrossCallReturnLabel_58
        LCALL   ??Subroutine201_0 & 0xFFFF
// 1596     }
??CrossCallReturnLabel_503:
        JZ      ??print_array_2
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_array_3
// 1597 
// 1598     output_pointer = ensure(output_buffer, 2);
??print_array_5:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x2
        MOV     R5,#0x0
        LCALL   ?Subroutine115 & 0xFFFF
// 1599     if (output_pointer == NULL)
??CrossCallReturnLabel_181:
        JZ      ??print_array_1
// 1600     {
// 1601         return false;
// 1602     }
// 1603     *output_pointer++ = ']';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x5d
        LCALL   ?Subroutine60 & 0xFFFF
// 1604     *output_pointer = '\0';
// 1605     output_buffer->depth--;
// 1606 
// 1607     return true;
??CrossCallReturnLabel_93:
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock528
// 1608 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
        CFI Block cfiCond529 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond530 Using cfiCommon0
        CFI (cfiCond530) NoFunction
        CFI (cfiCond530) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond530) CFA_SP SP+0
        CFI (cfiCond530) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker531 Using cfiCommon1
        CFI (cfiPicker531) NoFunction
        CFI (cfiPicker531) Picker
        LCALL   ??update_offset?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond529
        CFI EndBlock cfiCond530
        CFI EndBlock cfiPicker531

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
        CFI Block cfiCond532 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_327
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond533 Using cfiCommon0
        CFI (cfiCond533) NoFunction
        CFI (cfiCond533) Conditional ??CrossCallReturnLabel_328
        CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond533) CFA_SP SP+0
        CFI (cfiCond533) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker534 Using cfiCommon1
        CFI (cfiPicker534) NoFunction
        CFI (cfiPicker534) Picker
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        CFI EndBlock cfiCond532
        CFI EndBlock cfiCond533
        CFI EndBlock cfiPicker534
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine174_0:
        CFI Block cfiCond535 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_329
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond536 Using cfiCommon0
        CFI (cfiCond536) NoFunction
        CFI (cfiCond536) Conditional ??CrossCallReturnLabel_327
        CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond536) CFA_SP SP+0
        CFI (cfiCond536) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond537 Using cfiCommon0
        CFI (cfiCond537) NoFunction
        CFI (cfiCond537) Conditional ??CrossCallReturnLabel_328
        CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond537) CFA_SP SP+0
        CFI (cfiCond537) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker538 Using cfiCommon1
        CFI (cfiPicker538) NoFunction
        CFI (cfiPicker538) Picker
        LCALL   ??print_value?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond535
        CFI EndBlock cfiCond536
        CFI EndBlock cfiCond537
        CFI EndBlock cfiPicker538

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
        CFI Block cfiCond539 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_330
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond540 Using cfiCommon0
        CFI (cfiCond540) NoFunction
        CFI (cfiCond540) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond540) CFA_SP SP+0
        CFI (cfiCond540) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker541 Using cfiCommon1
        CFI (cfiPicker541) NoFunction
        CFI (cfiPicker541) Picker
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     R4,A
        CLR     A
        CFI EndBlock cfiCond539
        CFI EndBlock cfiCond540
        CFI EndBlock cfiPicker541
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine175_0:
        CFI Block cfiCond542 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_332
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond543 Using cfiCommon0
        CFI (cfiCond543) NoFunction
        CFI (cfiCond543) Conditional ??CrossCallReturnLabel_330
        CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond543) CFA_SP SP+0
        CFI (cfiCond543) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond544 Using cfiCommon0
        CFI (cfiCond544) NoFunction
        CFI (cfiCond544) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond544) CFA_SP SP+0
        CFI (cfiCond544) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker545 Using cfiCommon1
        CFI (cfiPicker545) NoFunction
        CFI (cfiPicker545) Picker
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_333:
        RET
        CFI EndBlock cfiCond542
        CFI EndBlock cfiCond543
        CFI EndBlock cfiCond544
        CFI EndBlock cfiPicker545

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
        CFI Block cfiCond546 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_330
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond547 Using cfiCommon0
        CFI (cfiCond547) NoFunction
        CFI (cfiCond547) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_331
        CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond547) CFA_SP SP+0
        CFI (cfiCond547) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond548 Using cfiCommon0
        CFI (cfiCond548) NoFunction
        CFI (cfiCond548) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_332
        CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond548) CFA_SP SP+0
        CFI (cfiCond548) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond549 Using cfiCommon0
        CFI (cfiCond549) NoFunction
        CFI (cfiCond549) Conditional ??CrossCallReturnLabel_334
        CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond549) CFA_SP SP+0
        CFI (cfiCond549) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker550 Using cfiCommon1
        CFI (cfiPicker550) NoFunction
        CFI (cfiPicker550) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond546
        CFI EndBlock cfiCond547
        CFI EndBlock cfiCond548
        CFI EndBlock cfiCond549
        CFI EndBlock cfiPicker550

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
        CFI Block cfiCond551 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_335
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond552 Using cfiCommon0
        CFI (cfiCond552) NoFunction
        CFI (cfiCond552) Conditional ??CrossCallReturnLabel_336
        CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond552) CFA_SP SP+0
        CFI (cfiCond552) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker553 Using cfiCommon1
        CFI (cfiPicker553) NoFunction
        CFI (cfiPicker553) Picker
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond551
        CFI EndBlock cfiCond552
        CFI EndBlock cfiPicker553
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine176_0:
        CFI Block cfiCond554 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_337
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond555 Using cfiCommon0
        CFI (cfiCond555) NoFunction
        CFI (cfiCond555) Conditional ??CrossCallReturnLabel_335
        CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond555) CFA_SP SP+0
        CFI (cfiCond555) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond556 Using cfiCommon0
        CFI (cfiCond556) NoFunction
        CFI (cfiCond556) Conditional ??CrossCallReturnLabel_336
        CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond556) CFA_SP SP+0
        CFI (cfiCond556) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker557 Using cfiCommon1
        CFI (cfiPicker557) NoFunction
        CFI (cfiPicker557) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_539:
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond554
        CFI EndBlock cfiCond555
        CFI EndBlock cfiCond556
        CFI EndBlock cfiPicker557
// 1609 
// 1610 /* Build an object from the text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1611 static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer)
parse_object:
        CFI Block cfiBlock558 Using cfiCommon0
        CFI Function parse_object
        CODE
// 1612 {
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, parse_string
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1613     cJSON *head = NULL; /* linked list head */
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 1614     cJSON *current_item = NULL;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 1615 
// 1616     if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#-0x18
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x3
        JC      ??parse_object_0
// 1617     {
// 1618         return false; /* to deeply nested */
??parse_object_1:
        MOV     R2,#0x0
// 1619     }
??parse_object_2:
        LJMP    ?Subroutine11 & 0xFFFF
// 1620     input_buffer->depth++;
??parse_object_0:
        LCALL   ?Subroutine58 & 0xFFFF
// 1621 
// 1622     if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '{'))
??CrossCallReturnLabel_243:
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_object_1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_627:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_19:
        JNC     ??parse_object_1
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_300:
        XRL     A,#0x7b
        JNZ     ??parse_object_1
// 1623     {
// 1624         goto fail; /* not an object */
// 1625     }
// 1626 
// 1627     input_buffer->offset++;
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,A
        LCALL   ??Subroutine158_0 & 0xFFFF
// 1628     buffer_skip_whitespace(input_buffer);
??CrossCallReturnLabel_238:
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1629     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '}'))
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_628:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNC     ??parse_object_3
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_298:
        XRL     A,#0x7d
        JNZ     $+5
        LJMP    ??parse_object_4 & 0xFFFF
// 1630     {
// 1631         goto success; /* empty object */
// 1632     }
// 1633 
// 1634     /* check if we skipped to the end of the buffer */
// 1635     if (cannot_access_at_index(input_buffer, 0))
// 1636     {
// 1637         input_buffer->offset--;
// 1638         goto fail;
// 1639     }
// 1640 
// 1641     /* step back to character in front of the first element */
// 1642     input_buffer->offset--;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine172_0 & 0xFFFF
// 1643     /* loop through the comma separated array elements */
// 1644     do
// 1645     {
// 1646         /* allocate next item */
// 1647         cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
??CrossCallReturnLabel_312:
        ; Setup parameters for call to function cJSON_New_Item
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
// 1648         if (new_item == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??parse_object_5 & 0xFFFF
// 1649         {
// 1650             goto fail; /* allocation failure */
// 1651         }
// 1652 
// 1653         /* attach next item to list */
// 1654         if (head == NULL)
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??parse_object_6
// 1655         {
// 1656             /* start the linked list */
// 1657             current_item = head = new_item;
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        SJMP    ??CrossCallReturnLabel_521
// 1658         }
??parse_object_3:
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_318:
        LJMP    ??parse_object_1 & 0xFFFF
// 1659         else
// 1660         {
// 1661             /* add to the end and advance */
// 1662             current_item->next = new_item;
??parse_object_6:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
// 1663             new_item->prev = current_item;
??CrossCallReturnLabel_437:
        LCALL   ?Subroutine97 & 0xFFFF
// 1664             current_item = new_item;
??CrossCallReturnLabel_521:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
// 1665         }
// 1666 
// 1667         /* parse the name of the child */
// 1668         input_buffer->offset++;
        LCALL   ?Subroutine29 & 0xFFFF
// 1669         buffer_skip_whitespace(input_buffer);
// 1670         if (!parse_string(current_item, input_buffer))
??CrossCallReturnLabel_33:
        LCALL   ??parse_string?relay
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??parse_object_5 & 0xFFFF
// 1671         {
// 1672             goto fail; /* failed to parse name */
// 1673         }
// 1674         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1675 
// 1676         /* swap valuestring and string, because we parsed the name */
// 1677         current_item->string = current_item->valuestring;
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ??Subroutine186_0 & 0xFFFF
// 1678         current_item->valuestring = NULL;
??CrossCallReturnLabel_376:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine102 & 0xFFFF
// 1679 
// 1680         if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
??CrossCallReturnLabel_161:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_629:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_21:
        JNC     ??parse_object_5
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_301:
        XRL     A,#0x3a
        JNZ     ??parse_object_5
// 1681         {
// 1682             goto fail; /* invalid object */
// 1683         }
// 1684 
// 1685         /* parse the value */
// 1686         input_buffer->offset++;
        LCALL   ?Subroutine29 & 0xFFFF
// 1687         buffer_skip_whitespace(input_buffer);
// 1688         if (!parse_value(current_item, input_buffer))
??CrossCallReturnLabel_34:
        LCALL   ??parse_value?relay
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??parse_object_5
// 1689         {
// 1690             goto fail; /* failed to parse value */
// 1691         }
// 1692         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1693     }
// 1694     while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_630:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_22:
        JNC     ??parse_object_5
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_302:
        XRL     A,#0x2c
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_312 & 0xFFFF
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_297:
        XRL     A,#0x7d
        JNZ     ??parse_object_5
// 1695 
// 1696     if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '}'))
// 1697     {
// 1698         goto fail; /* expected end of object */
// 1699     }
// 1700 
// 1701 success:
// 1702     input_buffer->depth--;
??parse_object_4:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine172_0 & 0xFFFF
// 1703 
// 1704     if (head != NULL) {
??CrossCallReturnLabel_313:
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JZ      ??CrossCallReturnLabel_520
// 1705         head->prev = current_item;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine210_0 & 0xFFFF
// 1706     }
// 1707 
// 1708     item->type = cJSON_Object;
??CrossCallReturnLabel_520:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ?Subroutine100 & 0xFFFF
// 1709     item->child = head;
??CrossCallReturnLabel_160:
        LCALL   ??Subroutine177_0 & 0xFFFF
// 1710 
// 1711     input_buffer->offset++;
??CrossCallReturnLabel_340:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine57 & 0xFFFF
// 1712     return true;
??CrossCallReturnLabel_89:
        LJMP    ??parse_object_2 & 0xFFFF
// 1713 
// 1714 fail:
// 1715     if (head != NULL)
??parse_object_5:
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??parse_object_1 & 0xFFFF
// 1716     {
// 1717         cJSON_Delete(head);
        ; Setup parameters for call to function cJSON_Delete
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??cJSON_Delete?relay
        LJMP    ??parse_object_1 & 0xFFFF
        CFI EndBlock cfiBlock558
// 1718     }
// 1719 
// 1720     return false;
// 1721 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
        CFI Block cfiCond559 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_177
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond560 Using cfiCommon0
        CFI (cfiCond560) NoFunction
        CFI (cfiCond560) Conditional ??CrossCallReturnLabel_178
        CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond560) CFA_SP SP+0
        CFI (cfiCond560) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker561 Using cfiCommon1
        CFI (cfiPicker561) NoFunction
        CFI (cfiPicker561) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond559
        CFI EndBlock cfiCond560
        CFI EndBlock cfiPicker561

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
        CFI Block cfiCond562 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_341
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond563 Using cfiCommon0
        CFI (cfiCond563) NoFunction
        CFI (cfiCond563) Conditional ??CrossCallReturnLabel_342
        CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond563) CFA_SP SP+0
        CFI (cfiCond563) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker564 Using cfiCommon1
        CFI (cfiPicker564) NoFunction
        CFI (cfiPicker564) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond562
        CFI EndBlock cfiCond563
        CFI EndBlock cfiPicker564
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine177_0:
        CFI Block cfiCond565 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_338
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond566 Using cfiCommon0
        CFI (cfiCond566) NoFunction
        CFI (cfiCond566) Conditional ??CrossCallReturnLabel_339
        CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond566) CFA_SP SP+0
        CFI (cfiCond566) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond567 Using cfiCommon0
        CFI (cfiCond567) NoFunction
        CFI (cfiCond567) Conditional ??CrossCallReturnLabel_340
        CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond567) CFA_SP SP+0
        CFI (cfiCond567) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond568 Using cfiCommon0
        CFI (cfiCond568) NoFunction
        CFI (cfiCond568) Conditional ??CrossCallReturnLabel_341
        CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond568) CFA_SP SP+0
        CFI (cfiCond568) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond569 Using cfiCommon0
        CFI (cfiCond569) NoFunction
        CFI (cfiCond569) Conditional ??CrossCallReturnLabel_342
        CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond569) CFA_SP SP+0
        CFI (cfiCond569) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker570 Using cfiCommon1
        CFI (cfiPicker570) NoFunction
        CFI (cfiPicker570) Picker
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond565
        CFI EndBlock cfiCond566
        CFI EndBlock cfiCond567
        CFI EndBlock cfiCond568
        CFI EndBlock cfiCond569
        CFI EndBlock cfiPicker570

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
        CFI Block cfiCond571 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_159
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond572 Using cfiCommon0
        CFI (cfiCond572) NoFunction
        CFI (cfiCond572) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond572) CFA_SP SP+0
        CFI (cfiCond572) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker573 Using cfiCommon1
        CFI (cfiPicker573) NoFunction
        CFI (cfiPicker573) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond571
        CFI EndBlock cfiCond572
        CFI EndBlock cfiPicker573

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
        CFI Block cfiCond574 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_88
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond575 Using cfiCommon0
        CFI (cfiCond575) NoFunction
        CFI (cfiCond575) Conditional ??CrossCallReturnLabel_89
        CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond575) CFA_SP SP+0
        CFI (cfiCond575) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker576 Using cfiCommon1
        CFI (cfiPicker576) NoFunction
        CFI (cfiPicker576) Picker
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV     R2,#0x1
        RET
        CFI EndBlock cfiCond574
        CFI EndBlock cfiCond575
        CFI EndBlock cfiPicker576

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
        CFI Block cfiCond577 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond578 Using cfiCommon0
        CFI (cfiCond578) NoFunction
        CFI (cfiCond578) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_48
        CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond578) CFA_SP SP+0
        CFI (cfiCond578) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond579 Using cfiCommon0
        CFI (cfiCond579) NoFunction
        CFI (cfiCond579) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_88
        CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond579) CFA_SP SP+0
        CFI (cfiCond579) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond580 Using cfiCommon0
        CFI (cfiCond580) NoFunction
        CFI (cfiCond580) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_89
        CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond580) CFA_SP SP+0
        CFI (cfiCond580) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond581 Using cfiCommon0
        CFI (cfiCond581) NoFunction
        CFI (cfiCond581) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_33
        CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond581) CFA_SP SP+0
        CFI (cfiCond581) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond582 Using cfiCommon0
        CFI (cfiCond582) NoFunction
        CFI (cfiCond582) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_34
        CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond582) CFA_SP SP+0
        CFI (cfiCond582) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker583 Using cfiCommon1
        CFI (cfiPicker583) NoFunction
        CFI (cfiPicker583) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x1
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_246:
        RET
        CFI EndBlock cfiCond577
        CFI EndBlock cfiCond578
        CFI EndBlock cfiCond579
        CFI EndBlock cfiCond580
        CFI EndBlock cfiCond581
        CFI EndBlock cfiCond582
        CFI EndBlock cfiPicker583

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine151:
        CFI Block cfiCond584 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_242
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond585 Using cfiCommon0
        CFI (cfiCond585) NoFunction
        CFI (cfiCond585) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_243
        CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond585) CFA_SP SP+0
        CFI (cfiCond585) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond586 Using cfiCommon0
        CFI (cfiCond586) NoFunction
        CFI (cfiCond586) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_244
        CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond586) CFA_SP SP+0
        CFI (cfiCond586) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond587 Using cfiCommon0
        CFI (cfiCond587) NoFunction
        CFI (cfiCond587) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_241
        CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond587) CFA_SP SP+0
        CFI (cfiCond587) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond588 Using cfiCommon0
        CFI (cfiCond588) NoFunction
        CFI (cfiCond588) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_239
        CFI (cfiCond588) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond588) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond588) CFA_SP SP+-5
        CFI Block cfiCond589 Using cfiCommon0
        CFI (cfiCond589) NoFunction
        CFI (cfiCond589) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_240
        CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond589) CFA_SP SP+0
        CFI (cfiCond589) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond590 Using cfiCommon0
        CFI (cfiCond590) NoFunction
        CFI (cfiCond590) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_238
        CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond590) CFA_SP SP+0
        CFI (cfiCond590) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond591 Using cfiCommon0
        CFI (cfiCond591) NoFunction
        CFI (cfiCond591) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_236
        CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond591) CFA_SP SP+0
        CFI (cfiCond591) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond592 Using cfiCommon0
        CFI (cfiCond592) NoFunction
        CFI (cfiCond592) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_237
        CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond592) CFA_SP SP+0
        CFI (cfiCond592) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond593 Using cfiCommon0
        CFI (cfiCond593) NoFunction
        CFI (cfiCond593) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_47
        CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond593) CFA_SP SP+0
        CFI (cfiCond593) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond594 Using cfiCommon0
        CFI (cfiCond594) NoFunction
        CFI (cfiCond594) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_48
        CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond594) CFA_SP SP+0
        CFI (cfiCond594) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond595 Using cfiCommon0
        CFI (cfiCond595) NoFunction
        CFI (cfiCond595) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_88
        CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond595) CFA_SP SP+0
        CFI (cfiCond595) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond596 Using cfiCommon0
        CFI (cfiCond596) NoFunction
        CFI (cfiCond596) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_89
        CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond596) CFA_SP SP+0
        CFI (cfiCond596) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond597 Using cfiCommon0
        CFI (cfiCond597) NoFunction
        CFI (cfiCond597) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_33
        CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond597) CFA_SP SP+0
        CFI (cfiCond597) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond598 Using cfiCommon0
        CFI (cfiCond598) NoFunction
        CFI (cfiCond598) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_34
        CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond598) CFA_SP SP+0
        CFI (cfiCond598) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond599 Using cfiCommon0
        CFI (cfiCond599) NoFunction
        CFI (cfiCond599) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_58
        CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond599) CFA_SP SP+0
        CFI (cfiCond599) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond600 Using cfiCommon0
        CFI (cfiCond600) NoFunction
        CFI (cfiCond600) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_59
        CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond600) CFA_SP SP+0
        CFI (cfiCond600) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond601 Using cfiCommon0
        CFI (cfiCond601) NoFunction
        CFI (cfiCond601) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_60
        CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond601) CFA_SP SP+0
        CFI (cfiCond601) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker602 Using cfiCommon1
        CFI (cfiPicker602) NoFunction
        CFI (cfiPicker602) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond584
        CFI EndBlock cfiCond585
        CFI EndBlock cfiCond586
        CFI EndBlock cfiCond587
        CFI EndBlock cfiCond588
        CFI EndBlock cfiCond589
        CFI EndBlock cfiCond590
        CFI EndBlock cfiCond591
        CFI EndBlock cfiCond592
        CFI EndBlock cfiCond593
        CFI EndBlock cfiCond594
        CFI EndBlock cfiCond595
        CFI EndBlock cfiCond596
        CFI EndBlock cfiCond597
        CFI EndBlock cfiCond598
        CFI EndBlock cfiCond599
        CFI EndBlock cfiCond600
        CFI EndBlock cfiCond601
        CFI EndBlock cfiPicker602

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond603 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_45
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond604 Using cfiCommon0
        CFI (cfiCond604) NoFunction
        CFI (cfiCond604) Conditional ??CrossCallReturnLabel_46
        CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond604) CFA_SP SP+0
        CFI (cfiCond604) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker605 Using cfiCommon1
        CFI (cfiPicker605) NoFunction
        CFI (cfiPicker605) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_550:
        MOV     A,?V0 + 0
        ADD     A,#0x10
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_650:
        RET
        CFI EndBlock cfiCond603
        CFI EndBlock cfiCond604
        CFI EndBlock cfiPicker605

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
        CFI Block cfiCond606 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_139
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond607 Using cfiCommon0
        CFI (cfiCond607) NoFunction
        CFI (cfiCond607) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_140
        CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond607) CFA_SP SP+0
        CFI (cfiCond607) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond608 Using cfiCommon0
        CFI (cfiCond608) NoFunction
        CFI (cfiCond608) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_141
        CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond608) CFA_SP SP+0
        CFI (cfiCond608) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond609 Using cfiCommon0
        CFI (cfiCond609) NoFunction
        CFI (cfiCond609) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_28
        CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond609) CFA_SP SP+0
        CFI (cfiCond609) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond610 Using cfiCommon0
        CFI (cfiCond610) NoFunction
        CFI (cfiCond610) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_29
        CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond610) CFA_SP SP+0
        CFI (cfiCond610) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond611 Using cfiCommon0
        CFI (cfiCond611) NoFunction
        CFI (cfiCond611) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_45
        CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond611) CFA_SP SP+0
        CFI (cfiCond611) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond612 Using cfiCommon0
        CFI (cfiCond612) NoFunction
        CFI (cfiCond612) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_46
        CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond612) CFA_SP SP+0
        CFI (cfiCond612) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker613 Using cfiCommon1
        CFI (cfiPicker613) NoFunction
        CFI (cfiPicker613) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond606
        CFI EndBlock cfiCond607
        CFI EndBlock cfiCond608
        CFI EndBlock cfiCond609
        CFI EndBlock cfiCond610
        CFI EndBlock cfiCond611
        CFI EndBlock cfiCond612
        CFI EndBlock cfiPicker613
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine178_0:
        CFI Block cfiCond614 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_5
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond615 Using cfiCommon0
        CFI (cfiCond615) NoFunction
        CFI (cfiCond615) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_6
        CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond615) CFA_SP SP+0
        CFI (cfiCond615) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond616 Using cfiCommon0
        CFI (cfiCond616) NoFunction
        CFI (cfiCond616) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_7
        CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond616) CFA_SP SP+0
        CFI (cfiCond616) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond617 Using cfiCommon0
        CFI (cfiCond617) NoFunction
        CFI (cfiCond617) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_356
        CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond617) CFA_SP SP+0
        CFI (cfiCond617) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond618 Using cfiCommon0
        CFI (cfiCond618) NoFunction
        CFI (cfiCond618) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_357
        CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond618) CFA_SP SP+0
        CFI (cfiCond618) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond619 Using cfiCommon0
        CFI (cfiCond619) NoFunction
        CFI (cfiCond619) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_358
        CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond619) CFA_SP SP+0
        CFI (cfiCond619) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond620 Using cfiCommon0
        CFI (cfiCond620) NoFunction
        CFI (cfiCond620) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_359
        CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond620) CFA_SP SP+0
        CFI (cfiCond620) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond621 Using cfiCommon0
        CFI (cfiCond621) NoFunction
        CFI (cfiCond621) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_360
        CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond621) CFA_SP SP+0
        CFI (cfiCond621) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond622 Using cfiCommon0
        CFI (cfiCond622) NoFunction
        CFI (cfiCond622) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_361
        CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond622) CFA_SP SP+0
        CFI (cfiCond622) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond623 Using cfiCommon0
        CFI (cfiCond623) NoFunction
        CFI (cfiCond623) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_362
        CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond623) CFA_SP SP+0
        CFI (cfiCond623) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond624 Using cfiCommon0
        CFI (cfiCond624) NoFunction
        CFI (cfiCond624) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_363
        CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond624) CFA_SP SP+0
        CFI (cfiCond624) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond625 Using cfiCommon0
        CFI (cfiCond625) NoFunction
        CFI (cfiCond625) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_364
        CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond625) CFA_SP SP+0
        CFI (cfiCond625) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond626 Using cfiCommon0
        CFI (cfiCond626) NoFunction
        CFI (cfiCond626) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_349
        CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond626) CFA_SP SP+0
        CFI (cfiCond626) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond627 Using cfiCommon0
        CFI (cfiCond627) NoFunction
        CFI (cfiCond627) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_350
        CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond627) CFA_SP SP+0
        CFI (cfiCond627) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond628 Using cfiCommon0
        CFI (cfiCond628) NoFunction
        CFI (cfiCond628) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_351
        CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond628) CFA_SP SP+0
        CFI (cfiCond628) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond629 Using cfiCommon0
        CFI (cfiCond629) NoFunction
        CFI (cfiCond629) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_352
        CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond629) CFA_SP SP+0
        CFI (cfiCond629) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond630 Using cfiCommon0
        CFI (cfiCond630) NoFunction
        CFI (cfiCond630) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_353
        CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond630) CFA_SP SP+0
        CFI (cfiCond630) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond631 Using cfiCommon0
        CFI (cfiCond631) NoFunction
        CFI (cfiCond631) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_354
        CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond631) CFA_SP SP+0
        CFI (cfiCond631) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond632 Using cfiCommon0
        CFI (cfiCond632) NoFunction
        CFI (cfiCond632) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_355
        CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond632) CFA_SP SP+0
        CFI (cfiCond632) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond633 Using cfiCommon0
        CFI (cfiCond633) NoFunction
        CFI (cfiCond633) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_145
        CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond633) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond633) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond633) CFA_SP SP+0
        CFI (cfiCond633) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond634 Using cfiCommon0
        CFI (cfiCond634) NoFunction
        CFI (cfiCond634) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_146
        CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond634) CFA_SP SP+0
        CFI (cfiCond634) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond635 Using cfiCommon0
        CFI (cfiCond635) NoFunction
        CFI (cfiCond635) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_147
        CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond635) CFA_SP SP+0
        CFI (cfiCond635) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond636 Using cfiCommon0
        CFI (cfiCond636) NoFunction
        CFI (cfiCond636) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_142
        CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond636) CFA_SP SP+0
        CFI (cfiCond636) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond637 Using cfiCommon0
        CFI (cfiCond637) NoFunction
        CFI (cfiCond637) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_143
        CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond637) CFA_SP SP+0
        CFI (cfiCond637) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond638 Using cfiCommon0
        CFI (cfiCond638) NoFunction
        CFI (cfiCond638) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_144
        CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond638) CFA_SP SP+0
        CFI (cfiCond638) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond639 Using cfiCommon0
        CFI (cfiCond639) NoFunction
        CFI (cfiCond639) Conditional ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_656
        CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond639) CFA_SP SP+0
        CFI (cfiCond639) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond640 Using cfiCommon0
        CFI (cfiCond640) NoFunction
        CFI (cfiCond640) Conditional ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_657
        CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond640) CFA_SP SP+0
        CFI (cfiCond640) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond641 Using cfiCommon0
        CFI (cfiCond641) NoFunction
        CFI (cfiCond641) Conditional ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_655
        CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond641) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond641) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond641) CFA_SP SP+0
        CFI (cfiCond641) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond642 Using cfiCommon0
        CFI (cfiCond642) NoFunction
        CFI (cfiCond642) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_139
        CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond642) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond642) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond642) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond642) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond642) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond642) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond642) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond642) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond642) CFA_SP SP+0
        CFI (cfiCond642) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond643 Using cfiCommon0
        CFI (cfiCond643) NoFunction
        CFI (cfiCond643) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_140
        CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond643) CFA_SP SP+0
        CFI (cfiCond643) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond644 Using cfiCommon0
        CFI (cfiCond644) NoFunction
        CFI (cfiCond644) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_141
        CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond644) CFA_SP SP+0
        CFI (cfiCond644) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond645 Using cfiCommon0
        CFI (cfiCond645) NoFunction
        CFI (cfiCond645) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_28
        CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond645) CFA_SP SP+0
        CFI (cfiCond645) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond646 Using cfiCommon0
        CFI (cfiCond646) NoFunction
        CFI (cfiCond646) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_29
        CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond646) CFA_SP SP+0
        CFI (cfiCond646) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond647 Using cfiCommon0
        CFI (cfiCond647) NoFunction
        CFI (cfiCond647) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_45
        CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond647) CFA_SP SP+0
        CFI (cfiCond647) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond648 Using cfiCommon0
        CFI (cfiCond648) NoFunction
        CFI (cfiCond648) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_46
        CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond648) CFA_SP SP+0
        CFI (cfiCond648) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker649 Using cfiCommon1
        CFI (cfiPicker649) NoFunction
        CFI (cfiPicker649) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond614
        CFI EndBlock cfiCond615
        CFI EndBlock cfiCond616
        CFI EndBlock cfiCond617
        CFI EndBlock cfiCond618
        CFI EndBlock cfiCond619
        CFI EndBlock cfiCond620
        CFI EndBlock cfiCond621
        CFI EndBlock cfiCond622
        CFI EndBlock cfiCond623
        CFI EndBlock cfiCond624
        CFI EndBlock cfiCond625
        CFI EndBlock cfiCond626
        CFI EndBlock cfiCond627
        CFI EndBlock cfiCond628
        CFI EndBlock cfiCond629
        CFI EndBlock cfiCond630
        CFI EndBlock cfiCond631
        CFI EndBlock cfiCond632
        CFI EndBlock cfiCond633
        CFI EndBlock cfiCond634
        CFI EndBlock cfiCond635
        CFI EndBlock cfiCond636
        CFI EndBlock cfiCond637
        CFI EndBlock cfiCond638
        CFI EndBlock cfiCond639
        CFI EndBlock cfiCond640
        CFI EndBlock cfiCond641
        CFI EndBlock cfiCond642
        CFI EndBlock cfiCond643
        CFI EndBlock cfiCond644
        CFI EndBlock cfiCond645
        CFI EndBlock cfiCond646
        CFI EndBlock cfiCond647
        CFI EndBlock cfiCond648
        CFI EndBlock cfiPicker649

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond650 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_33
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond651 Using cfiCommon0
        CFI (cfiCond651) NoFunction
        CFI (cfiCond651) Conditional ??CrossCallReturnLabel_34
        CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond651) CFA_SP SP+0
        CFI (cfiCond651) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker652 Using cfiCommon1
        CFI (cfiPicker652) NoFunction
        CFI (cfiPicker652) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_207:
        ; Setup parameters for call to function buffer_skip_whitespace
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
        ; Setup parameters for call to function parse_string
        ; Setup parameters for call to function parse_value
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        RET
        CFI EndBlock cfiCond650
        CFI EndBlock cfiCond651
        CFI EndBlock cfiPicker652
// 1722 
// 1723 /* Render an object to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1724 static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer)
print_object:
        CFI Block cfiBlock653 Using cfiCommon0
        CFI Function print_object
        CODE
// 1725 {
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, print_string_ptr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL   ?Subroutine40 & 0xFFFF
// 1726     unsigned char *output_pointer = NULL;
// 1727     size_t length = 0;
// 1728     cJSON *current_item = item->child;
// 1729 
// 1730     if (output_buffer == NULL)
??CrossCallReturnLabel_336:
        JNZ     ??print_object_0
// 1731     {
// 1732         return false;
??print_object_1:
        MOV     R2,#0x0
        LJMP    ??CrossCallReturnLabel_94 & 0xFFFF
// 1733     }
// 1734 
// 1735     /* Compose the output: */
// 1736     length = (size_t) (output_buffer->format ? 2 : 1); /* fmt: {\n */
??print_object_0:
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_504:
        JZ      ??print_object_2
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_object_3
??print_object_2:
        MOV     ?V0 + 2,#0x1
// 1737     output_pointer = ensure(output_buffer, length + 1);
??print_object_3:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine86 & 0xFFFF
// 1738     if (output_pointer == NULL)
??CrossCallReturnLabel_331:
        JZ      ??print_object_1
// 1739     {
// 1740         return false;
// 1741     }
// 1742 
// 1743     *output_pointer++ = '{';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x7b
        LCALL   ?Subroutine108 & 0xFFFF
// 1744     output_buffer->depth++;
??CrossCallReturnLabel_171:
        LCALL   ?Subroutine58 & 0xFFFF
// 1745     if (output_buffer->format)
??CrossCallReturnLabel_244:
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_391:
        JZ      ??print_object_4
// 1746     {
// 1747         *output_pointer++ = '\n';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0xa
        MOVX    @DPTR,A
// 1748     }
// 1749     output_buffer->offset += length;
??print_object_4:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_59:
        SJMP    ??CrossCallReturnLabel_530
// 1750 
// 1751     while (current_item)
// 1752     {
// 1753         if (output_buffer->format)
// 1754         {
// 1755             size_t i;
// 1756             output_pointer = ensure(output_buffer, output_buffer->depth);
// 1757             if (output_pointer == NULL)
// 1758             {
// 1759                 return false;
// 1760             }
// 1761             for (i = 0; i < output_buffer->depth; i++)
// 1762             {
// 1763                 *output_pointer++ = '\t';
// 1764             }
// 1765             output_buffer->offset += output_buffer->depth;
// 1766         }
// 1767 
// 1768         /* print key */
// 1769         if (!print_string_ptr((unsigned char*)current_item->string, output_buffer))
// 1770         {
// 1771             return false;
// 1772         }
// 1773         update_offset(output_buffer);
// 1774 
// 1775         length = (size_t) (output_buffer->format ? 2 : 1);
// 1776         output_pointer = ensure(output_buffer, length);
// 1777         if (output_pointer == NULL)
// 1778         {
// 1779             return false;
// 1780         }
// 1781         *output_pointer++ = ':';
// 1782         if (output_buffer->format)
// 1783         {
// 1784             *output_pointer++ = '\t';
// 1785         }
// 1786         output_buffer->offset += length;
// 1787 
// 1788         /* print value */
// 1789         if (!print_value(current_item, output_buffer))
// 1790         {
// 1791             return false;
// 1792         }
// 1793         update_offset(output_buffer);
??print_object_5:
        MOV     R0,#0x0
??print_object_6:
        MOV     A,R2
        ADD     A,R0
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
// 1794 
// 1795         /* print comma if not last */
// 1796         length = ((size_t)(output_buffer->format ? 1 : 0) + (size_t)(current_item->next ? 1 : 0));
// 1797         output_pointer = ensure(output_buffer, length + 1);
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine175_0 & 0xFFFF
// 1798         if (output_pointer == NULL)
??CrossCallReturnLabel_332:
        JZ      ??print_object_1
// 1799         {
// 1800             return false;
// 1801         }
// 1802         if (current_item->next)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_389:
        JZ      ??CrossCallReturnLabel_172
// 1803         {
// 1804             *output_pointer++ = ',';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x2c
        LCALL   ?Subroutine108 & 0xFFFF
// 1805         }
// 1806 
// 1807         if (output_buffer->format)
??CrossCallReturnLabel_172:
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_392:
        JZ      ??CrossCallReturnLabel_173
// 1808         {
// 1809             *output_pointer++ = '\n';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0xa
        LCALL   ?Subroutine108 & 0xFFFF
// 1810         }
// 1811         *output_pointer = '\0';
??CrossCallReturnLabel_173:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine179_0 & 0xFFFF
// 1812         output_buffer->offset += length;
??CrossCallReturnLabel_346:
        ADD     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 3
        MOVX    @DPTR,A
// 1813 
// 1814         current_item = current_item->next;
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JNZ     $+5
        LJMP    ??print_object_7 & 0xFFFF
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_472:
        JZ      ??CrossCallReturnLabel_85
        ; Setup parameters for call to function ensure
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_654:
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_180:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_369
??print_object_8:
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_369:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_366:
        JC      ??print_object_8
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_63:
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_85:
        ; Setup parameters for call to function print_string_ptr
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_356:
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_106:
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        ; Setup parameters for call to function update_offset
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_455:
        JZ      ??print_object_9
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_object_10
??print_object_9:
        MOV     ?V0 + 2,#0x1
??print_object_10:
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function ensure
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_334:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x3a
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_387:
        JZ      ??print_object_11
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x9
        MOVX    @DPTR,A
??print_object_11:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_60:
        ; Setup parameters for call to function print_value
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_328:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        ; Setup parameters for call to function update_offset
        LCALL   ?Subroutine14 & 0xFFFF
// 1815     }
??CrossCallReturnLabel_456:
        JZ      ??print_object_12
        MOV     R2,#0x1
        SJMP    ??print_object_13
??print_object_12:
        MOV     R2,#0x0
??print_object_13:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_473:
        JNZ     $+5
        LJMP    ??print_object_5 & 0xFFFF
        MOV     R0,#0x1
        LJMP    ??print_object_6 & 0xFFFF
// 1816 
// 1817     output_pointer = ensure(output_buffer, output_buffer->format ? (output_buffer->depth + 1) : 2);
??print_object_7:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_474:
        JZ      ??print_object_14
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_115:
        SJMP    ??print_object_15
??print_object_14:
        MOV     R4,#0x2
        MOV     R5,#0x0
??print_object_15:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine115 & 0xFFFF
// 1818     if (output_pointer == NULL)
??CrossCallReturnLabel_182:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
// 1819     {
// 1820         return false;
// 1821     }
// 1822     if (output_buffer->format)
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_393:
        JZ      ??print_object_16
// 1823     {
// 1824         size_t i;
// 1825         for (i = 0; i < (output_buffer->depth - 1); i++)
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_370
// 1826         {
// 1827             *output_pointer++ = '\t';
??print_object_17:
        LCALL   ?Subroutine92 & 0xFFFF
// 1828         }
??CrossCallReturnLabel_370:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     R3,A
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        MOV     A,R5
        SUBB    A,R3
        JC      ??print_object_17
// 1829     }
// 1830     *output_pointer++ = '}';
??print_object_16:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x7d
        LCALL   ?Subroutine60 & 0xFFFF
// 1831     *output_pointer = '\0';
// 1832     output_buffer->depth--;
// 1833 
// 1834     return true;
??CrossCallReturnLabel_94:
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock653
// 1835 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
        CFI Block cfiCond654 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_181
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond655 Using cfiCommon0
        CFI (cfiCond655) NoFunction
        CFI (cfiCond655) Conditional ??CrossCallReturnLabel_182
        CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond655) CFA_SP SP+0
        CFI (cfiCond655) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker656 Using cfiCommon1
        CFI (cfiPicker656) NoFunction
        CFI (cfiPicker656) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond654
        CFI EndBlock cfiCond655
        CFI EndBlock cfiPicker656

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
        CFI Block cfiCond657 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_179
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond658 Using cfiCommon0
        CFI (cfiCond658) NoFunction
        CFI (cfiCond658) Conditional ??CrossCallReturnLabel_180
        CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond658) CFA_SP SP+0
        CFI (cfiCond658) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker659 Using cfiCommon1
        CFI (cfiPicker659) NoFunction
        CFI (cfiPicker659) Picker
        LCALL   ??ensure?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond657
        CFI EndBlock cfiCond658
        CFI EndBlock cfiPicker659

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
        CFI Block cfiCond660 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_171
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond661 Using cfiCommon0
        CFI (cfiCond661) NoFunction
        CFI (cfiCond661) Conditional ??CrossCallReturnLabel_172
        CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond661) CFA_SP SP+0
        CFI (cfiCond661) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond662 Using cfiCommon0
        CFI (cfiCond662) NoFunction
        CFI (cfiCond662) Conditional ??CrossCallReturnLabel_173
        CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond662) CFA_SP SP+0
        CFI (cfiCond662) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker663 Using cfiCommon1
        CFI (cfiPicker663) NoFunction
        CFI (cfiPicker663) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_220:
        RET
        CFI EndBlock cfiCond660
        CFI EndBlock cfiCond661
        CFI EndBlock cfiCond662
        CFI EndBlock cfiPicker663

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
        CFI Block cfiCond664 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_171
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond665 Using cfiCommon0
        CFI (cfiCond665) NoFunction
        CFI (cfiCond665) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_172
        CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond665) CFA_SP SP+0
        CFI (cfiCond665) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond666 Using cfiCommon0
        CFI (cfiCond666) NoFunction
        CFI (cfiCond666) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_173
        CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond666) CFA_SP SP+0
        CFI (cfiCond666) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond667 Using cfiCommon0
        CFI (cfiCond667) NoFunction
        CFI (cfiCond667) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_369
        CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond667) CFA_SP SP+0
        CFI (cfiCond667) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond668 Using cfiCommon0
        CFI (cfiCond668) NoFunction
        CFI (cfiCond668) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_370
        CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond668) CFA_SP SP+0
        CFI (cfiCond668) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond669 Using cfiCommon0
        CFI (cfiCond669) NoFunction
        CFI (cfiCond669) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_386
        CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond669) CFA_SP SP+0
        CFI (cfiCond669) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond670 Using cfiCommon0
        CFI (cfiCond670) NoFunction
        CFI (cfiCond670) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_387
        CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond670) CFA_SP SP+0
        CFI (cfiCond670) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker671 Using cfiCommon1
        CFI (cfiPicker671) NoFunction
        CFI (cfiPicker671) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
        CFI EndBlock cfiCond664
        CFI EndBlock cfiCond665
        CFI EndBlock cfiCond666
        CFI EndBlock cfiCond667
        CFI EndBlock cfiCond668
        CFI EndBlock cfiCond669
        CFI EndBlock cfiCond670
        CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
        CFI Block cfiCond672 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_343
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond673 Using cfiCommon0
        CFI (cfiCond673) NoFunction
        CFI (cfiCond673) Conditional ??CrossCallReturnLabel_344
        CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond673) CFA_SP SP+0
        CFI (cfiCond673) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker674 Using cfiCommon1
        CFI (cfiPicker674) NoFunction
        CFI (cfiPicker674) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CFI EndBlock cfiCond672
        CFI EndBlock cfiCond673
        CFI EndBlock cfiPicker674
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine179_0:
        CFI Block cfiCond675 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_345
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond676 Using cfiCommon0
        CFI (cfiCond676) NoFunction
        CFI (cfiCond676) Conditional ??CrossCallReturnLabel_346
        CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond676) CFA_SP SP+0
        CFI (cfiCond676) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond677 Using cfiCommon0
        CFI (cfiCond677) NoFunction
        CFI (cfiCond677) Conditional ??CrossCallReturnLabel_343
        CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond677) CFA_SP SP+0
        CFI (cfiCond677) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond678 Using cfiCommon0
        CFI (cfiCond678) NoFunction
        CFI (cfiCond678) Conditional ??CrossCallReturnLabel_344
        CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond678) CFA_SP SP+0
        CFI (cfiCond678) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker679 Using cfiCommon1
        CFI (cfiPicker679) NoFunction
        CFI (cfiPicker679) Picker
        CLR     A
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_347:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond675
        CFI EndBlock cfiCond676
        CFI EndBlock cfiCond677
        CFI EndBlock cfiCond678
        CFI EndBlock cfiPicker679

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
        CFI Block cfiCond680 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_356
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond681 Using cfiCommon0
        CFI (cfiCond681) NoFunction
        CFI (cfiCond681) Conditional ??CrossCallReturnLabel_357
        CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond681) CFA_SP SP+0
        CFI (cfiCond681) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond682 Using cfiCommon0
        CFI (cfiCond682) NoFunction
        CFI (cfiCond682) Conditional ??CrossCallReturnLabel_358
        CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond682) CFA_SP SP+0
        CFI (cfiCond682) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond683 Using cfiCommon0
        CFI (cfiCond683) NoFunction
        CFI (cfiCond683) Conditional ??CrossCallReturnLabel_359
        CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond683) CFA_SP SP+0
        CFI (cfiCond683) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond684 Using cfiCommon0
        CFI (cfiCond684) NoFunction
        CFI (cfiCond684) Conditional ??CrossCallReturnLabel_360
        CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond684) CFA_SP SP+0
        CFI (cfiCond684) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond685 Using cfiCommon0
        CFI (cfiCond685) NoFunction
        CFI (cfiCond685) Conditional ??CrossCallReturnLabel_361
        CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond685) CFA_SP SP+0
        CFI (cfiCond685) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond686 Using cfiCommon0
        CFI (cfiCond686) NoFunction
        CFI (cfiCond686) Conditional ??CrossCallReturnLabel_362
        CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond686) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond686) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond686) CFA_SP SP+0
        CFI (cfiCond686) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond687 Using cfiCommon0
        CFI (cfiCond687) NoFunction
        CFI (cfiCond687) Conditional ??CrossCallReturnLabel_363
        CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond687) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond687) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond687) CFA_SP SP+0
        CFI (cfiCond687) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond688 Using cfiCommon0
        CFI (cfiCond688) NoFunction
        CFI (cfiCond688) Conditional ??CrossCallReturnLabel_364
        CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond688) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond688) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond688) CFA_SP SP+0
        CFI (cfiCond688) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker689 Using cfiCommon1
        CFI (cfiPicker689) NoFunction
        CFI (cfiPicker689) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond680
        CFI EndBlock cfiCond681
        CFI EndBlock cfiCond682
        CFI EndBlock cfiCond683
        CFI EndBlock cfiCond684
        CFI EndBlock cfiCond685
        CFI EndBlock cfiCond686
        CFI EndBlock cfiCond687
        CFI EndBlock cfiCond688
        CFI EndBlock cfiPicker689
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine180_0:
        CFI Block cfiCond690 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_349
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond691 Using cfiCommon0
        CFI (cfiCond691) NoFunction
        CFI (cfiCond691) Conditional ??CrossCallReturnLabel_350
        CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond691) CFA_SP SP+0
        CFI (cfiCond691) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond692 Using cfiCommon0
        CFI (cfiCond692) NoFunction
        CFI (cfiCond692) Conditional ??CrossCallReturnLabel_351
        CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond692) CFA_SP SP+0
        CFI (cfiCond692) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond693 Using cfiCommon0
        CFI (cfiCond693) NoFunction
        CFI (cfiCond693) Conditional ??CrossCallReturnLabel_352
        CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond693) CFA_SP SP+0
        CFI (cfiCond693) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond694 Using cfiCommon0
        CFI (cfiCond694) NoFunction
        CFI (cfiCond694) Conditional ??CrossCallReturnLabel_353
        CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond694) CFA_SP SP+0
        CFI (cfiCond694) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond695 Using cfiCommon0
        CFI (cfiCond695) NoFunction
        CFI (cfiCond695) Conditional ??CrossCallReturnLabel_354
        CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond695) CFA_SP SP+0
        CFI (cfiCond695) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond696 Using cfiCommon0
        CFI (cfiCond696) NoFunction
        CFI (cfiCond696) Conditional ??CrossCallReturnLabel_355
        CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond696) CFA_SP SP+0
        CFI (cfiCond696) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond697 Using cfiCommon0
        CFI (cfiCond697) NoFunction
        CFI (cfiCond697) Conditional ??CrossCallReturnLabel_356
        CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond697) CFA_SP SP+0
        CFI (cfiCond697) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond698 Using cfiCommon0
        CFI (cfiCond698) NoFunction
        CFI (cfiCond698) Conditional ??CrossCallReturnLabel_357
        CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond698) CFA_SP SP+0
        CFI (cfiCond698) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond699 Using cfiCommon0
        CFI (cfiCond699) NoFunction
        CFI (cfiCond699) Conditional ??CrossCallReturnLabel_358
        CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond699) CFA_SP SP+0
        CFI (cfiCond699) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond700 Using cfiCommon0
        CFI (cfiCond700) NoFunction
        CFI (cfiCond700) Conditional ??CrossCallReturnLabel_359
        CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond700) CFA_SP SP+0
        CFI (cfiCond700) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond701 Using cfiCommon0
        CFI (cfiCond701) NoFunction
        CFI (cfiCond701) Conditional ??CrossCallReturnLabel_360
        CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond701) CFA_SP SP+0
        CFI (cfiCond701) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond702 Using cfiCommon0
        CFI (cfiCond702) NoFunction
        CFI (cfiCond702) Conditional ??CrossCallReturnLabel_361
        CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond702) CFA_SP SP+0
        CFI (cfiCond702) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond703 Using cfiCommon0
        CFI (cfiCond703) NoFunction
        CFI (cfiCond703) Conditional ??CrossCallReturnLabel_362
        CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond703) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond703) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond703) CFA_SP SP+0
        CFI (cfiCond703) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond704 Using cfiCommon0
        CFI (cfiCond704) NoFunction
        CFI (cfiCond704) Conditional ??CrossCallReturnLabel_363
        CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond704) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond704) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond704) CFA_SP SP+0
        CFI (cfiCond704) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond705 Using cfiCommon0
        CFI (cfiCond705) NoFunction
        CFI (cfiCond705) Conditional ??CrossCallReturnLabel_364
        CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond705) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond705) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond705) CFA_SP SP+0
        CFI (cfiCond705) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker706 Using cfiCommon1
        CFI (cfiPicker706) NoFunction
        CFI (cfiPicker706) Picker
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_652:
        RET
        CFI EndBlock cfiCond690
        CFI EndBlock cfiCond691
        CFI EndBlock cfiCond692
        CFI EndBlock cfiCond693
        CFI EndBlock cfiCond694
        CFI EndBlock cfiCond695
        CFI EndBlock cfiCond696
        CFI EndBlock cfiCond697
        CFI EndBlock cfiCond698
        CFI EndBlock cfiCond699
        CFI EndBlock cfiCond700
        CFI EndBlock cfiCond701
        CFI EndBlock cfiCond702
        CFI EndBlock cfiCond703
        CFI EndBlock cfiCond704
        CFI EndBlock cfiCond705
        CFI EndBlock cfiPicker706

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
        CFI Block cfiCond707 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_114
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond708 Using cfiCommon0
        CFI (cfiCond708) NoFunction
        CFI (cfiCond708) Conditional ??CrossCallReturnLabel_115
        CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond708) CFA_SP SP+0
        CFI (cfiCond708) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker709 Using cfiCommon1
        CFI (cfiPicker709) NoFunction
        CFI (cfiPicker709) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        RET
        CFI EndBlock cfiCond707
        CFI EndBlock cfiCond708
        CFI EndBlock cfiPicker709

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
        CFI Block cfiCond710 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_107
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond711 Using cfiCommon0
        CFI (cfiCond711) NoFunction
        CFI (cfiCond711) Conditional ??CrossCallReturnLabel_106
        CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond711) CFA_SP SP+0
        CFI (cfiCond711) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker712 Using cfiCommon1
        CFI (cfiPicker712) NoFunction
        CFI (cfiPicker712) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_553:
        LCALL   ??print_string_ptr?relay
        RET
        CFI EndBlock cfiCond710
        CFI EndBlock cfiCond711
        CFI EndBlock cfiPicker712

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
        CFI Block cfiCond713 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_93
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond714 Using cfiCommon0
        CFI (cfiCond714) NoFunction
        CFI (cfiCond714) Conditional ??CrossCallReturnLabel_94
        CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond714) CFA_SP SP+0
        CFI (cfiCond714) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker715 Using cfiCommon1
        CFI (cfiPicker715) NoFunction
        CFI (cfiPicker715) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_222:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV     R2,#0x1
        RET
        CFI EndBlock cfiCond713
        CFI EndBlock cfiCond714
        CFI EndBlock cfiPicker715

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
        CFI Block cfiCond716 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_58
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond717 Using cfiCommon0
        CFI (cfiCond717) NoFunction
        CFI (cfiCond717) Conditional ??CrossCallReturnLabel_59
        CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond717) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond717) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond717) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond717) CFA_SP SP+0
        CFI (cfiCond717) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond718 Using cfiCommon0
        CFI (cfiCond718) NoFunction
        CFI (cfiCond718) Conditional ??CrossCallReturnLabel_60
        CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond718) CFA_SP SP+0
        CFI (cfiCond718) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker719 Using cfiCommon1
        CFI (cfiPicker719) NoFunction
        CFI (cfiPicker719) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,?V0 + 2
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_245:
        RET
        CFI EndBlock cfiCond716
        CFI EndBlock cfiCond717
        CFI EndBlock cfiCond718
        CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond720 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_367
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond721 Using cfiCommon0
        CFI (cfiCond721) NoFunction
        CFI (cfiCond721) Conditional ??CrossCallReturnLabel_368
        CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond721) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond721) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond721) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond721) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond721) CFA_SP SP+0
        CFI (cfiCond721) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker722 Using cfiCommon1
        CFI (cfiPicker722) NoFunction
        CFI (cfiPicker722) Picker
        SUBB    A,R3
        MOV     R5,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond720
        CFI EndBlock cfiCond721
        CFI EndBlock cfiPicker722
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine181_0:
        CFI Block cfiCond723 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_365
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond724 Using cfiCommon0
        CFI (cfiCond724) NoFunction
        CFI (cfiCond724) Conditional ??CrossCallReturnLabel_366
        CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond724) CFA_SP SP+0
        CFI (cfiCond724) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond725 Using cfiCommon0
        CFI (cfiCond725) NoFunction
        CFI (cfiCond725) Conditional ??CrossCallReturnLabel_367
        CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond725) CFA_SP SP+0
        CFI (cfiCond725) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond726 Using cfiCommon0
        CFI (cfiCond726) NoFunction
        CFI (cfiCond726) Conditional ??CrossCallReturnLabel_368
        CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond726) CFA_SP SP+0
        CFI (cfiCond726) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker727 Using cfiCommon1
        CFI (cfiPicker727) NoFunction
        CFI (cfiPicker727) Picker
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_559:
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        MOV     A,R5
        SUBB    A,R3
        RET
        CFI EndBlock cfiCond723
        CFI EndBlock cfiCond724
        CFI EndBlock cfiCond725
        CFI EndBlock cfiCond726
        CFI EndBlock cfiPicker727
// 1836 
// 1837 /* Get Array size/item / object item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1838 CJSON_PUBLIC(int) cJSON_GetArraySize(const cJSON *array)
cJSON_GetArraySize:
        CFI Block cfiBlock728 Using cfiCommon0
        CFI Function cJSON_GetArraySize
        CODE
// 1839 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1840     cJSON *child = NULL;
// 1841     size_t size = 0;
        MOV     R4,#0x0
        MOV     R5,#0x0
// 1842 
// 1843     if (array == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_GetArraySize_0
// 1844     {
// 1845         return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_GetArraySize_1
// 1846     }
// 1847 
// 1848     child = array->child;
??cJSON_GetArraySize_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_372
// 1849 
// 1850     while(child != NULL)
// 1851     {
// 1852         size++;
??cJSON_GetArraySize_2:
        LCALL   ??Subroutine182_0 & 0xFFFF
// 1853         child = child->next;
// 1854     }
??CrossCallReturnLabel_372:
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_615:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??cJSON_GetArraySize_2
// 1855 
// 1856     /* FIXME: Can overflow here. Cannot be fixed without breaking the API */
// 1857 
// 1858     return (int)size;
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
??cJSON_GetArraySize_1:
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock728
// 1859 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
        CFI Block cfiCond729 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_369
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond730 Using cfiCommon0
        CFI (cfiCond730) NoFunction
        CFI (cfiCond730) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond730) CFA_SP SP+0
        CFI (cfiCond730) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker731 Using cfiCommon1
        CFI (cfiPicker731) NoFunction
        CFI (cfiPicker731) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x9
        LCALL   ?Subroutine144 & 0xFFFF
        CFI EndBlock cfiCond729
        CFI EndBlock cfiCond730
        CFI EndBlock cfiPicker731
??CrossCallReturnLabel_219:
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine182_0:
        CFI Block cfiCond732 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_371
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond733 Using cfiCommon0
        CFI (cfiCond733) NoFunction
        CFI (cfiCond733) Conditional ??CrossCallReturnLabel_372
        CFI (cfiCond733) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond733) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond733) CFA_SP SP+-5
        CFI Block cfiCond734 Using cfiCommon0
        CFI (cfiCond734) NoFunction
        CFI (cfiCond734) Conditional ??CrossCallReturnLabel_369
        CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond734) CFA_SP SP+0
        CFI (cfiCond734) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond735 Using cfiCommon0
        CFI (cfiCond735) NoFunction
        CFI (cfiCond735) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond735) CFA_SP SP+0
        CFI (cfiCond735) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker736 Using cfiCommon1
        CFI (cfiPicker736) NoFunction
        CFI (cfiPicker736) Picker
        MOV     A,R4
        ADD     A,#0x1
        INC     R4
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        RET
        CFI EndBlock cfiCond732
        CFI EndBlock cfiCond733
        CFI EndBlock cfiCond734
        CFI EndBlock cfiCond735
        CFI EndBlock cfiPicker736
// 1860 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1861 static cJSON* get_array_item(const cJSON *array, size_t index)
get_array_item:
        CFI Block cfiBlock737 Using cfiCommon0
        CFI Function get_array_item
        CODE
// 1862 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1863     cJSON *current_child = NULL;
// 1864 
// 1865     if (array == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??get_array_item_0
// 1866     {
// 1867         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??get_array_item_1
// 1868     }
// 1869 
// 1870     current_child = array->child;
??get_array_item_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??get_array_item_2
// 1871     while ((current_child != NULL) && (index > 0))
// 1872     {
// 1873         index--;
??get_array_item_3:
        MOV     A,R4
        ADD     A,#-0x1
        DEC     R4
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     R5,A
// 1874         current_child = current_child->next;
        MOV     DPL,R2
        MOV     DPH,R3
// 1875     }
??get_array_item_2:
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_388:
        JZ      ??get_array_item_1
        MOV     A,R4
        ORL     A,R5
        JNZ     ??get_array_item_3
// 1876 
// 1877     return current_child;
??get_array_item_1:
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock737
// 1878 }
// 1879 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1880 CJSON_PUBLIC(cJSON *) cJSON_GetArrayItem(const cJSON *array, int index)
cJSON_GetArrayItem:
        CFI Block cfiBlock738 Using cfiCommon0
        CFI Function cJSON_GetArrayItem
        CODE
// 1881 {
        FUNCALL cJSON_GetArrayItem, get_array_item
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1882     if (index < 0)
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_512:
        JNC     ??cJSON_GetArrayItem_0
// 1883     {
// 1884         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_GetArrayItem_1
// 1885     }
// 1886 
// 1887     return get_array_item(array, (size_t)index);
??cJSON_GetArrayItem_0:
        ; Setup parameters for call to function get_array_item
        LCALL   ??get_array_item?relay
??cJSON_GetArrayItem_1:
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock738
// 1888 }
// 1889 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1890 static cJSON *get_object_item(const cJSON * const object, const char * const name, const cJSON_bool case_sensitive)
get_object_item:
        CFI Block cfiBlock739 Using cfiCommon0
        CFI Function get_object_item
        CODE
// 1891 {
        FUNCALL get_object_item, strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_object_item, case_insensitive_strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine230_0 & 0xFFFF
// 1892     cJSON *current_element = NULL;
// 1893 
// 1894     if ((object == NULL) || (name == NULL))
??CrossCallReturnLabel_616:
        MOV     A,R2
        ORL     A,R3
        JZ      ??get_object_item_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??get_object_item_1
// 1895     {
// 1896         return NULL;
??get_object_item_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??get_object_item_2
// 1897     }
// 1898 
// 1899     current_element = object->child;
??get_object_item_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine212_0 & 0xFFFF
// 1900     if (case_sensitive)
??CrossCallReturnLabel_525:
        MOV     A,R0
        ORL     A,R1
        JZ      ??CrossCallReturnLabel_532
// 1901     {
// 1902         while ((current_element != NULL) && (current_element->string != NULL) && (strcmp(name, current_element->string) != 0))
??get_object_item_3:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??get_object_item_0
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_357:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_475:
        JZ      ??get_object_item_4
        ; Setup parameters for call to function strcmp
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_656:
        LCALL   ??strcmp?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??get_object_item_4
// 1903         {
// 1904             current_element = current_element->next;
        LCALL   ?Subroutine63 & 0xFFFF
// 1905         }
// 1906     }
??CrossCallReturnLabel_531:
        SJMP    ??get_object_item_3
// 1907     else
// 1908     {
// 1909         while ((current_element != NULL) && (case_insensitive_strcmp((const unsigned char*)name, (const unsigned char*)(current_element->string)) != 0))
// 1910         {
// 1911             current_element = current_element->next;
??get_object_item_5:
        LCALL   ?Subroutine63 & 0xFFFF
// 1912         }
??CrossCallReturnLabel_532:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??get_object_item_0
        ; Setup parameters for call to function case_insensitive_strcmp
        LCALL   ?Subroutine31 & 0xFFFF
// 1913     }
??CrossCallReturnLabel_657:
        LCALL   ??case_insensitive_strcmp?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??get_object_item_5
??get_object_item_4:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_476:
        JZ      ??get_object_item_0
// 1914 
// 1915     if ((current_element == NULL) || (current_element->string == NULL)) {
// 1916         return NULL;
// 1917     }
// 1918 
// 1919     return current_element;
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??get_object_item_2:
        SJMP    ??Subroutine184_0
        CFI EndBlock cfiBlock739
// 1920 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiBlock740 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 2,#global_hooks & 0xff
        MOV     ?V0 + 3,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ??Subroutine193_0 & 0xFFFF
        CFI EndBlock cfiBlock740
??CrossCallReturnLabel_404:
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine183_0:
        CFI Block cfiBlock741 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock741
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine184_0:
        CFI Block cfiBlock742 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock742
// 1921 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1922 CJSON_PUBLIC(cJSON *) cJSON_GetObjectItem(const cJSON * const object, const char * const string)
cJSON_GetObjectItem:
        CFI Block cfiBlock743 Using cfiCommon0
        CFI Function cJSON_GetObjectItem
        CODE
// 1923 {
        FUNCALL cJSON_GetObjectItem, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1924     return get_object_item(object, string, false);
        ; Setup parameters for call to function get_object_item
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock743
// 1925 }
// 1926 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1927 CJSON_PUBLIC(cJSON *) cJSON_GetObjectItemCaseSensitive(const cJSON * const object, const char * const string)
cJSON_GetObjectItemCaseSensitive:
        CFI Block cfiBlock744 Using cfiCommon0
        CFI Function cJSON_GetObjectItemCaseSensitive
        CODE
// 1928 {
        FUNCALL cJSON_GetObjectItemCaseSensitive, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1929     return get_object_item(object, string, true);
        ; Setup parameters for call to function get_object_item
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock744
// 1930 }
// 1931 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1932 CJSON_PUBLIC(cJSON_bool) cJSON_HasObjectItem(const cJSON *object, const char *string)
cJSON_HasObjectItem:
        CFI Block cfiBlock745 Using cfiCommon0
        CFI Function cJSON_HasObjectItem
        CODE
// 1933 {
        FUNCALL cJSON_HasObjectItem, cJSON_GetObjectItem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1934     return cJSON_GetObjectItem(object, string) ? 1 : 0;
        ; Setup parameters for call to function cJSON_GetObjectItem
        LCALL   ??cJSON_GetObjectItem?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??cJSON_HasObjectItem_0
        MOV     R2,#0x1
        SJMP    ??cJSON_HasObjectItem_1
??cJSON_HasObjectItem_0:
        MOV     R2,#0x0
        CFI EndBlock cfiBlock745
??cJSON_HasObjectItem_1:
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10
// 1935 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiBlock746 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock746
// 1936 
// 1937 /* Utility for array list handling. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1938 static void suffix_object(cJSON *prev, cJSON *item)
suffix_object:
        CFI Block cfiBlock747 Using cfiCommon0
        CFI Function suffix_object
        CODE
// 1939 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1940     prev->next = item;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 1941     item->prev = prev;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine185_0 & 0xFFFF
// 1942 }
??CrossCallReturnLabel_380:
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock747

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
        CFI Block cfiCond748 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_381
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond749 Using cfiCommon0
        CFI (cfiCond749) NoFunction
        CFI (cfiCond749) Conditional ??CrossCallReturnLabel_382
        CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond749) CFA_SP SP+0
        CFI (cfiCond749) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond750 Using cfiCommon0
        CFI (cfiCond750) NoFunction
        CFI (cfiCond750) Conditional ??CrossCallReturnLabel_383
        CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond750) CFA_SP SP+0
        CFI (cfiCond750) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond751 Using cfiCommon0
        CFI (cfiCond751) NoFunction
        CFI (cfiCond751) Conditional ??CrossCallReturnLabel_384
        CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond751) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond751) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond751) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond751) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond751) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond751) CFA_SP SP+0
        CFI (cfiCond751) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond752 Using cfiCommon0
        CFI (cfiCond752) NoFunction
        CFI (cfiCond752) Conditional ??CrossCallReturnLabel_385
        CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond752) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond752) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond752) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond752) CFA_SP SP+0
        CFI (cfiCond752) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker753 Using cfiCommon1
        CFI (cfiPicker753) NoFunction
        CFI (cfiPicker753) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond748
        CFI EndBlock cfiCond749
        CFI EndBlock cfiCond750
        CFI EndBlock cfiCond751
        CFI EndBlock cfiCond752
        CFI EndBlock cfiPicker753
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine185_0:
        CFI Block cfiCond754 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_380
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond755 Using cfiCommon0
        CFI (cfiCond755) NoFunction
        CFI (cfiCond755) Conditional ??CrossCallReturnLabel_381
        CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond755) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond755) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond755) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond755) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond755) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond755) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond755) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond755) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond755) CFA_SP SP+0
        CFI (cfiCond755) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond756 Using cfiCommon0
        CFI (cfiCond756) NoFunction
        CFI (cfiCond756) Conditional ??CrossCallReturnLabel_382
        CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond756) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond756) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond756) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond756) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond756) CFA_SP SP+0
        CFI (cfiCond756) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond757 Using cfiCommon0
        CFI (cfiCond757) NoFunction
        CFI (cfiCond757) Conditional ??CrossCallReturnLabel_383
        CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond757) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond757) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond757) CFA_SP SP+0
        CFI (cfiCond757) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond758 Using cfiCommon0
        CFI (cfiCond758) NoFunction
        CFI (cfiCond758) Conditional ??CrossCallReturnLabel_384
        CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond758) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond758) CFA_SP SP+0
        CFI (cfiCond758) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond759 Using cfiCommon0
        CFI (cfiCond759) NoFunction
        CFI (cfiCond759) Conditional ??CrossCallReturnLabel_385
        CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond759) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond759) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond759) CFA_SP SP+0
        CFI (cfiCond759) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker760 Using cfiCommon1
        CFI (cfiPicker760) NoFunction
        CFI (cfiPicker760) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond754
        CFI EndBlock cfiCond755
        CFI EndBlock cfiCond756
        CFI EndBlock cfiCond757
        CFI EndBlock cfiCond758
        CFI EndBlock cfiCond759
        CFI EndBlock cfiPicker760
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine186_0:
        CFI Block cfiCond761 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_373
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond762 Using cfiCommon0
        CFI (cfiCond762) NoFunction
        CFI (cfiCond762) Conditional ??CrossCallReturnLabel_374
        CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond762) CFA_SP SP+0
        CFI (cfiCond762) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond763 Using cfiCommon0
        CFI (cfiCond763) NoFunction
        CFI (cfiCond763) Conditional ??CrossCallReturnLabel_375
        CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond763) CFA_SP SP+0
        CFI (cfiCond763) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond764 Using cfiCommon0
        CFI (cfiCond764) NoFunction
        CFI (cfiCond764) Conditional ??CrossCallReturnLabel_376
        CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond764) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond764) CFA_SP SP+0
        CFI (cfiCond764) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond765 Using cfiCommon0
        CFI (cfiCond765) NoFunction
        CFI (cfiCond765) Conditional ??CrossCallReturnLabel_377
        CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond765) CFA_SP SP+0
        CFI (cfiCond765) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond766 Using cfiCommon0
        CFI (cfiCond766) NoFunction
        CFI (cfiCond766) Conditional ??CrossCallReturnLabel_378
        CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond766) CFA_SP SP+0
        CFI (cfiCond766) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond767 Using cfiCommon0
        CFI (cfiCond767) NoFunction
        CFI (cfiCond767) Conditional ??CrossCallReturnLabel_379
        CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond767) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond767) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond767) CFA_SP SP+0
        CFI (cfiCond767) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond768 Using cfiCommon0
        CFI (cfiCond768) NoFunction
        CFI (cfiCond768) Conditional ??CrossCallReturnLabel_380
        CFI (cfiCond768) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond768) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond768) CFA_SP SP+-5
        CFI Block cfiCond769 Using cfiCommon0
        CFI (cfiCond769) NoFunction
        CFI (cfiCond769) Conditional ??CrossCallReturnLabel_381
        CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond769) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond769) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond769) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond769) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond769) CFA_SP SP+0
        CFI (cfiCond769) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond770 Using cfiCommon0
        CFI (cfiCond770) NoFunction
        CFI (cfiCond770) Conditional ??CrossCallReturnLabel_382
        CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond770) CFA_SP SP+0
        CFI (cfiCond770) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond771 Using cfiCommon0
        CFI (cfiCond771) NoFunction
        CFI (cfiCond771) Conditional ??CrossCallReturnLabel_383
        CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond771) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond771) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond771) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond771) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond771) CFA_SP SP+0
        CFI (cfiCond771) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond772 Using cfiCommon0
        CFI (cfiCond772) NoFunction
        CFI (cfiCond772) Conditional ??CrossCallReturnLabel_384
        CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond772) CFA_SP SP+0
        CFI (cfiCond772) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond773 Using cfiCommon0
        CFI (cfiCond773) NoFunction
        CFI (cfiCond773) Conditional ??CrossCallReturnLabel_385
        CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond773) CFA_SP SP+0
        CFI (cfiCond773) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker774 Using cfiCommon1
        CFI (cfiPicker774) NoFunction
        CFI (cfiPicker774) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond761
        CFI EndBlock cfiCond762
        CFI EndBlock cfiCond763
        CFI EndBlock cfiCond764
        CFI EndBlock cfiCond765
        CFI EndBlock cfiCond766
        CFI EndBlock cfiCond767
        CFI EndBlock cfiCond768
        CFI EndBlock cfiCond769
        CFI EndBlock cfiCond770
        CFI EndBlock cfiCond771
        CFI EndBlock cfiCond772
        CFI EndBlock cfiCond773
        CFI EndBlock cfiPicker774
// 1943 
// 1944 /* Utility for handling references. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1945 static cJSON *create_reference(const cJSON *item, const internal_hooks * const hooks)
create_reference:
        CFI Block cfiBlock775 Using cfiCommon0
        CFI Function create_reference
        CODE
// 1946 {
        FUNCALL create_reference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL create_reference, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
// 1947     cJSON *reference = NULL;
// 1948     if (item == NULL)
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??create_reference_0
// 1949     {
// 1950         return NULL;
??create_reference_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??create_reference_2
// 1951     }
// 1952 
// 1953     reference = cJSON_New_Item(hooks);
??create_reference_0:
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine218_0 & 0xFFFF
// 1954     if (reference == NULL)
??CrossCallReturnLabel_572:
        JZ      ??create_reference_1
// 1955     {
// 1956         return NULL;
// 1957     }
// 1958 
// 1959     memcpy(reference, item, sizeof(cJSON));
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x12
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ??Subroutine165_0 & 0xFFFF
??CrossCallReturnLabel_288:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
// 1960     reference->string = NULL;
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_645:
        MOV     A,R7
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_353:
        LCALL   ?Subroutine102 & 0xFFFF
// 1961     reference->type |= cJSON_IsReference;
??CrossCallReturnLabel_162:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x1
        LCALL   ?Subroutine109 & 0xFFFF
// 1962     reference->next = reference->prev = NULL;
??CrossCallReturnLabel_174:
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_225:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1963     return reference;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??create_reference_2:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock775
// 1964 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
        CFI Block cfiCond776 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_221
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond777 Using cfiCommon0
        CFI (cfiCond777) NoFunction
        CFI (cfiCond777) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_93
        CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond777) CFA_SP SP+0
        CFI (cfiCond777) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond778 Using cfiCommon0
        CFI (cfiCond778) NoFunction
        CFI (cfiCond778) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_94
        CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond778) CFA_SP SP+0
        CFI (cfiCond778) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond779 Using cfiCommon0
        CFI (cfiCond779) NoFunction
        CFI (cfiCond779) Conditional ??CrossCallReturnLabel_225
        CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond779) CFA_SP SP+0
        CFI (cfiCond779) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond780 Using cfiCommon0
        CFI (cfiCond780) NoFunction
        CFI (cfiCond780) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_176
        CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond780) CFA_SP SP+0
        CFI (cfiCond780) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond781 Using cfiCommon0
        CFI (cfiCond781) NoFunction
        CFI (cfiCond781) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_174
        CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond781) CFA_SP SP+0
        CFI (cfiCond781) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond782 Using cfiCommon0
        CFI (cfiCond782) NoFunction
        CFI (cfiCond782) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_175
        CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond782) CFA_SP SP+0
        CFI (cfiCond782) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond783 Using cfiCommon0
        CFI (cfiCond783) NoFunction
        CFI (cfiCond783) Conditional ??CrossCallReturnLabel_224
        CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond783) CFA_SP SP+0
        CFI (cfiCond783) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker784 Using cfiCommon1
        CFI (cfiPicker784) NoFunction
        CFI (cfiPicker784) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
        CFI EndBlock cfiCond776
        CFI EndBlock cfiCond777
        CFI EndBlock cfiCond778
        CFI EndBlock cfiCond779
        CFI EndBlock cfiCond780
        CFI EndBlock cfiCond781
        CFI EndBlock cfiCond782
        CFI EndBlock cfiCond783
        CFI EndBlock cfiPicker784

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
        CFI Block cfiCond785 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_176
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond786 Using cfiCommon0
        CFI (cfiCond786) NoFunction
        CFI (cfiCond786) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond786) CFA_SP SP+0
        CFI (cfiCond786) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond787 Using cfiCommon0
        CFI (cfiCond787) NoFunction
        CFI (cfiCond787) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond787) CFA_SP SP+0
        CFI (cfiCond787) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker788 Using cfiCommon1
        CFI (cfiPicker788) NoFunction
        CFI (cfiPicker788) Picker
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_223:
        INC     DPTR
        RET
        CFI EndBlock cfiCond785
        CFI EndBlock cfiCond786
        CFI EndBlock cfiCond787
        CFI EndBlock cfiPicker788

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
        CFI Block cfiCond789 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_161
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond790 Using cfiCommon0
        CFI (cfiCond790) NoFunction
        CFI (cfiCond790) Conditional ??CrossCallReturnLabel_162
        CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond790) CFA_SP SP+0
        CFI (cfiCond790) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker791 Using cfiCommon1
        CFI (cfiPicker791) NoFunction
        CFI (cfiPicker791) Picker
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_348:
        RET
        CFI EndBlock cfiCond789
        CFI EndBlock cfiCond790
        CFI EndBlock cfiPicker791

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
        CFI Block cfiCond792 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_343
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond793 Using cfiCommon0
        CFI (cfiCond793) NoFunction
        CFI (cfiCond793) Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_344
        CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond793) CFA_SP SP+0
        CFI (cfiCond793) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond794 Using cfiCommon0
        CFI (cfiCond794) NoFunction
        CFI (cfiCond794) Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_345
        CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond794) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond794) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond794) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond794) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond794) CFA_SP SP+0
        CFI (cfiCond794) CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond795 Using cfiCommon0
        CFI (cfiCond795) NoFunction
        CFI (cfiCond795) Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_346
        CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond795) CFA_SP SP+0
        CFI (cfiCond795) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond796 Using cfiCommon0
        CFI (cfiCond796) NoFunction
        CFI (cfiCond796) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_161
        CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond796) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond796) CFA_SP SP+0
        CFI (cfiCond796) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond797 Using cfiCommon0
        CFI (cfiCond797) NoFunction
        CFI (cfiCond797) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_162
        CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond797) CFA_SP SP+0
        CFI (cfiCond797) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker798 Using cfiCommon1
        CFI (cfiPicker798) NoFunction
        CFI (cfiPicker798) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond792
        CFI EndBlock cfiCond793
        CFI EndBlock cfiCond794
        CFI EndBlock cfiCond795
        CFI EndBlock cfiCond796
        CFI EndBlock cfiCond797
        CFI EndBlock cfiPicker798
// 1965 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1966 static cJSON_bool add_item_to_array(cJSON *array, cJSON *item)
add_item_to_array:
        CFI Block cfiBlock799 Using cfiCommon0
        CFI Function add_item_to_array
        CODE
// 1967 {
        FUNCALL add_item_to_array, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1968     cJSON *child = NULL;
// 1969 
// 1970     if ((item == NULL) || (array == NULL) || (array == item))
        MOV     A,R6
        ORL     A,R7
        JZ      ??add_item_to_array_0
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??add_item_to_array_0
        MOV     A,R6
        XRL     A,?V0 + 0
        JNZ     ??add_item_to_array_1
        MOV     A,R7
        XRL     A,?V0 + 1
??add_item_to_array_1:
        JNZ     ??add_item_to_array_2
// 1971     {
// 1972         return false;
??add_item_to_array_0:
        MOV     R2,#0x0
        SJMP    ??add_item_to_array_3
// 1973     }
// 1974 
// 1975     child = array->child;
??add_item_to_array_2:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine203_0 & 0xFFFF
// 1976     /*
// 1977      * To find the last item in array quickly, we use prev in array
// 1978      */
// 1979     if (child == NULL)
??CrossCallReturnLabel_457:
        JNZ     ??add_item_to_array_4
// 1980     {
// 1981         /* list is empty, start new one */
// 1982         array->child = item;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ?Subroutine109 & 0xFFFF
// 1983         item->prev = item;
// 1984         item->next = NULL;
// 1985     }
??CrossCallReturnLabel_175:
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_224:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??add_item_to_array_5
// 1986     else
// 1987     {
// 1988         /* append to the end */
// 1989         if (child->prev)
??add_item_to_array_4:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_390:
        JZ      ??add_item_to_array_6
// 1990         {
// 1991             suffix_object(child->prev, item);
        ; Setup parameters for call to function suffix_object
        LCALL   ??suffix_object?relay
// 1992             array->child->prev = item;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine71 & 0xFFFF
// 1993         }
// 1994     }
??CrossCallReturnLabel_110:
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
??add_item_to_array_5:
        MOVX    @DPTR,A
// 1995 
// 1996     return true;
??add_item_to_array_6:
        MOV     R2,#0x1
??add_item_to_array_3:
        LJMP    ?Subroutine10 & 0xFFFF
        CFI EndBlock cfiBlock799
// 1997 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond800 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_386
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond801 Using cfiCommon0
        CFI (cfiCond801) NoFunction
        CFI (cfiCond801) Conditional ??CrossCallReturnLabel_387
        CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond801) CFA_SP SP+0
        CFI (cfiCond801) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker802 Using cfiCommon1
        CFI (cfiPicker802) NoFunction
        CFI (cfiPicker802) Picker
        LCALL   ?Subroutine144 & 0xFFFF
        CFI EndBlock cfiCond800
        CFI EndBlock cfiCond801
        CFI EndBlock cfiPicker802
??CrossCallReturnLabel_218:
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine187_0:
        CFI Block cfiCond803 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_391
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond804 Using cfiCommon0
        CFI (cfiCond804) NoFunction
        CFI (cfiCond804) Conditional ??CrossCallReturnLabel_392
        CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond804) CFA_SP SP+0
        CFI (cfiCond804) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond805 Using cfiCommon0
        CFI (cfiCond805) NoFunction
        CFI (cfiCond805) Conditional ??CrossCallReturnLabel_393
        CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond805) CFA_SP SP+0
        CFI (cfiCond805) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond806 Using cfiCommon0
        CFI (cfiCond806) NoFunction
        CFI (cfiCond806) Conditional ??CrossCallReturnLabel_386
        CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond806) CFA_SP SP+0
        CFI (cfiCond806) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond807 Using cfiCommon0
        CFI (cfiCond807) NoFunction
        CFI (cfiCond807) Conditional ??CrossCallReturnLabel_387
        CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond807) CFA_SP SP+0
        CFI (cfiCond807) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker808 Using cfiCommon1
        CFI (cfiPicker808) NoFunction
        CFI (cfiPicker808) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond803
        CFI EndBlock cfiCond804
        CFI EndBlock cfiCond805
        CFI EndBlock cfiCond806
        CFI EndBlock cfiCond807
        CFI EndBlock cfiPicker808
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine188_0:
        CFI Block cfiCond809 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_390
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond810 Using cfiCommon0
        CFI (cfiCond810) NoFunction
        CFI (cfiCond810) Conditional ??CrossCallReturnLabel_391
        CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond810) CFA_SP SP+0
        CFI (cfiCond810) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond811 Using cfiCommon0
        CFI (cfiCond811) NoFunction
        CFI (cfiCond811) Conditional ??CrossCallReturnLabel_392
        CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond811) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond811) CFA_SP SP+0
        CFI (cfiCond811) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond812 Using cfiCommon0
        CFI (cfiCond812) NoFunction
        CFI (cfiCond812) Conditional ??CrossCallReturnLabel_393
        CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond812) CFA_SP SP+0
        CFI (cfiCond812) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond813 Using cfiCommon0
        CFI (cfiCond813) NoFunction
        CFI (cfiCond813) Conditional ??CrossCallReturnLabel_386
        CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond813) CFA_SP SP+0
        CFI (cfiCond813) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond814 Using cfiCommon0
        CFI (cfiCond814) NoFunction
        CFI (cfiCond814) Conditional ??CrossCallReturnLabel_387
        CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond814) CFA_SP SP+0
        CFI (cfiCond814) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker815 Using cfiCommon1
        CFI (cfiPicker815) NoFunction
        CFI (cfiPicker815) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond809
        CFI EndBlock cfiCond810
        CFI EndBlock cfiCond811
        CFI EndBlock cfiCond812
        CFI EndBlock cfiCond813
        CFI EndBlock cfiCond814
        CFI EndBlock cfiPicker815
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine189_0:
        CFI Block cfiCond816 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_389
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond817 Using cfiCommon0
        CFI (cfiCond817) NoFunction
        CFI (cfiCond817) Conditional ??CrossCallReturnLabel_388
        CFI (cfiCond817) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond817) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond817) CFA_SP SP+-5
        CFI Block cfiCond818 Using cfiCommon0
        CFI (cfiCond818) NoFunction
        CFI (cfiCond818) Conditional ??CrossCallReturnLabel_390
        CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond818) CFA_SP SP+0
        CFI (cfiCond818) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond819 Using cfiCommon0
        CFI (cfiCond819) NoFunction
        CFI (cfiCond819) Conditional ??CrossCallReturnLabel_391
        CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond819) CFA_SP SP+0
        CFI (cfiCond819) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond820 Using cfiCommon0
        CFI (cfiCond820) NoFunction
        CFI (cfiCond820) Conditional ??CrossCallReturnLabel_392
        CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond820) CFA_SP SP+0
        CFI (cfiCond820) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond821 Using cfiCommon0
        CFI (cfiCond821) NoFunction
        CFI (cfiCond821) Conditional ??CrossCallReturnLabel_393
        CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond821) CFA_SP SP+0
        CFI (cfiCond821) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond822 Using cfiCommon0
        CFI (cfiCond822) NoFunction
        CFI (cfiCond822) Conditional ??CrossCallReturnLabel_386
        CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond822) CFA_SP SP+0
        CFI (cfiCond822) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond823 Using cfiCommon0
        CFI (cfiCond823) NoFunction
        CFI (cfiCond823) Conditional ??CrossCallReturnLabel_387
        CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond823) CFA_SP SP+0
        CFI (cfiCond823) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker824 Using cfiCommon1
        CFI (cfiPicker824) NoFunction
        CFI (cfiPicker824) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_555:
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond816
        CFI EndBlock cfiCond817
        CFI EndBlock cfiCond818
        CFI EndBlock cfiCond819
        CFI EndBlock cfiCond820
        CFI EndBlock cfiCond821
        CFI EndBlock cfiCond822
        CFI EndBlock cfiCond823
        CFI EndBlock cfiPicker824
// 1998 
// 1999 /* Add item to array/object. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2000 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToArray(cJSON *array, cJSON *item)
cJSON_AddItemToArray:
        CFI Block cfiBlock825 Using cfiCommon0
        CFI Function cJSON_AddItemToArray
        CODE
// 2001 {
        FUNCALL cJSON_AddItemToArray, add_item_to_array
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2002     return add_item_to_array(array, item);
        ; Setup parameters for call to function add_item_to_array
        LCALL   ??add_item_to_array?relay
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock825
// 2003 }
// 2004 
// 2005 #if defined(__clang__) || (defined(__GNUC__)  && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5))))
// 2006     #pragma GCC diagnostic push
// 2007 #endif
// 2008 #ifdef __GNUC__
// 2009 #pragma GCC diagnostic ignored "-Wcast-qual"
// 2010 #endif
// 2011 /* helper function to cast away const */
// 2012 static void* cast_away_const(const void* string)
// 2013 {
// 2014     return (void*)string;
// 2015 }
// 2016 #if defined(__clang__) || (defined(__GNUC__)  && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5))))
// 2017     #pragma GCC diagnostic pop
// 2018 #endif
// 2019 
// 2020 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2021 static cJSON_bool add_item_to_object(cJSON * const object, const char * const string, cJSON * const item, const internal_hooks * const hooks, const cJSON_bool constant_key)
add_item_to_object:
        CFI Block cfiBlock826 Using cfiCommon0
        CFI Function add_item_to_object
        CODE
// 2022 {
        FUNCALL add_item_to_object, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL add_item_to_object, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_526:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_97:
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 2023     char *new_key = NULL;
// 2024     int new_type = cJSON_Invalid;
// 2025 
// 2026     if ((object == NULL) || (string == NULL) || (item == NULL) || (object == item))
??CrossCallReturnLabel_67:
        ORL     A,R7
        JZ      ??add_item_to_object_0
        MOV     A,R2
        ORL     A,R3
        JZ      ??add_item_to_object_0
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??add_item_to_object_0
        MOV     A,?V0 + 0
        XRL     A,R6
        JNZ     ??add_item_to_object_1
        MOV     A,?V0 + 1
        XRL     A,R7
??add_item_to_object_1:
        JNZ     ??add_item_to_object_2
// 2027     {
// 2028         return false;
??add_item_to_object_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??add_item_to_object_3 & 0xFFFF
// 2029     }
// 2030 
// 2031     if (constant_key)
??add_item_to_object_2:
        MOV     A,R0
        ORL     A,R1
        JZ      ??add_item_to_object_4
// 2032     {
// 2033         new_key = (char*)cast_away_const(string);
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2034         new_type = item->type | cJSON_StringIsConst;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x2
        SJMP    ??add_item_to_object_5
// 2035     }
// 2036     else
// 2037     {
// 2038         new_key = (char*)cJSON_strdup((const unsigned char*)string, hooks);
??add_item_to_object_4:
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ??cJSON_strdup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2039         if (new_key == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??add_item_to_object_0
// 2040         {
// 2041             return false;
// 2042         }
// 2043 
// 2044         new_type = item->type & ~cJSON_StringIsConst;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfd
??add_item_to_object_5:
        MOV     ?V0 + 5,A
// 2045     }
// 2046 
// 2047     if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??add_item_to_object_6
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_359:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_477:
        JZ      ??add_item_to_object_6
// 2048     {
// 2049         hooks->deallocate(item->string);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine88 & 0xFFFF
// 2050     }
??CrossCallReturnLabel_360:
        LCALL   ??Subroutine195_0 & 0xFFFF
??CrossCallReturnLabel_411:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL   ?CALL_IND
// 2051 
// 2052     item->string = new_key;
??add_item_to_object_6:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_361:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ?Subroutine95 & 0xFFFF
// 2053     item->type = new_type;
??CrossCallReturnLabel_156:
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 2054 
// 2055     return add_item_to_array(object, item);
        ; Setup parameters for call to function add_item_to_array
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
??add_item_to_object_3:
        SJMP    ??Subroutine190_0
        CFI EndBlock cfiBlock826
// 2056 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
        CFI Block cfiCond827 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_69
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond828 Using cfiCommon0
        CFI (cfiCond828) NoFunction
        CFI (cfiCond828) Conditional ??CrossCallReturnLabel_70
        CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond828) CFA_SP SP+0
        CFI (cfiCond828) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond829 Using cfiCommon0
        CFI (cfiCond829) NoFunction
        CFI (cfiCond829) Conditional ??CrossCallReturnLabel_67
        CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond829) CFA_SP SP+0
        CFI (cfiCond829) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond830 Using cfiCommon0
        CFI (cfiCond830) NoFunction
        CFI (cfiCond830) Conditional ??CrossCallReturnLabel_68
        CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond830) CFA_SP SP+0
        CFI (cfiCond830) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker831 Using cfiCommon1
        CFI (cfiPicker831) NoFunction
        CFI (cfiPicker831) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_631:
        MOV     A,R6
        RET
        CFI EndBlock cfiCond827
        CFI EndBlock cfiCond828
        CFI EndBlock cfiCond829
        CFI EndBlock cfiCond830
        CFI EndBlock cfiPicker831

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock832 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock832
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine190_0:
        CFI Block cfiBlock833 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock833
// 2057 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2058 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemToObject:
        CFI Block cfiBlock834 Using cfiCommon0
        CFI Function cJSON_AddItemToObject
        CODE
// 2059 {
        FUNCALL cJSON_AddItemToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
// 2060     return add_item_to_object(object, string, item, &global_hooks, false);
??CrossCallReturnLabel_73:
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock834
// 2061 }
// 2062 
// 2063 /* Add an item to an object with constant string as key */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2064 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObjectCS(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemToObjectCS:
        CFI Block cfiBlock835 Using cfiCommon0
        CFI Function cJSON_AddItemToObjectCS
        CODE
// 2065 {
        FUNCALL cJSON_AddItemToObjectCS, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2066     return add_item_to_object(object, string, item, &global_hooks, true);
??CrossCallReturnLabel_65:
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock835
// 2067 }
// 2068 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2069 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)
cJSON_AddItemReferenceToArray:
        CFI Block cfiBlock836 Using cfiCommon0
        CFI Function cJSON_AddItemReferenceToArray
        CODE
// 2070 {
        FUNCALL cJSON_AddItemReferenceToArray, create_reference
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddItemReferenceToArray, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
// 2071     if (array == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??cJSON_AddItemReferenceToArray_0
// 2072     {
// 2073         return false;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_AddItemReferenceToArray_1
// 2074     }
// 2075 
// 2076     return add_item_to_array(array, create_reference(item, &global_hooks));
??cJSON_AddItemReferenceToArray_0:
        ; Setup parameters for call to function add_item_to_array
        ; Setup parameters for call to function create_reference
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ??create_reference?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
??cJSON_AddItemReferenceToArray_1:
        SJMP    ??Subroutine191_0
        CFI EndBlock cfiBlock836
// 2077 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock837 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_DetachItemViaPointer?relay
        CFI EndBlock cfiBlock837
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine191_0:
        CFI Block cfiBlock838 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock838
// 2078 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2079 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToObject(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemReferenceToObject:
        CFI Block cfiBlock839 Using cfiCommon0
        CFI Function cJSON_AddItemReferenceToObject
        CODE
// 2080 {
        FUNCALL cJSON_AddItemReferenceToObject, create_reference
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddItemReferenceToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2081     if ((object == NULL) || (string == NULL))
??CrossCallReturnLabel_412:
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_AddItemReferenceToObject_0
        MOV     A,R4
        ORL     A,?V0 + 1
        JNZ     ??cJSON_AddItemReferenceToObject_1
// 2082     {
// 2083         return false;
??cJSON_AddItemReferenceToObject_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_AddItemReferenceToObject_2
// 2084     }
// 2085 
// 2086     return add_item_to_object(object, string, create_reference(item, &global_hooks), &global_hooks, false);
??cJSON_AddItemReferenceToObject_1:
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 2,#global_hooks & 0xff
        MOV     ?V0 + 3,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        ; Setup parameters for call to function create_reference
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ??create_reference?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_394:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
??cJSON_AddItemReferenceToObject_2:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock839
// 2087 }
// 2088 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2089 CJSON_PUBLIC(cJSON*) cJSON_AddNullToObject(cJSON * const object, const char * const name)
cJSON_AddNullToObject:
        CFI Block cfiBlock840 Using cfiCommon0
        CFI Function cJSON_AddNullToObject
        CODE
// 2090 {
        FUNCALL cJSON_AddNullToObject, cJSON_CreateNull
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNullToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNullToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2091     cJSON *null = cJSON_CreateNull();
        ; Setup parameters for call to function cJSON_CreateNull
        LCALL   ??cJSON_CreateNull?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2092     if (add_item_to_object(object, name, null, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_395:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_130:
        JNZ     ??CrossCallReturnLabel_421
// 2093     {
// 2094         return null;
// 2095     }
// 2096 
// 2097     cJSON_Delete(null);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2098     return NULL;
??CrossCallReturnLabel_421:
        SJMP    ??Subroutine192_0
        CFI EndBlock cfiBlock840
// 2099 }
// 2100 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2101 CJSON_PUBLIC(cJSON*) cJSON_AddTrueToObject(cJSON * const object, const char * const name)
cJSON_AddTrueToObject:
        CFI Block cfiBlock841 Using cfiCommon0
        CFI Function cJSON_AddTrueToObject
        CODE
// 2102 {
        FUNCALL cJSON_AddTrueToObject, cJSON_CreateTrue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddTrueToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddTrueToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2103     cJSON *true_item = cJSON_CreateTrue();
        ; Setup parameters for call to function cJSON_CreateTrue
        LCALL   ??cJSON_CreateTrue?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2104     if (add_item_to_object(object, name, true_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_396:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_131:
        JNZ     ??CrossCallReturnLabel_422
// 2105     {
// 2106         return true_item;
// 2107     }
// 2108 
// 2109     cJSON_Delete(true_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2110     return NULL;
??CrossCallReturnLabel_422:
        SJMP    ??Subroutine192_0
        CFI EndBlock cfiBlock841
// 2111 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiBlock842 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        CFI EndBlock cfiBlock842
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine192_0:
        CFI Block cfiBlock843 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock843
// 2112 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2113 CJSON_PUBLIC(cJSON*) cJSON_AddFalseToObject(cJSON * const object, const char * const name)
cJSON_AddFalseToObject:
        CFI Block cfiBlock844 Using cfiCommon0
        CFI Function cJSON_AddFalseToObject
        CODE
// 2114 {
        FUNCALL cJSON_AddFalseToObject, cJSON_CreateFalse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddFalseToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddFalseToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2115     cJSON *false_item = cJSON_CreateFalse();
        ; Setup parameters for call to function cJSON_CreateFalse
        LCALL   ??cJSON_CreateFalse?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2116     if (add_item_to_object(object, name, false_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_397:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_132:
        JNZ     ??CrossCallReturnLabel_423
// 2117     {
// 2118         return false_item;
// 2119     }
// 2120 
// 2121     cJSON_Delete(false_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2122     return NULL;
??CrossCallReturnLabel_423:
        SJMP    ??Subroutine192_0
        CFI EndBlock cfiBlock844
// 2123 }
// 2124 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2125 CJSON_PUBLIC(cJSON*) cJSON_AddBoolToObject(cJSON * const object, const char * const name, const cJSON_bool boolean)
cJSON_AddBoolToObject:
        CFI Block cfiBlock845 Using cfiCommon0
        CFI Function cJSON_AddBoolToObject
        CODE
// 2126 {
        FUNCALL cJSON_AddBoolToObject, cJSON_CreateBool
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddBoolToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddBoolToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2127     cJSON *bool_item = cJSON_CreateBool(boolean);
??CrossCallReturnLabel_413:
        ; Setup parameters for call to function cJSON_CreateBool
        LCALL   ??cJSON_CreateBool?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2128     if (add_item_to_object(object, name, bool_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_398:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_133:
        JNZ     ??CrossCallReturnLabel_424
// 2129     {
// 2130         return bool_item;
// 2131     }
// 2132 
// 2133     cJSON_Delete(bool_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2134     return NULL;
??CrossCallReturnLabel_424:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock845
// 2135 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
        CFI Block cfiCond846 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_394
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond847 Using cfiCommon0
        CFI (cfiCond847) NoFunction
        CFI (cfiCond847) Conditional ??CrossCallReturnLabel_395
        CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond847) CFA_SP SP+0
        CFI (cfiCond847) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond848 Using cfiCommon0
        CFI (cfiCond848) NoFunction
        CFI (cfiCond848) Conditional ??CrossCallReturnLabel_396
        CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond848) CFA_SP SP+0
        CFI (cfiCond848) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond849 Using cfiCommon0
        CFI (cfiCond849) NoFunction
        CFI (cfiCond849) Conditional ??CrossCallReturnLabel_397
        CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond849) CFA_SP SP+0
        CFI (cfiCond849) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond850 Using cfiCommon0
        CFI (cfiCond850) NoFunction
        CFI (cfiCond850) Conditional ??CrossCallReturnLabel_398
        CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond850) CFA_SP SP+0
        CFI (cfiCond850) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond851 Using cfiCommon0
        CFI (cfiCond851) NoFunction
        CFI (cfiCond851) Conditional ??CrossCallReturnLabel_399
        CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond851) CFA_SP SP+0
        CFI (cfiCond851) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond852 Using cfiCommon0
        CFI (cfiCond852) NoFunction
        CFI (cfiCond852) Conditional ??CrossCallReturnLabel_400
        CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond852) CFA_SP SP+0
        CFI (cfiCond852) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond853 Using cfiCommon0
        CFI (cfiCond853) NoFunction
        CFI (cfiCond853) Conditional ??CrossCallReturnLabel_401
        CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond853) CFA_SP SP+0
        CFI (cfiCond853) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond854 Using cfiCommon0
        CFI (cfiCond854) NoFunction
        CFI (cfiCond854) Conditional ??CrossCallReturnLabel_402
        CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond854) CFA_SP SP+0
        CFI (cfiCond854) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond855 Using cfiCommon0
        CFI (cfiCond855) NoFunction
        CFI (cfiCond855) Conditional ??CrossCallReturnLabel_403
        CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond855) CFA_SP SP+0
        CFI (cfiCond855) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker856 Using cfiCommon1
        CFI (cfiPicker856) NoFunction
        CFI (cfiPicker856) Picker
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        CFI EndBlock cfiCond846
        CFI EndBlock cfiCond847
        CFI EndBlock cfiCond848
        CFI EndBlock cfiCond849
        CFI EndBlock cfiCond850
        CFI EndBlock cfiCond851
        CFI EndBlock cfiCond852
        CFI EndBlock cfiCond853
        CFI EndBlock cfiCond854
        CFI EndBlock cfiCond855
        CFI EndBlock cfiPicker856
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine193_0:
        CFI Block cfiCond857 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_404
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond858 Using cfiCommon0
        CFI (cfiCond858) NoFunction
        CFI (cfiCond858) Conditional ??CrossCallReturnLabel_404
        CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond858) CFA_SP SP+0
        CFI (cfiCond858) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond859 Using cfiCommon0
        CFI (cfiCond859) NoFunction
        CFI (cfiCond859) Conditional ??CrossCallReturnLabel_394
        CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond859) CFA_SP SP+0
        CFI (cfiCond859) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond860 Using cfiCommon0
        CFI (cfiCond860) NoFunction
        CFI (cfiCond860) Conditional ??CrossCallReturnLabel_395
        CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond860) CFA_SP SP+0
        CFI (cfiCond860) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond861 Using cfiCommon0
        CFI (cfiCond861) NoFunction
        CFI (cfiCond861) Conditional ??CrossCallReturnLabel_396
        CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond861) CFA_SP SP+0
        CFI (cfiCond861) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond862 Using cfiCommon0
        CFI (cfiCond862) NoFunction
        CFI (cfiCond862) Conditional ??CrossCallReturnLabel_397
        CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond862) CFA_SP SP+0
        CFI (cfiCond862) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond863 Using cfiCommon0
        CFI (cfiCond863) NoFunction
        CFI (cfiCond863) Conditional ??CrossCallReturnLabel_398
        CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond863) CFA_SP SP+0
        CFI (cfiCond863) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond864 Using cfiCommon0
        CFI (cfiCond864) NoFunction
        CFI (cfiCond864) Conditional ??CrossCallReturnLabel_399
        CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond864) CFA_SP SP+0
        CFI (cfiCond864) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond865 Using cfiCommon0
        CFI (cfiCond865) NoFunction
        CFI (cfiCond865) Conditional ??CrossCallReturnLabel_400
        CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond865) CFA_SP SP+0
        CFI (cfiCond865) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond866 Using cfiCommon0
        CFI (cfiCond866) NoFunction
        CFI (cfiCond866) Conditional ??CrossCallReturnLabel_401
        CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond866) CFA_SP SP+0
        CFI (cfiCond866) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond867 Using cfiCommon0
        CFI (cfiCond867) NoFunction
        CFI (cfiCond867) Conditional ??CrossCallReturnLabel_402
        CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond867) CFA_SP SP+0
        CFI (cfiCond867) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond868 Using cfiCommon0
        CFI (cfiCond868) NoFunction
        CFI (cfiCond868) Conditional ??CrossCallReturnLabel_403
        CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond868) CFA_SP SP+0
        CFI (cfiCond868) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker869 Using cfiCommon1
        CFI (cfiPicker869) NoFunction
        CFI (cfiPicker869) Picker
        LCALL   ??add_item_to_object?relay
        MOV     A,#0x6
        RET
        CFI EndBlock cfiCond857
        CFI EndBlock cfiCond858
        CFI EndBlock cfiCond859
        CFI EndBlock cfiCond860
        CFI EndBlock cfiCond861
        CFI EndBlock cfiCond862
        CFI EndBlock cfiCond863
        CFI EndBlock cfiCond864
        CFI EndBlock cfiCond865
        CFI EndBlock cfiCond866
        CFI EndBlock cfiCond867
        CFI EndBlock cfiCond868
        CFI EndBlock cfiPicker869

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
        CFI Block cfiCond870 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_417
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond871 Using cfiCommon0
        CFI (cfiCond871) NoFunction
        CFI (cfiCond871) Conditional ??CrossCallReturnLabel_418
        CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond871) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond871) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond871) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond871) CFA_SP SP+0
        CFI (cfiCond871) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker872 Using cfiCommon1
        CFI (cfiPicker872) NoFunction
        CFI (cfiPicker872) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond870
        CFI EndBlock cfiCond871
        CFI EndBlock cfiPicker872
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine194_0:
        CFI Block cfiCond873 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_415
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond874 Using cfiCommon0
        CFI (cfiCond874) NoFunction
        CFI (cfiCond874) Conditional ??CrossCallReturnLabel_416
        CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond874) CFA_SP SP+0
        CFI (cfiCond874) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond875 Using cfiCommon0
        CFI (cfiCond875) NoFunction
        CFI (cfiCond875) Conditional ??CrossCallReturnLabel_417
        CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond875) CFA_SP SP+0
        CFI (cfiCond875) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond876 Using cfiCommon0
        CFI (cfiCond876) NoFunction
        CFI (cfiCond876) Conditional ??CrossCallReturnLabel_418
        CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond876) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond876) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond876) CFA_SP SP+0
        CFI (cfiCond876) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker877 Using cfiCommon1
        CFI (cfiPicker877) NoFunction
        CFI (cfiPicker877) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond873
        CFI EndBlock cfiCond874
        CFI EndBlock cfiCond875
        CFI EndBlock cfiCond876
        CFI EndBlock cfiPicker877
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine195_0:
        CFI Block cfiCond878 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_405
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond879 Using cfiCommon0
        CFI (cfiCond879) NoFunction
        CFI (cfiCond879) Conditional ??CrossCallReturnLabel_406
        CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond879) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond879) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond879) CFA_SP SP+-2
        CFI (cfiCond879) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond880 Using cfiCommon0
        CFI (cfiCond880) NoFunction
        CFI (cfiCond880) Conditional ??CrossCallReturnLabel_407
        CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond880) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond880) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond880) CFA_SP SP+0
        CFI (cfiCond880) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond881 Using cfiCommon0
        CFI (cfiCond881) NoFunction
        CFI (cfiCond881) Conditional ??CrossCallReturnLabel_408
        CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond881) CFA_SP SP+0
        CFI (cfiCond881) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond882 Using cfiCommon0
        CFI (cfiCond882) NoFunction
        CFI (cfiCond882) Conditional ??CrossCallReturnLabel_409
        CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond882) CFA_SP SP+-2
        CFI (cfiCond882) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond883 Using cfiCommon0
        CFI (cfiCond883) NoFunction
        CFI (cfiCond883) Conditional ??CrossCallReturnLabel_410
        CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond883) CFA_SP SP+0
        CFI (cfiCond883) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond884 Using cfiCommon0
        CFI (cfiCond884) NoFunction
        CFI (cfiCond884) Conditional ??CrossCallReturnLabel_411
        CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond884) CFA_SP SP+0
        CFI (cfiCond884) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond885 Using cfiCommon0
        CFI (cfiCond885) NoFunction
        CFI (cfiCond885) Conditional ??CrossCallReturnLabel_412
        CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond885) CFA_SP SP+0
        CFI (cfiCond885) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond886 Using cfiCommon0
        CFI (cfiCond886) NoFunction
        CFI (cfiCond886) Conditional ??CrossCallReturnLabel_413
        CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond886) CFA_SP SP+0
        CFI (cfiCond886) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond887 Using cfiCommon0
        CFI (cfiCond887) NoFunction
        CFI (cfiCond887) Conditional ??CrossCallReturnLabel_414
        CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond887) CFA_SP SP+0
        CFI (cfiCond887) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond888 Using cfiCommon0
        CFI (cfiCond888) NoFunction
        CFI (cfiCond888) Conditional ??CrossCallReturnLabel_415
        CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond888) CFA_SP SP+0
        CFI (cfiCond888) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond889 Using cfiCommon0
        CFI (cfiCond889) NoFunction
        CFI (cfiCond889) Conditional ??CrossCallReturnLabel_416
        CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond889) CFA_SP SP+0
        CFI (cfiCond889) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond890 Using cfiCommon0
        CFI (cfiCond890) NoFunction
        CFI (cfiCond890) Conditional ??CrossCallReturnLabel_417
        CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond890) CFA_SP SP+0
        CFI (cfiCond890) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond891 Using cfiCommon0
        CFI (cfiCond891) NoFunction
        CFI (cfiCond891) Conditional ??CrossCallReturnLabel_418
        CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond891) CFA_SP SP+0
        CFI (cfiCond891) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker892 Using cfiCommon1
        CFI (cfiPicker892) NoFunction
        CFI (cfiPicker892) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_556:
        RET
        CFI EndBlock cfiCond878
        CFI EndBlock cfiCond879
        CFI EndBlock cfiCond880
        CFI EndBlock cfiCond881
        CFI EndBlock cfiCond882
        CFI EndBlock cfiCond883
        CFI EndBlock cfiCond884
        CFI EndBlock cfiCond885
        CFI EndBlock cfiCond886
        CFI EndBlock cfiCond887
        CFI EndBlock cfiCond888
        CFI EndBlock cfiCond889
        CFI EndBlock cfiCond890
        CFI EndBlock cfiCond891
        CFI EndBlock cfiPicker892
// 2136 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2137 CJSON_PUBLIC(cJSON*) cJSON_AddNumberToObject(cJSON * const object, const char * const name, const double number)
cJSON_AddNumberToObject:
        CFI Block cfiBlock893 Using cfiCommon0
        CFI Function cJSON_AddNumberToObject
        CODE
// 2138 {
        FUNCALL cJSON_AddNumberToObject, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNumberToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNumberToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
// 2139     cJSON *number_item = cJSON_CreateNumber(number);
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2140     if (add_item_to_object(object, name, number_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_134:
        JNZ     ??CrossCallReturnLabel_425
// 2141     {
// 2142         return number_item;
// 2143     }
// 2144 
// 2145     cJSON_Delete(number_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2146     return NULL;
??CrossCallReturnLabel_425:
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock893
// 2147 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
        CFI Block cfiCond894 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_130
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond895 Using cfiCommon0
        CFI (cfiCond895) NoFunction
        CFI (cfiCond895) Conditional ??CrossCallReturnLabel_131
        CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond895) CFA_SP SP+0
        CFI (cfiCond895) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond896 Using cfiCommon0
        CFI (cfiCond896) NoFunction
        CFI (cfiCond896) Conditional ??CrossCallReturnLabel_132
        CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond896) CFA_SP SP+0
        CFI (cfiCond896) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond897 Using cfiCommon0
        CFI (cfiCond897) NoFunction
        CFI (cfiCond897) Conditional ??CrossCallReturnLabel_133
        CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond897) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond897) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond897) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond897) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond897) CFA_SP SP+0
        CFI (cfiCond897) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond898 Using cfiCommon0
        CFI (cfiCond898) NoFunction
        CFI (cfiCond898) Conditional ??CrossCallReturnLabel_134
        CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond898) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond898) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond898) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond898) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond898) CFA_SP SP+0
        CFI (cfiCond898) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond899 Using cfiCommon0
        CFI (cfiCond899) NoFunction
        CFI (cfiCond899) Conditional ??CrossCallReturnLabel_135
        CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond899) CFA_SP SP+0
        CFI (cfiCond899) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond900 Using cfiCommon0
        CFI (cfiCond900) NoFunction
        CFI (cfiCond900) Conditional ??CrossCallReturnLabel_136
        CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond900) CFA_SP SP+0
        CFI (cfiCond900) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond901 Using cfiCommon0
        CFI (cfiCond901) NoFunction
        CFI (cfiCond901) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond901) CFA_SP SP+0
        CFI (cfiCond901) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond902 Using cfiCommon0
        CFI (cfiCond902) NoFunction
        CFI (cfiCond902) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond902) CFA_SP SP+0
        CFI (cfiCond902) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker903 Using cfiCommon1
        CFI (cfiPicker903) NoFunction
        CFI (cfiPicker903) Picker
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        RET
        CFI EndBlock cfiCond894
        CFI EndBlock cfiCond895
        CFI EndBlock cfiCond896
        CFI EndBlock cfiCond897
        CFI EndBlock cfiCond898
        CFI EndBlock cfiCond899
        CFI EndBlock cfiCond900
        CFI EndBlock cfiCond901
        CFI EndBlock cfiCond902
        CFI EndBlock cfiPicker903
// 2148 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2149 CJSON_PUBLIC(cJSON*) cJSON_AddStringToObject(cJSON * const object, const char * const name, const char * const string)
cJSON_AddStringToObject:
        CFI Block cfiBlock904 Using cfiCommon0
        CFI Function cJSON_AddStringToObject
        CODE
// 2150 {
        FUNCALL cJSON_AddStringToObject, cJSON_CreateString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddStringToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddStringToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 2151     cJSON *string_item = cJSON_CreateString(string);
// 2152     if (add_item_to_object(object, name, string_item, &global_hooks, false))
??CrossCallReturnLabel_71:
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_400:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_135:
        JNZ     ??CrossCallReturnLabel_426
// 2153     {
// 2154         return string_item;
// 2155     }
// 2156 
// 2157     cJSON_Delete(string_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2158     return NULL;
??CrossCallReturnLabel_426:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock904
// 2159 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
        CFI Block cfiCond905 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_419
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond906 Using cfiCommon0
        CFI (cfiCond906) NoFunction
        CFI (cfiCond906) Conditional ??CrossCallReturnLabel_420
        CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond906) CFA_SP SP+0
        CFI (cfiCond906) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker907 Using cfiCommon1
        CFI (cfiPicker907) NoFunction
        CFI (cfiPicker907) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        CFI EndBlock cfiCond905
        CFI EndBlock cfiCond906
        CFI EndBlock cfiPicker907
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine196_0:
        CFI Block cfiCond908 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_421
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond909 Using cfiCommon0
        CFI (cfiCond909) NoFunction
        CFI (cfiCond909) Conditional ??CrossCallReturnLabel_422
        CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond909) CFA_SP SP+0
        CFI (cfiCond909) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond910 Using cfiCommon0
        CFI (cfiCond910) NoFunction
        CFI (cfiCond910) Conditional ??CrossCallReturnLabel_423
        CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond910) CFA_SP SP+0
        CFI (cfiCond910) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond911 Using cfiCommon0
        CFI (cfiCond911) NoFunction
        CFI (cfiCond911) Conditional ??CrossCallReturnLabel_424
        CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond911) CFA_SP SP+0
        CFI (cfiCond911) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond912 Using cfiCommon0
        CFI (cfiCond912) NoFunction
        CFI (cfiCond912) Conditional ??CrossCallReturnLabel_425
        CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond912) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond912) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond912) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond912) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond912) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond912) CFA_SP SP+0
        CFI (cfiCond912) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond913 Using cfiCommon0
        CFI (cfiCond913) NoFunction
        CFI (cfiCond913) Conditional ??CrossCallReturnLabel_426
        CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond913) CFA_SP SP+0
        CFI (cfiCond913) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond914 Using cfiCommon0
        CFI (cfiCond914) NoFunction
        CFI (cfiCond914) Conditional ??CrossCallReturnLabel_427
        CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond914) CFA_SP SP+0
        CFI (cfiCond914) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond915 Using cfiCommon0
        CFI (cfiCond915) NoFunction
        CFI (cfiCond915) Conditional ??CrossCallReturnLabel_428
        CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond915) CFA_SP SP+0
        CFI (cfiCond915) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond916 Using cfiCommon0
        CFI (cfiCond916) NoFunction
        CFI (cfiCond916) Conditional ??CrossCallReturnLabel_429
        CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond916) CFA_SP SP+0
        CFI (cfiCond916) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond917 Using cfiCommon0
        CFI (cfiCond917) NoFunction
        CFI (cfiCond917) Conditional ??CrossCallReturnLabel_419
        CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond917) CFA_SP SP+0
        CFI (cfiCond917) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond918 Using cfiCommon0
        CFI (cfiCond918) NoFunction
        CFI (cfiCond918) Conditional ??CrossCallReturnLabel_420
        CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond918) CFA_SP SP+0
        CFI (cfiCond918) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker919 Using cfiCommon1
        CFI (cfiPicker919) NoFunction
        CFI (cfiPicker919) Picker
        LCALL   ??cJSON_Delete?relay
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond908
        CFI EndBlock cfiCond909
        CFI EndBlock cfiCond910
        CFI EndBlock cfiCond911
        CFI EndBlock cfiCond912
        CFI EndBlock cfiCond913
        CFI EndBlock cfiCond914
        CFI EndBlock cfiCond915
        CFI EndBlock cfiCond916
        CFI EndBlock cfiCond917
        CFI EndBlock cfiCond918
        CFI EndBlock cfiPicker919
// 2160 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2161 CJSON_PUBLIC(cJSON*) cJSON_AddRawToObject(cJSON * const object, const char * const name, const char * const raw)
cJSON_AddRawToObject:
        CFI Block cfiBlock920 Using cfiCommon0
        CFI Function cJSON_AddRawToObject
        CODE
// 2162 {
        FUNCALL cJSON_AddRawToObject, cJSON_CreateRaw
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddRawToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddRawToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2163     cJSON *raw_item = cJSON_CreateRaw(raw);
??CrossCallReturnLabel_414:
        ; Setup parameters for call to function cJSON_CreateRaw
        LCALL   ??cJSON_CreateRaw?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2164     if (add_item_to_object(object, name, raw_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_401:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_136:
        JNZ     ??CrossCallReturnLabel_427
// 2165     {
// 2166         return raw_item;
// 2167     }
// 2168 
// 2169     cJSON_Delete(raw_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2170     return NULL;
??CrossCallReturnLabel_427:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock920
// 2171 }
// 2172 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2173 CJSON_PUBLIC(cJSON*) cJSON_AddObjectToObject(cJSON * const object, const char * const name)
cJSON_AddObjectToObject:
        CFI Block cfiBlock921 Using cfiCommon0
        CFI Function cJSON_AddObjectToObject
        CODE
// 2174 {
        FUNCALL cJSON_AddObjectToObject, cJSON_CreateObject
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddObjectToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddObjectToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2175     cJSON *object_item = cJSON_CreateObject();
        ; Setup parameters for call to function cJSON_CreateObject
        LCALL   ??cJSON_CreateObject?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2176     if (add_item_to_object(object, name, object_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_402:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_137:
        JNZ     ??CrossCallReturnLabel_428
// 2177     {
// 2178         return object_item;
// 2179     }
// 2180 
// 2181     cJSON_Delete(object_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2182     return NULL;
??CrossCallReturnLabel_428:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock921
// 2183 }
// 2184 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2185 CJSON_PUBLIC(cJSON*) cJSON_AddArrayToObject(cJSON * const object, const char * const name)
cJSON_AddArrayToObject:
        CFI Block cfiBlock922 Using cfiCommon0
        CFI Function cJSON_AddArrayToObject
        CODE
// 2186 {
        FUNCALL cJSON_AddArrayToObject, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddArrayToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddArrayToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2187     cJSON *array = cJSON_CreateArray();
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ??cJSON_CreateArray?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2188     if (add_item_to_object(object, name, array, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_403:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_138:
        JNZ     ??CrossCallReturnLabel_429
// 2189     {
// 2190         return array;
// 2191     }
// 2192 
// 2193     cJSON_Delete(array);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2194     return NULL;
??CrossCallReturnLabel_429:
        LJMP    ??Subroutine192_0 & 0xFFFF
        CFI EndBlock cfiBlock922
// 2195 }
// 2196 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2197 CJSON_PUBLIC(cJSON *) cJSON_DetachItemViaPointer(cJSON *parent, cJSON * const item)
cJSON_DetachItemViaPointer:
        CFI Block cfiBlock923 Using cfiCommon0
        CFI Function cJSON_DetachItemViaPointer
        CODE
// 2198 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2199     if ((parent == NULL) || (item == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??cJSON_DetachItemViaPointer_0
        MOV     A,R4
        ORL     A,R5
        JNZ     ??cJSON_DetachItemViaPointer_1
// 2200     {
// 2201         return NULL;
??cJSON_DetachItemViaPointer_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??cJSON_DetachItemViaPointer_2 & 0xFFFF
// 2202     }
// 2203 
// 2204     if (item != parent->child)
??cJSON_DetachItemViaPointer_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_624:
        MOV     A,R4
        XRL     A,R0
        JNZ     ??cJSON_DetachItemViaPointer_3
        MOV     A,R5
        XRL     A,R1
??cJSON_DetachItemViaPointer_3:
        JZ      ??CrossCallReturnLabel_438
// 2205     {
// 2206         /* not the first element */
// 2207         item->prev->next = item->next;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine155_0 & 0xFFFF
// 2208     }
??CrossCallReturnLabel_232:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2209     if (item->next != NULL)
??CrossCallReturnLabel_438:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_478:
        JZ      ??CrossCallReturnLabel_446
// 2210     {
// 2211         /* not the last element */
// 2212         item->next->prev = item->prev;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine154_0 & 0xFFFF
// 2213     }
??CrossCallReturnLabel_233:
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2214 
// 2215     if (item == parent->child)
??CrossCallReturnLabel_446:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_625:
        MOV     A,R4
        XRL     A,R0
        JNZ     ??cJSON_DetachItemViaPointer_4
        MOV     A,R5
        XRL     A,R1
??cJSON_DetachItemViaPointer_4:
        MOV     DPL,R4
        MOV     DPH,R5
        JNZ     ??cJSON_DetachItemViaPointer_5
// 2216     {
// 2217         /* first element */
// 2218         parent->child = item->next;
        LCALL   ?Subroutine50 & 0xFFFF
// 2219     }
??CrossCallReturnLabel_75:
        SJMP    ??cJSON_DetachItemViaPointer_6
// 2220     else if (item->next == NULL)
??cJSON_DetachItemViaPointer_5:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_479:
        JNZ     ??CrossCallReturnLabel_447
// 2221     {
// 2222         /* last element */
// 2223         parent->child->prev = item->prev;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine50 & 0xFFFF
// 2224     }
??CrossCallReturnLabel_76:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
??cJSON_DetachItemViaPointer_6:
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2225 
// 2226     /* make sure the detached item doesn't point anywhere anymore */
// 2227     item->prev = NULL;
??CrossCallReturnLabel_447:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2228     item->next = NULL;
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2229 
// 2230     return item;
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
??cJSON_DetachItemViaPointer_2:
        LJMP    ??Subroutine191_0 & 0xFFFF
        CFI EndBlock cfiBlock923
// 2231 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
        CFI Block cfiCond924 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_453
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond925 Using cfiCommon0
        CFI (cfiCond925) NoFunction
        CFI (cfiCond925) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond925) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond925) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond925) CFA_SP SP+0
        CFI (cfiCond925) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker926 Using cfiCommon1
        CFI (cfiPicker926) NoFunction
        CFI (cfiPicker926) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond924
        CFI EndBlock cfiCond925
        CFI EndBlock cfiPicker926
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine197_0:
        CFI Block cfiCond927 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_451
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond928 Using cfiCommon0
        CFI (cfiCond928) NoFunction
        CFI (cfiCond928) Conditional ??CrossCallReturnLabel_452
        CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond928) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond928) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond928) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond928) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond928) CFA_SP SP+0
        CFI (cfiCond928) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond929 Using cfiCommon0
        CFI (cfiCond929) NoFunction
        CFI (cfiCond929) Conditional ??CrossCallReturnLabel_453
        CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond929) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond929) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond929) CFA_SP SP+0
        CFI (cfiCond929) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond930 Using cfiCommon0
        CFI (cfiCond930) NoFunction
        CFI (cfiCond930) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond930) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond930) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond930) CFA_SP SP+0
        CFI (cfiCond930) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker931 Using cfiCommon1
        CFI (cfiPicker931) NoFunction
        CFI (cfiPicker931) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond927
        CFI EndBlock cfiCond928
        CFI EndBlock cfiCond929
        CFI EndBlock cfiCond930
        CFI EndBlock cfiPicker931
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine198_0:
        CFI Block cfiCond932 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_446
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond933 Using cfiCommon0
        CFI (cfiCond933) NoFunction
        CFI (cfiCond933) Conditional ??CrossCallReturnLabel_447
        CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond933) CFA_SP SP+0
        CFI (cfiCond933) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond934 Using cfiCommon0
        CFI (cfiCond934) NoFunction
        CFI (cfiCond934) Conditional ??CrossCallReturnLabel_448
        CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond934) CFA_SP SP+0
        CFI (cfiCond934) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond935 Using cfiCommon0
        CFI (cfiCond935) NoFunction
        CFI (cfiCond935) Conditional ??CrossCallReturnLabel_449
        CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond935) CFA_SP SP+0
        CFI (cfiCond935) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond936 Using cfiCommon0
        CFI (cfiCond936) NoFunction
        CFI (cfiCond936) Conditional ??CrossCallReturnLabel_450
        CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond936) CFA_SP SP+0
        CFI (cfiCond936) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond937 Using cfiCommon0
        CFI (cfiCond937) NoFunction
        CFI (cfiCond937) Conditional ??CrossCallReturnLabel_451
        CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond937) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond937) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond937) CFA_SP SP+0
        CFI (cfiCond937) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond938 Using cfiCommon0
        CFI (cfiCond938) NoFunction
        CFI (cfiCond938) Conditional ??CrossCallReturnLabel_452
        CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond938) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond938) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond938) CFA_SP SP+0
        CFI (cfiCond938) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond939 Using cfiCommon0
        CFI (cfiCond939) NoFunction
        CFI (cfiCond939) Conditional ??CrossCallReturnLabel_453
        CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond939) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond939) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond939) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond939) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond939) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond939) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond939) CFA_SP SP+0
        CFI (cfiCond939) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond940 Using cfiCommon0
        CFI (cfiCond940) NoFunction
        CFI (cfiCond940) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond940) CFA_SP SP+0
        CFI (cfiCond940) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker941 Using cfiCommon1
        CFI (cfiPicker941) NoFunction
        CFI (cfiPicker941) Picker
        INC     DPTR
        CFI EndBlock cfiCond932
        CFI EndBlock cfiCond933
        CFI EndBlock cfiCond934
        CFI EndBlock cfiCond935
        CFI EndBlock cfiCond936
        CFI EndBlock cfiCond937
        CFI EndBlock cfiCond938
        CFI EndBlock cfiCond939
        CFI EndBlock cfiCond940
        CFI EndBlock cfiPicker941
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine199_0:
        CFI Block cfiCond942 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_445
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond943 Using cfiCommon0
        CFI (cfiCond943) NoFunction
        CFI (cfiCond943) Conditional ??CrossCallReturnLabel_446
        CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond943) CFA_SP SP+0
        CFI (cfiCond943) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond944 Using cfiCommon0
        CFI (cfiCond944) NoFunction
        CFI (cfiCond944) Conditional ??CrossCallReturnLabel_447
        CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond944) CFA_SP SP+0
        CFI (cfiCond944) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond945 Using cfiCommon0
        CFI (cfiCond945) NoFunction
        CFI (cfiCond945) Conditional ??CrossCallReturnLabel_448
        CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond945) CFA_SP SP+0
        CFI (cfiCond945) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond946 Using cfiCommon0
        CFI (cfiCond946) NoFunction
        CFI (cfiCond946) Conditional ??CrossCallReturnLabel_449
        CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond946) CFA_SP SP+0
        CFI (cfiCond946) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond947 Using cfiCommon0
        CFI (cfiCond947) NoFunction
        CFI (cfiCond947) Conditional ??CrossCallReturnLabel_450
        CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond947) CFA_SP SP+0
        CFI (cfiCond947) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond948 Using cfiCommon0
        CFI (cfiCond948) NoFunction
        CFI (cfiCond948) Conditional ??CrossCallReturnLabel_451
        CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond948) CFA_SP SP+0
        CFI (cfiCond948) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond949 Using cfiCommon0
        CFI (cfiCond949) NoFunction
        CFI (cfiCond949) Conditional ??CrossCallReturnLabel_452
        CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond949) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond949) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond949) CFA_SP SP+0
        CFI (cfiCond949) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond950 Using cfiCommon0
        CFI (cfiCond950) NoFunction
        CFI (cfiCond950) Conditional ??CrossCallReturnLabel_453
        CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond950) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond950) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond950) CFA_SP SP+0
        CFI (cfiCond950) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond951 Using cfiCommon0
        CFI (cfiCond951) NoFunction
        CFI (cfiCond951) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond951) CFA_SP SP+0
        CFI (cfiCond951) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker952 Using cfiCommon1
        CFI (cfiPicker952) NoFunction
        CFI (cfiPicker952) Picker
        INC     DPTR
        CFI EndBlock cfiCond942
        CFI EndBlock cfiCond943
        CFI EndBlock cfiCond944
        CFI EndBlock cfiCond945
        CFI EndBlock cfiCond946
        CFI EndBlock cfiCond947
        CFI EndBlock cfiCond948
        CFI EndBlock cfiCond949
        CFI EndBlock cfiCond950
        CFI EndBlock cfiCond951
        CFI EndBlock cfiPicker952
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine200_0:
        CFI Block cfiCond953 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_430
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond954 Using cfiCommon0
        CFI (cfiCond954) NoFunction
        CFI (cfiCond954) Conditional ??CrossCallReturnLabel_431
        CFI (cfiCond954) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond954) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond954) CFA_SP SP+-5
        CFI Block cfiCond955 Using cfiCommon0
        CFI (cfiCond955) NoFunction
        CFI (cfiCond955) Conditional ??CrossCallReturnLabel_432
        CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond955) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond955) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond955) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond955) CFA_SP SP+0
        CFI (cfiCond955) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond956 Using cfiCommon0
        CFI (cfiCond956) NoFunction
        CFI (cfiCond956) Conditional ??CrossCallReturnLabel_433
        CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond956) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond956) CFA_SP SP+0
        CFI (cfiCond956) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond957 Using cfiCommon0
        CFI (cfiCond957) NoFunction
        CFI (cfiCond957) Conditional ??CrossCallReturnLabel_434
        CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond957) CFA_SP SP+0
        CFI (cfiCond957) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond958 Using cfiCommon0
        CFI (cfiCond958) NoFunction
        CFI (cfiCond958) Conditional ??CrossCallReturnLabel_435
        CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond958) CFA_SP SP+0
        CFI (cfiCond958) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond959 Using cfiCommon0
        CFI (cfiCond959) NoFunction
        CFI (cfiCond959) Conditional ??CrossCallReturnLabel_436
        CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond959) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond959) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond959) CFA_SP SP+0
        CFI (cfiCond959) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond960 Using cfiCommon0
        CFI (cfiCond960) NoFunction
        CFI (cfiCond960) Conditional ??CrossCallReturnLabel_437
        CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond960) CFA_SP SP+0
        CFI (cfiCond960) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond961 Using cfiCommon0
        CFI (cfiCond961) NoFunction
        CFI (cfiCond961) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond961) CFA_SP SP+0
        CFI (cfiCond961) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond962 Using cfiCommon0
        CFI (cfiCond962) NoFunction
        CFI (cfiCond962) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond962) CFA_SP SP+0
        CFI (cfiCond962) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond963 Using cfiCommon0
        CFI (cfiCond963) NoFunction
        CFI (cfiCond963) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond963) CFA_SP SP+0
        CFI (cfiCond963) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond964 Using cfiCommon0
        CFI (cfiCond964) NoFunction
        CFI (cfiCond964) Conditional ??CrossCallReturnLabel_441
        CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond964) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond964) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond964) CFA_SP SP+0
        CFI (cfiCond964) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond965 Using cfiCommon0
        CFI (cfiCond965) NoFunction
        CFI (cfiCond965) Conditional ??CrossCallReturnLabel_442
        CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond965) CFA_SP SP+0
        CFI (cfiCond965) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond966 Using cfiCommon0
        CFI (cfiCond966) NoFunction
        CFI (cfiCond966) Conditional ??CrossCallReturnLabel_443
        CFI (cfiCond966) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond966) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond966) CFA_SP SP+-5
        CFI (cfiCond966) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond967 Using cfiCommon0
        CFI (cfiCond967) NoFunction
        CFI (cfiCond967) Conditional ??CrossCallReturnLabel_444
        CFI (cfiCond967) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond967) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond967) CFA_SP SP+-5
        CFI (cfiCond967) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond968 Using cfiCommon0
        CFI (cfiCond968) NoFunction
        CFI (cfiCond968) Conditional ??CrossCallReturnLabel_445
        CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond968) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond968) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond968) CFA_SP SP+0
        CFI (cfiCond968) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond969 Using cfiCommon0
        CFI (cfiCond969) NoFunction
        CFI (cfiCond969) Conditional ??CrossCallReturnLabel_446
        CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond969) CFA_SP SP+0
        CFI (cfiCond969) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond970 Using cfiCommon0
        CFI (cfiCond970) NoFunction
        CFI (cfiCond970) Conditional ??CrossCallReturnLabel_447
        CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond970) CFA_SP SP+0
        CFI (cfiCond970) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond971 Using cfiCommon0
        CFI (cfiCond971) NoFunction
        CFI (cfiCond971) Conditional ??CrossCallReturnLabel_448
        CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond971) CFA_SP SP+0
        CFI (cfiCond971) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond972 Using cfiCommon0
        CFI (cfiCond972) NoFunction
        CFI (cfiCond972) Conditional ??CrossCallReturnLabel_449
        CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond972) CFA_SP SP+0
        CFI (cfiCond972) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond973 Using cfiCommon0
        CFI (cfiCond973) NoFunction
        CFI (cfiCond973) Conditional ??CrossCallReturnLabel_450
        CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond973) CFA_SP SP+0
        CFI (cfiCond973) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond974 Using cfiCommon0
        CFI (cfiCond974) NoFunction
        CFI (cfiCond974) Conditional ??CrossCallReturnLabel_451
        CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond974) CFA_SP SP+0
        CFI (cfiCond974) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond975 Using cfiCommon0
        CFI (cfiCond975) NoFunction
        CFI (cfiCond975) Conditional ??CrossCallReturnLabel_452
        CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond975) CFA_SP SP+0
        CFI (cfiCond975) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond976 Using cfiCommon0
        CFI (cfiCond976) NoFunction
        CFI (cfiCond976) Conditional ??CrossCallReturnLabel_453
        CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond976) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond976) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond976) CFA_SP SP+0
        CFI (cfiCond976) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond977 Using cfiCommon0
        CFI (cfiCond977) NoFunction
        CFI (cfiCond977) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond977) CFA_SP SP+0
        CFI (cfiCond977) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker978 Using cfiCommon1
        CFI (cfiPicker978) NoFunction
        CFI (cfiPicker978) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond953
        CFI EndBlock cfiCond954
        CFI EndBlock cfiCond955
        CFI EndBlock cfiCond956
        CFI EndBlock cfiCond957
        CFI EndBlock cfiCond958
        CFI EndBlock cfiCond959
        CFI EndBlock cfiCond960
        CFI EndBlock cfiCond961
        CFI EndBlock cfiCond962
        CFI EndBlock cfiCond963
        CFI EndBlock cfiCond964
        CFI EndBlock cfiCond965
        CFI EndBlock cfiCond966
        CFI EndBlock cfiCond967
        CFI EndBlock cfiCond968
        CFI EndBlock cfiCond969
        CFI EndBlock cfiCond970
        CFI EndBlock cfiCond971
        CFI EndBlock cfiCond972
        CFI EndBlock cfiCond973
        CFI EndBlock cfiCond974
        CFI EndBlock cfiCond975
        CFI EndBlock cfiCond976
        CFI EndBlock cfiCond977
        CFI EndBlock cfiPicker978

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
        CFI Block cfiCond979 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_118
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond980 Using cfiCommon0
        CFI (cfiCond980) NoFunction
        CFI (cfiCond980) Conditional ??CrossCallReturnLabel_119
        CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond980) CFA_SP SP+0
        CFI (cfiCond980) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker981 Using cfiCommon1
        CFI (cfiPicker981) NoFunction
        CFI (cfiPicker981) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R6
        RET
        CFI EndBlock cfiCond979
        CFI EndBlock cfiCond980
        CFI EndBlock cfiPicker981

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
        CFI Block cfiCond982 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_75
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond983 Using cfiCommon0
        CFI (cfiCond983) NoFunction
        CFI (cfiCond983) Conditional ??CrossCallReturnLabel_76
        CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond983) CFA_SP SP+0
        CFI (cfiCond983) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker984 Using cfiCommon1
        CFI (cfiPicker984) NoFunction
        CFI (cfiPicker984) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_632:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond982
        CFI EndBlock cfiCond983
        CFI EndBlock cfiPicker984

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond985 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_455
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond986 Using cfiCommon0
        CFI (cfiCond986) NoFunction
        CFI (cfiCond986) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond986) CFA_SP SP+0
        CFI (cfiCond986) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker987 Using cfiCommon1
        CFI (cfiPicker987) NoFunction
        CFI (cfiPicker987) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??update_offset?relay
        CFI EndBlock cfiCond985
        CFI EndBlock cfiCond986
        CFI EndBlock cfiPicker987
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine201_0:
        CFI Block cfiCond988 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_503
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond989 Using cfiCommon0
        CFI (cfiCond989) NoFunction
        CFI (cfiCond989) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond989) CFA_SP SP+0
        CFI (cfiCond989) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond990 Using cfiCommon0
        CFI (cfiCond990) NoFunction
        CFI (cfiCond990) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond990) CFA_SP SP+0
        CFI (cfiCond990) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond991 Using cfiCommon0
        CFI (cfiCond991) NoFunction
        CFI (cfiCond991) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond991) CFA_SP SP+0
        CFI (cfiCond991) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker992 Using cfiCommon1
        CFI (cfiPicker992) NoFunction
        CFI (cfiPicker992) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond988
        CFI EndBlock cfiCond989
        CFI EndBlock cfiCond990
        CFI EndBlock cfiCond991
        CFI EndBlock cfiPicker992
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine202_0:
        CFI Block cfiCond993 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_497
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond994 Using cfiCommon0
        CFI (cfiCond994) NoFunction
        CFI (cfiCond994) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond994) CFA_SP SP+0
        CFI (cfiCond994) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond995 Using cfiCommon0
        CFI (cfiCond995) NoFunction
        CFI (cfiCond995) Conditional ??CrossCallReturnLabel_499
        CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond995) CFA_SP SP+0
        CFI (cfiCond995) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond996 Using cfiCommon0
        CFI (cfiCond996) NoFunction
        CFI (cfiCond996) Conditional ??CrossCallReturnLabel_500
        CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond996) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond996) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond996) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond996) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond996) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond996) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond996) CFA_SP SP+0
        CFI (cfiCond996) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond997 Using cfiCommon0
        CFI (cfiCond997) NoFunction
        CFI (cfiCond997) Conditional ??CrossCallReturnLabel_501
        CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond997) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond997) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond997) CFA_SP SP+0
        CFI (cfiCond997) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond998 Using cfiCommon0
        CFI (cfiCond998) NoFunction
        CFI (cfiCond998) Conditional ??CrossCallReturnLabel_502
        CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond998) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond998) CFA_SP SP+0
        CFI (cfiCond998) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond999 Using cfiCommon0
        CFI (cfiCond999) NoFunction
        CFI (cfiCond999) Conditional ??CrossCallReturnLabel_503
        CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond999) CFA_SP SP+0
        CFI (cfiCond999) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1000 Using cfiCommon0
        CFI (cfiCond1000) NoFunction
        CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1000) CFA_SP SP+0
        CFI (cfiCond1000) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1001 Using cfiCommon0
        CFI (cfiCond1001) NoFunction
        CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1001) CFA_SP SP+0
        CFI (cfiCond1001) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1002 Using cfiCommon0
        CFI (cfiCond1002) NoFunction
        CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1002) CFA_SP SP+0
        CFI (cfiCond1002) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1003 Using cfiCommon1
        CFI (cfiPicker1003) NoFunction
        CFI (cfiPicker1003) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond993
        CFI EndBlock cfiCond994
        CFI EndBlock cfiCond995
        CFI EndBlock cfiCond996
        CFI EndBlock cfiCond997
        CFI EndBlock cfiCond998
        CFI EndBlock cfiCond999
        CFI EndBlock cfiCond1000
        CFI EndBlock cfiCond1001
        CFI EndBlock cfiCond1002
        CFI EndBlock cfiPicker1003
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine203_0:
        CFI Block cfiCond1004 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_489
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1005 Using cfiCommon0
        CFI (cfiCond1005) NoFunction
        CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_490
        CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1005) CFA_SP SP+0
        CFI (cfiCond1005) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1006 Using cfiCommon0
        CFI (cfiCond1006) NoFunction
        CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_491
        CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1006) CFA_SP SP+0
        CFI (cfiCond1006) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1007 Using cfiCommon0
        CFI (cfiCond1007) NoFunction
        CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_457
        CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1007) CFA_SP SP+0
        CFI (cfiCond1007) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1008 Using cfiCommon0
        CFI (cfiCond1008) NoFunction
        CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_492
        CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1008) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1008) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1008) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1008) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1008) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1008) CFA_SP SP+0
        CFI (cfiCond1008) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1009 Using cfiCommon0
        CFI (cfiCond1009) NoFunction
        CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_493
        CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1009) CFA_SP SP+0
        CFI (cfiCond1009) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1010 Using cfiCommon0
        CFI (cfiCond1010) NoFunction
        CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_494
        CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1010) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1010) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1010) CFA_SP SP+0
        CFI (cfiCond1010) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1011 Using cfiCommon0
        CFI (cfiCond1011) NoFunction
        CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_495
        CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1011) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1011) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1011) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1011) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1011) CFA_SP SP+0
        CFI (cfiCond1011) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1012 Using cfiCommon0
        CFI (cfiCond1012) NoFunction
        CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_496
        CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1012) CFA_SP SP+0
        CFI (cfiCond1012) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1013 Using cfiCommon0
        CFI (cfiCond1013) NoFunction
        CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_497
        CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1013) CFA_SP SP+0
        CFI (cfiCond1013) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1014 Using cfiCommon0
        CFI (cfiCond1014) NoFunction
        CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1014) CFA_SP SP+0
        CFI (cfiCond1014) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1015 Using cfiCommon0
        CFI (cfiCond1015) NoFunction
        CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_499
        CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1015) CFA_SP SP+0
        CFI (cfiCond1015) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1016 Using cfiCommon0
        CFI (cfiCond1016) NoFunction
        CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_500
        CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1016) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1016) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1016) CFA_SP SP+0
        CFI (cfiCond1016) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1017 Using cfiCommon0
        CFI (cfiCond1017) NoFunction
        CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_501
        CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1017) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1017) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1017) CFA_SP SP+0
        CFI (cfiCond1017) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1018 Using cfiCommon0
        CFI (cfiCond1018) NoFunction
        CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_502
        CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1018) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1018) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1018) CFA_SP SP+0
        CFI (cfiCond1018) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1019 Using cfiCommon0
        CFI (cfiCond1019) NoFunction
        CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_503
        CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1019) CFA_SP SP+0
        CFI (cfiCond1019) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1020 Using cfiCommon0
        CFI (cfiCond1020) NoFunction
        CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1020) CFA_SP SP+0
        CFI (cfiCond1020) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1021 Using cfiCommon0
        CFI (cfiCond1021) NoFunction
        CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1021) CFA_SP SP+0
        CFI (cfiCond1021) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1022 Using cfiCommon0
        CFI (cfiCond1022) NoFunction
        CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1022) CFA_SP SP+0
        CFI (cfiCond1022) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1023 Using cfiCommon1
        CFI (cfiPicker1023) NoFunction
        CFI (cfiPicker1023) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1004
        CFI EndBlock cfiCond1005
        CFI EndBlock cfiCond1006
        CFI EndBlock cfiCond1007
        CFI EndBlock cfiCond1008
        CFI EndBlock cfiCond1009
        CFI EndBlock cfiCond1010
        CFI EndBlock cfiCond1011
        CFI EndBlock cfiCond1012
        CFI EndBlock cfiCond1013
        CFI EndBlock cfiCond1014
        CFI EndBlock cfiCond1015
        CFI EndBlock cfiCond1016
        CFI EndBlock cfiCond1017
        CFI EndBlock cfiCond1018
        CFI EndBlock cfiCond1019
        CFI EndBlock cfiCond1020
        CFI EndBlock cfiCond1021
        CFI EndBlock cfiCond1022
        CFI EndBlock cfiPicker1023
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine204_0:
        CFI Block cfiCond1024 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_487
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1025 Using cfiCommon0
        CFI (cfiCond1025) NoFunction
        CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_488
        CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1025) CFA_SP SP+0
        CFI (cfiCond1025) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1026 Using cfiCommon0
        CFI (cfiCond1026) NoFunction
        CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_489
        CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1026) CFA_SP SP+0
        CFI (cfiCond1026) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1027 Using cfiCommon0
        CFI (cfiCond1027) NoFunction
        CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_490
        CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1027) CFA_SP SP+0
        CFI (cfiCond1027) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1028 Using cfiCommon0
        CFI (cfiCond1028) NoFunction
        CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_491
        CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1028) CFA_SP SP+0
        CFI (cfiCond1028) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1029 Using cfiCommon0
        CFI (cfiCond1029) NoFunction
        CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_457
        CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1029) CFA_SP SP+0
        CFI (cfiCond1029) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1030 Using cfiCommon0
        CFI (cfiCond1030) NoFunction
        CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_492
        CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1030) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1030) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1030) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1030) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1030) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1030) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1030) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1030) CFA_SP SP+0
        CFI (cfiCond1030) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1031 Using cfiCommon0
        CFI (cfiCond1031) NoFunction
        CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_493
        CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1031) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1031) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1031) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1031) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1031) CFA_SP SP+0
        CFI (cfiCond1031) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1032 Using cfiCommon0
        CFI (cfiCond1032) NoFunction
        CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_494
        CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1032) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1032) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1032) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1032) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1032) CFA_SP SP+0
        CFI (cfiCond1032) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1033 Using cfiCommon0
        CFI (cfiCond1033) NoFunction
        CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_495
        CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1033) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1033) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1033) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1033) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1033) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1033) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1033) CFA_SP SP+0
        CFI (cfiCond1033) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1034 Using cfiCommon0
        CFI (cfiCond1034) NoFunction
        CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_496
        CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1034) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1034) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1034) CFA_SP SP+0
        CFI (cfiCond1034) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1035 Using cfiCommon0
        CFI (cfiCond1035) NoFunction
        CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_497
        CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1035) CFA_SP SP+0
        CFI (cfiCond1035) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1036 Using cfiCommon0
        CFI (cfiCond1036) NoFunction
        CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1036) CFA_SP SP+0
        CFI (cfiCond1036) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1037 Using cfiCommon0
        CFI (cfiCond1037) NoFunction
        CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_499
        CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1037) CFA_SP SP+0
        CFI (cfiCond1037) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1038 Using cfiCommon0
        CFI (cfiCond1038) NoFunction
        CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_500
        CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1038) CFA_SP SP+0
        CFI (cfiCond1038) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1039 Using cfiCommon0
        CFI (cfiCond1039) NoFunction
        CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_501
        CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1039) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1039) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1039) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1039) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1039) CFA_SP SP+0
        CFI (cfiCond1039) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1040 Using cfiCommon0
        CFI (cfiCond1040) NoFunction
        CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_502
        CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1040) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1040) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1040) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1040) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1040) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1040) CFA_SP SP+0
        CFI (cfiCond1040) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1041 Using cfiCommon0
        CFI (cfiCond1041) NoFunction
        CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_503
        CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1041) CFA_SP SP+0
        CFI (cfiCond1041) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1042 Using cfiCommon0
        CFI (cfiCond1042) NoFunction
        CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1042) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1042) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1042) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1042) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1042) CFA_SP SP+0
        CFI (cfiCond1042) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1043 Using cfiCommon0
        CFI (cfiCond1043) NoFunction
        CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1043) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1043) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1043) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1043) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1043) CFA_SP SP+0
        CFI (cfiCond1043) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1044 Using cfiCommon0
        CFI (cfiCond1044) NoFunction
        CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1044) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1044) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1044) CFA_SP SP+0
        CFI (cfiCond1044) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1045 Using cfiCommon1
        CFI (cfiPicker1045) NoFunction
        CFI (cfiPicker1045) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1024
        CFI EndBlock cfiCond1025
        CFI EndBlock cfiCond1026
        CFI EndBlock cfiCond1027
        CFI EndBlock cfiCond1028
        CFI EndBlock cfiCond1029
        CFI EndBlock cfiCond1030
        CFI EndBlock cfiCond1031
        CFI EndBlock cfiCond1032
        CFI EndBlock cfiCond1033
        CFI EndBlock cfiCond1034
        CFI EndBlock cfiCond1035
        CFI EndBlock cfiCond1036
        CFI EndBlock cfiCond1037
        CFI EndBlock cfiCond1038
        CFI EndBlock cfiCond1039
        CFI EndBlock cfiCond1040
        CFI EndBlock cfiCond1041
        CFI EndBlock cfiCond1042
        CFI EndBlock cfiCond1043
        CFI EndBlock cfiCond1044
        CFI EndBlock cfiPicker1045
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine205_0:
        CFI Block cfiCond1046 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_458
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1047 Using cfiCommon0
        CFI (cfiCond1047) NoFunction
        CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_459
        CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1047) CFA_SP SP+0
        CFI (cfiCond1047) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1048 Using cfiCommon0
        CFI (cfiCond1048) NoFunction
        CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_460
        CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1048) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1048) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1048) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1048) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1048) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1048) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1048) CFA_SP SP+0
        CFI (cfiCond1048) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1049 Using cfiCommon0
        CFI (cfiCond1049) NoFunction
        CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_461
        CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1049) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1049) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1049) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1049) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1049) CFA_SP SP+0
        CFI (cfiCond1049) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1050 Using cfiCommon0
        CFI (cfiCond1050) NoFunction
        CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_462
        CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1050) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1050) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1050) CFA_SP SP+0
        CFI (cfiCond1050) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1051 Using cfiCommon0
        CFI (cfiCond1051) NoFunction
        CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_463
        CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1051) CFA_SP SP+0
        CFI (cfiCond1051) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1052 Using cfiCommon0
        CFI (cfiCond1052) NoFunction
        CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_464
        CFI (cfiCond1052) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1052) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1052) CFA_SP SP+-5
        CFI Block cfiCond1053 Using cfiCommon0
        CFI (cfiCond1053) NoFunction
        CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_465
        CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1053) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1053) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1053) CFA_SP SP+0
        CFI (cfiCond1053) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1054 Using cfiCommon0
        CFI (cfiCond1054) NoFunction
        CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_466
        CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1054) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1054) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1054) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1054) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1054) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1054) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1054) CFA_SP SP+0
        CFI (cfiCond1054) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1055 Using cfiCommon0
        CFI (cfiCond1055) NoFunction
        CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_467
        CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1055) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1055) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1055) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1055) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1055) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1055) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1055) CFA_SP SP+0
        CFI (cfiCond1055) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1056 Using cfiCommon0
        CFI (cfiCond1056) NoFunction
        CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_468
        CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1056) CFA_SP SP+0
        CFI (cfiCond1056) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1057 Using cfiCommon0
        CFI (cfiCond1057) NoFunction
        CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_469
        CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1057) CFA_SP SP+0
        CFI (cfiCond1057) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1058 Using cfiCommon0
        CFI (cfiCond1058) NoFunction
        CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_470
        CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1058) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1058) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1058) CFA_SP SP+0
        CFI (cfiCond1058) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1059 Using cfiCommon0
        CFI (cfiCond1059) NoFunction
        CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_471
        CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1059) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1059) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1059) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1059) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1059) CFA_SP SP+0
        CFI (cfiCond1059) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1060 Using cfiCommon0
        CFI (cfiCond1060) NoFunction
        CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_472
        CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1060) CFA_SP SP+0
        CFI (cfiCond1060) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1061 Using cfiCommon0
        CFI (cfiCond1061) NoFunction
        CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_473
        CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1061) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1061) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1061) CFA_SP SP+0
        CFI (cfiCond1061) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1062 Using cfiCommon0
        CFI (cfiCond1062) NoFunction
        CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_474
        CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1062) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1062) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1062) CFA_SP SP+0
        CFI (cfiCond1062) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1063 Using cfiCommon0
        CFI (cfiCond1063) NoFunction
        CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_475
        CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1063) CFA_SP SP+0
        CFI (cfiCond1063) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1064 Using cfiCommon0
        CFI (cfiCond1064) NoFunction
        CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_476
        CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1064) CFA_SP SP+0
        CFI (cfiCond1064) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1065 Using cfiCommon0
        CFI (cfiCond1065) NoFunction
        CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_477
        CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1065) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1065) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1065) CFA_SP SP+0
        CFI (cfiCond1065) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1066 Using cfiCommon0
        CFI (cfiCond1066) NoFunction
        CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_478
        CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1066) CFA_SP SP+0
        CFI (cfiCond1066) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1067 Using cfiCommon0
        CFI (cfiCond1067) NoFunction
        CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_479
        CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1067) CFA_SP SP+0
        CFI (cfiCond1067) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1068 Using cfiCommon0
        CFI (cfiCond1068) NoFunction
        CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_480
        CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1068) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1068) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1068) CFA_SP SP+0
        CFI (cfiCond1068) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1069 Using cfiCommon0
        CFI (cfiCond1069) NoFunction
        CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_481
        CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1069) CFA_SP SP+0
        CFI (cfiCond1069) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1070 Using cfiCommon0
        CFI (cfiCond1070) NoFunction
        CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_482
        CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1070) CFA_SP SP+0
        CFI (cfiCond1070) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1071 Using cfiCommon0
        CFI (cfiCond1071) NoFunction
        CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_483
        CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1071) CFA_SP SP+0
        CFI (cfiCond1071) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1072 Using cfiCommon0
        CFI (cfiCond1072) NoFunction
        CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_484
        CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1072) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1072) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1072) CFA_SP SP+0
        CFI (cfiCond1072) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1073 Using cfiCommon0
        CFI (cfiCond1073) NoFunction
        CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_485
        CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1073) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1073) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1073) CFA_SP SP+0
        CFI (cfiCond1073) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1074 Using cfiCommon0
        CFI (cfiCond1074) NoFunction
        CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_486
        CFI (cfiCond1074) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1074) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1074) CFA_SP SP+-5
        CFI (cfiCond1074) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1075 Using cfiCommon0
        CFI (cfiCond1075) NoFunction
        CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond1075) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1075) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1075) CFA_SP SP+-5
        CFI Block cfiCond1076 Using cfiCommon0
        CFI (cfiCond1076) NoFunction
        CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_488
        CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1076) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1076) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1076) CFA_SP SP+0
        CFI (cfiCond1076) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1077 Using cfiCommon0
        CFI (cfiCond1077) NoFunction
        CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_489
        CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1077) CFA_SP SP+0
        CFI (cfiCond1077) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1078 Using cfiCommon0
        CFI (cfiCond1078) NoFunction
        CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_490
        CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1078) CFA_SP SP+0
        CFI (cfiCond1078) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1079 Using cfiCommon0
        CFI (cfiCond1079) NoFunction
        CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_491
        CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1079) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1079) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1079) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1079) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1079) CFA_SP SP+0
        CFI (cfiCond1079) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1080 Using cfiCommon0
        CFI (cfiCond1080) NoFunction
        CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_457
        CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1080) CFA_SP SP+0
        CFI (cfiCond1080) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1081 Using cfiCommon0
        CFI (cfiCond1081) NoFunction
        CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_492
        CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1081) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1081) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1081) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1081) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1081) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1081) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1081) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1081) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1081) CFA_SP SP+0
        CFI (cfiCond1081) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1082 Using cfiCommon0
        CFI (cfiCond1082) NoFunction
        CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_493
        CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1082) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1082) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1082) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1082) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1082) CFA_SP SP+0
        CFI (cfiCond1082) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1083 Using cfiCommon0
        CFI (cfiCond1083) NoFunction
        CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_494
        CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1083) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1083) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1083) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1083) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1083) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1083) CFA_SP SP+0
        CFI (cfiCond1083) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1084 Using cfiCommon0
        CFI (cfiCond1084) NoFunction
        CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_495
        CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1084) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1084) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1084) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1084) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1084) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1084) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1084) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1084) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1084) CFA_SP SP+0
        CFI (cfiCond1084) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1085 Using cfiCommon0
        CFI (cfiCond1085) NoFunction
        CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_496
        CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1085) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1085) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1085) CFA_SP SP+0
        CFI (cfiCond1085) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1086 Using cfiCommon0
        CFI (cfiCond1086) NoFunction
        CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_497
        CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1086) CFA_SP SP+0
        CFI (cfiCond1086) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1087 Using cfiCommon0
        CFI (cfiCond1087) NoFunction
        CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1087) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1087) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1087) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1087) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1087) CFA_SP SP+0
        CFI (cfiCond1087) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1088 Using cfiCommon0
        CFI (cfiCond1088) NoFunction
        CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_499
        CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1088) CFA_SP SP+0
        CFI (cfiCond1088) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1089 Using cfiCommon0
        CFI (cfiCond1089) NoFunction
        CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_500
        CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1089) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1089) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1089) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1089) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1089) CFA_SP SP+0
        CFI (cfiCond1089) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1090 Using cfiCommon0
        CFI (cfiCond1090) NoFunction
        CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_501
        CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1090) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1090) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1090) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1090) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1090) CFA_SP SP+0
        CFI (cfiCond1090) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1091 Using cfiCommon0
        CFI (cfiCond1091) NoFunction
        CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_502
        CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1091) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1091) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1091) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1091) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1091) CFA_SP SP+0
        CFI (cfiCond1091) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1092 Using cfiCommon0
        CFI (cfiCond1092) NoFunction
        CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_503
        CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1092) CFA_SP SP+0
        CFI (cfiCond1092) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1093 Using cfiCommon0
        CFI (cfiCond1093) NoFunction
        CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1093) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1093) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1093) CFA_SP SP+0
        CFI (cfiCond1093) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1094 Using cfiCommon0
        CFI (cfiCond1094) NoFunction
        CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1094) CFA_SP SP+0
        CFI (cfiCond1094) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1095 Using cfiCommon0
        CFI (cfiCond1095) NoFunction
        CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1095) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1095) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1095) CFA_SP SP+0
        CFI (cfiCond1095) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1096 Using cfiCommon1
        CFI (cfiPicker1096) NoFunction
        CFI (cfiPicker1096) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_637:
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond1046
        CFI EndBlock cfiCond1047
        CFI EndBlock cfiCond1048
        CFI EndBlock cfiCond1049
        CFI EndBlock cfiCond1050
        CFI EndBlock cfiCond1051
        CFI EndBlock cfiCond1052
        CFI EndBlock cfiCond1053
        CFI EndBlock cfiCond1054
        CFI EndBlock cfiCond1055
        CFI EndBlock cfiCond1056
        CFI EndBlock cfiCond1057
        CFI EndBlock cfiCond1058
        CFI EndBlock cfiCond1059
        CFI EndBlock cfiCond1060
        CFI EndBlock cfiCond1061
        CFI EndBlock cfiCond1062
        CFI EndBlock cfiCond1063
        CFI EndBlock cfiCond1064
        CFI EndBlock cfiCond1065
        CFI EndBlock cfiCond1066
        CFI EndBlock cfiCond1067
        CFI EndBlock cfiCond1068
        CFI EndBlock cfiCond1069
        CFI EndBlock cfiCond1070
        CFI EndBlock cfiCond1071
        CFI EndBlock cfiCond1072
        CFI EndBlock cfiCond1073
        CFI EndBlock cfiCond1074
        CFI EndBlock cfiCond1075
        CFI EndBlock cfiCond1076
        CFI EndBlock cfiCond1077
        CFI EndBlock cfiCond1078
        CFI EndBlock cfiCond1079
        CFI EndBlock cfiCond1080
        CFI EndBlock cfiCond1081
        CFI EndBlock cfiCond1082
        CFI EndBlock cfiCond1083
        CFI EndBlock cfiCond1084
        CFI EndBlock cfiCond1085
        CFI EndBlock cfiCond1086
        CFI EndBlock cfiCond1087
        CFI EndBlock cfiCond1088
        CFI EndBlock cfiCond1089
        CFI EndBlock cfiCond1090
        CFI EndBlock cfiCond1091
        CFI EndBlock cfiCond1092
        CFI EndBlock cfiCond1093
        CFI EndBlock cfiCond1094
        CFI EndBlock cfiCond1095
        CFI EndBlock cfiPicker1096

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
        CFI Block cfiCond1097 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_322
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1098 Using cfiCommon0
        CFI (cfiCond1098) NoFunction
        CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_323
        CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1098) CFA_SP SP+0
        CFI (cfiCond1098) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1099 Using cfiCommon0
        CFI (cfiCond1099) NoFunction
        CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_63
        CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1099) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1099) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1099) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1099) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1099) CFA_SP SP+0
        CFI (cfiCond1099) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1100 Using cfiCommon0
        CFI (cfiCond1100) NoFunction
        CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_64
        CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1100) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1100) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1100) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1100) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1100) CFA_SP SP+0
        CFI (cfiCond1100) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1101 Using cfiCommon1
        CFI (cfiPicker1101) NoFunction
        CFI (cfiPicker1101) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1097
        CFI EndBlock cfiCond1098
        CFI EndBlock cfiCond1099
        CFI EndBlock cfiCond1100
        CFI EndBlock cfiPicker1101
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine206_0:
        CFI Block cfiCond1102 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_636, ??CrossCallReturnLabel_234
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1103 Using cfiCommon0
        CFI (cfiCond1103) NoFunction
        CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_636, ??CrossCallReturnLabel_235
        CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1103) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1103) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1103) CFA_SP SP+0
        CFI (cfiCond1103) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1104 Using cfiCommon0
        CFI (cfiCond1104) NoFunction
        CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_636, ??CrossCallReturnLabel_233
        CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1104) CFA_SP SP+0
        CFI (cfiCond1104) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1105 Using cfiCommon0
        CFI (cfiCond1105) NoFunction
        CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_636, ??CrossCallReturnLabel_232
        CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1105) CFA_SP SP+0
        CFI (cfiCond1105) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1106 Using cfiCommon0
        CFI (cfiCond1106) NoFunction
        CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_77
        CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1106) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1106) CFA_SP SP+0
        CFI (cfiCond1106) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1107 Using cfiCommon0
        CFI (cfiCond1107) NoFunction
        CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_78
        CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1107) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1107) CFA_SP SP+0
        CFI (cfiCond1107) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1108 Using cfiCommon0
        CFI (cfiCond1108) NoFunction
        CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_69
        CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1108) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1108) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1108) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1108) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1108) CFA_SP SP+0
        CFI (cfiCond1108) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1109 Using cfiCommon0
        CFI (cfiCond1109) NoFunction
        CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_70
        CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1109) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1109) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1109) CFA_SP SP+0
        CFI (cfiCond1109) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1110 Using cfiCommon0
        CFI (cfiCond1110) NoFunction
        CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_67
        CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1110) CFA_SP SP+0
        CFI (cfiCond1110) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1111 Using cfiCommon0
        CFI (cfiCond1111) NoFunction
        CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_68
        CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1111) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1111) CFA_SP SP+0
        CFI (cfiCond1111) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1112 Using cfiCommon0
        CFI (cfiCond1112) NoFunction
        CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_75
        CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1112) CFA_SP SP+0
        CFI (cfiCond1112) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1113 Using cfiCommon0
        CFI (cfiCond1113) NoFunction
        CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_76
        CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1113) CFA_SP SP+0
        CFI (cfiCond1113) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1114 Using cfiCommon0
        CFI (cfiCond1114) NoFunction
        CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_455
        CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1114) CFA_SP SP+0
        CFI (cfiCond1114) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1115 Using cfiCommon0
        CFI (cfiCond1115) NoFunction
        CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_456
        CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1115) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1115) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1115) CFA_SP SP+0
        CFI (cfiCond1115) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1116 Using cfiCommon0
        CFI (cfiCond1116) NoFunction
        CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_503
        CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1116) CFA_SP SP+0
        CFI (cfiCond1116) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1117 Using cfiCommon0
        CFI (cfiCond1117) NoFunction
        CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_504
        CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1117) CFA_SP SP+0
        CFI (cfiCond1117) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1118 Using cfiCommon0
        CFI (cfiCond1118) NoFunction
        CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_497
        CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1118) CFA_SP SP+0
        CFI (cfiCond1118) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1119 Using cfiCommon0
        CFI (cfiCond1119) NoFunction
        CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_498
        CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1119) CFA_SP SP+0
        CFI (cfiCond1119) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1120 Using cfiCommon0
        CFI (cfiCond1120) NoFunction
        CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_499
        CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1120) CFA_SP SP+0
        CFI (cfiCond1120) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1121 Using cfiCommon0
        CFI (cfiCond1121) NoFunction
        CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_500
        CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1121) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1121) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1121) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1121) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1121) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1121) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1121) CFA_SP SP+0
        CFI (cfiCond1121) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1122 Using cfiCommon0
        CFI (cfiCond1122) NoFunction
        CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_501
        CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1122) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1122) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1122) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1122) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1122) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1122) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1122) CFA_SP SP+0
        CFI (cfiCond1122) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1123 Using cfiCommon0
        CFI (cfiCond1123) NoFunction
        CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_502
        CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1123) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1123) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1123) CFA_SP SP+0
        CFI (cfiCond1123) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1124 Using cfiCommon0
        CFI (cfiCond1124) NoFunction
        CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_489
        CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1124) CFA_SP SP+0
        CFI (cfiCond1124) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1125 Using cfiCommon0
        CFI (cfiCond1125) NoFunction
        CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_490
        CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1125) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1125) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1125) CFA_SP SP+0
        CFI (cfiCond1125) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1126 Using cfiCommon0
        CFI (cfiCond1126) NoFunction
        CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_491
        CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1126) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1126) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1126) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1126) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1126) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1126) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1126) CFA_SP SP+0
        CFI (cfiCond1126) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1127 Using cfiCommon0
        CFI (cfiCond1127) NoFunction
        CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_457
        CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1127) CFA_SP SP+0
        CFI (cfiCond1127) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1128 Using cfiCommon0
        CFI (cfiCond1128) NoFunction
        CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_492
        CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1128) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1128) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1128) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1128) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1128) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1128) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1128) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1128) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1128) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1128) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1128) CFA_SP SP+0
        CFI (cfiCond1128) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1129 Using cfiCommon0
        CFI (cfiCond1129) NoFunction
        CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_493
        CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1129) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1129) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1129) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1129) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1129) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1129) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1129) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1129) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1129) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1129) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1129) CFA_SP SP+0
        CFI (cfiCond1129) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1130 Using cfiCommon0
        CFI (cfiCond1130) NoFunction
        CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_494
        CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1130) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1130) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1130) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1130) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1130) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1130) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1130) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1130) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1130) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1130) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1130) CFA_SP SP+0
        CFI (cfiCond1130) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1131 Using cfiCommon0
        CFI (cfiCond1131) NoFunction
        CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_495
        CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1131) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1131) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1131) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1131) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1131) CFA_SP SP+0
        CFI (cfiCond1131) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1132 Using cfiCommon0
        CFI (cfiCond1132) NoFunction
        CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_496
        CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1132) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1132) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1132) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1132) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1132) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1132) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1132) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1132) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1132) CFA_SP SP+0
        CFI (cfiCond1132) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1133 Using cfiCommon0
        CFI (cfiCond1133) NoFunction
        CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_487
        CFI (cfiCond1133) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1133) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1133) CFA_SP SP+-5
        CFI Block cfiCond1134 Using cfiCommon0
        CFI (cfiCond1134) NoFunction
        CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_488
        CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1134) CFA_SP SP+0
        CFI (cfiCond1134) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1135 Using cfiCommon0
        CFI (cfiCond1135) NoFunction
        CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_458
        CFI (cfiCond1135) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1135) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1135) CFA_SP SP+-5
        CFI Block cfiCond1136 Using cfiCommon0
        CFI (cfiCond1136) NoFunction
        CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_459
        CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1136) CFA_SP SP+0
        CFI (cfiCond1136) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1137 Using cfiCommon0
        CFI (cfiCond1137) NoFunction
        CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_460
        CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1137) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1137) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1137) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1137) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1137) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1137) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1137) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1137) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1137) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1137) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1137) CFA_SP SP+0
        CFI (cfiCond1137) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1138 Using cfiCommon0
        CFI (cfiCond1138) NoFunction
        CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_461
        CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1138) CFA_SP SP+0
        CFI (cfiCond1138) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1139 Using cfiCommon0
        CFI (cfiCond1139) NoFunction
        CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_462
        CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1139) CFA_SP SP+0
        CFI (cfiCond1139) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1140 Using cfiCommon0
        CFI (cfiCond1140) NoFunction
        CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_463
        CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1140) CFA_SP SP+0
        CFI (cfiCond1140) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1141 Using cfiCommon0
        CFI (cfiCond1141) NoFunction
        CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_464
        CFI (cfiCond1141) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1141) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1141) CFA_SP SP+-5
        CFI Block cfiCond1142 Using cfiCommon0
        CFI (cfiCond1142) NoFunction
        CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_465
        CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1142) CFA_SP SP+0
        CFI (cfiCond1142) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1143 Using cfiCommon0
        CFI (cfiCond1143) NoFunction
        CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_466
        CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1143) CFA_SP SP+0
        CFI (cfiCond1143) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1144 Using cfiCommon0
        CFI (cfiCond1144) NoFunction
        CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_467
        CFI (cfiCond1144) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1144) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1144) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1144) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1144) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1144) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1144) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1144) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1144) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1144) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1144) CFA_SP SP+0
        CFI (cfiCond1144) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1145 Using cfiCommon0
        CFI (cfiCond1145) NoFunction
        CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_468
        CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1145) CFA_SP SP+0
        CFI (cfiCond1145) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1146 Using cfiCommon0
        CFI (cfiCond1146) NoFunction
        CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_469
        CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1146) CFA_SP SP+0
        CFI (cfiCond1146) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1147 Using cfiCommon0
        CFI (cfiCond1147) NoFunction
        CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_470
        CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1147) CFA_SP SP+0
        CFI (cfiCond1147) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1148 Using cfiCommon0
        CFI (cfiCond1148) NoFunction
        CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_471
        CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1148) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1148) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1148) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1148) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1148) CFA_SP SP+0
        CFI (cfiCond1148) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1149 Using cfiCommon0
        CFI (cfiCond1149) NoFunction
        CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_472
        CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1149) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1149) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1149) CFA_SP SP+0
        CFI (cfiCond1149) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1150 Using cfiCommon0
        CFI (cfiCond1150) NoFunction
        CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_473
        CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1150) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1150) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1150) CFA_SP SP+0
        CFI (cfiCond1150) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1151 Using cfiCommon0
        CFI (cfiCond1151) NoFunction
        CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_474
        CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1151) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1151) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1151) CFA_SP SP+0
        CFI (cfiCond1151) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1152 Using cfiCommon0
        CFI (cfiCond1152) NoFunction
        CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_475
        CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1152) CFA_SP SP+0
        CFI (cfiCond1152) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1153 Using cfiCommon0
        CFI (cfiCond1153) NoFunction
        CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_476
        CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1153) CFA_SP SP+0
        CFI (cfiCond1153) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1154 Using cfiCommon0
        CFI (cfiCond1154) NoFunction
        CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_477
        CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1154) CFA_SP SP+0
        CFI (cfiCond1154) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1155 Using cfiCommon0
        CFI (cfiCond1155) NoFunction
        CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_478
        CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1155) CFA_SP SP+0
        CFI (cfiCond1155) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1156 Using cfiCommon0
        CFI (cfiCond1156) NoFunction
        CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_479
        CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1156) CFA_SP SP+0
        CFI (cfiCond1156) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1157 Using cfiCommon0
        CFI (cfiCond1157) NoFunction
        CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_480
        CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1157) CFA_SP SP+0
        CFI (cfiCond1157) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1158 Using cfiCommon0
        CFI (cfiCond1158) NoFunction
        CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_481
        CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1158) CFA_SP SP+0
        CFI (cfiCond1158) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1159 Using cfiCommon0
        CFI (cfiCond1159) NoFunction
        CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_482
        CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1159) CFA_SP SP+0
        CFI (cfiCond1159) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1160 Using cfiCommon0
        CFI (cfiCond1160) NoFunction
        CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_483
        CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1160) CFA_SP SP+0
        CFI (cfiCond1160) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1161 Using cfiCommon0
        CFI (cfiCond1161) NoFunction
        CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_484
        CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1161) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1161) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1161) CFA_SP SP+0
        CFI (cfiCond1161) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1162 Using cfiCommon0
        CFI (cfiCond1162) NoFunction
        CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_485
        CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1162) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1162) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1162) CFA_SP SP+0
        CFI (cfiCond1162) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1163 Using cfiCommon0
        CFI (cfiCond1163) NoFunction
        CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_637, ??CrossCallReturnLabel_486
        CFI (cfiCond1163) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1163) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1163) CFA_SP SP+-5
        CFI (cfiCond1163) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1164 Using cfiCommon0
        CFI (cfiCond1164) NoFunction
        CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_626
        CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1164) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1164) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1164) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1164) CFA_SP SP+-2
        CFI (cfiCond1164) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1165 Using cfiCommon0
        CFI (cfiCond1165) NoFunction
        CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_627
        CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1165) CFA_SP SP+-2
        CFI (cfiCond1165) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1166 Using cfiCommon0
        CFI (cfiCond1166) NoFunction
        CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_628
        CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1166) CFA_SP SP+-2
        CFI (cfiCond1166) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1167 Using cfiCommon0
        CFI (cfiCond1167) NoFunction
        CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_629
        CFI (cfiCond1167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1167) CFA_SP SP+-2
        CFI (cfiCond1167) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1168 Using cfiCommon0
        CFI (cfiCond1168) NoFunction
        CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_630
        CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1168) CFA_SP SP+-2
        CFI (cfiCond1168) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1169 Using cfiCommon0
        CFI (cfiCond1169) NoFunction
        CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_618
        CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1169) CFA_SP SP+0
        CFI (cfiCond1169) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1170 Using cfiCommon0
        CFI (cfiCond1170) NoFunction
        CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_619
        CFI (cfiCond1170) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1170) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1170) CFA_SP SP+-7
        CFI Block cfiCond1171 Using cfiCommon0
        CFI (cfiCond1171) NoFunction
        CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_620
        CFI (cfiCond1171) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1171) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1171) CFA_SP SP+-7
        CFI Block cfiCond1172 Using cfiCommon0
        CFI (cfiCond1172) NoFunction
        CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_621
        CFI (cfiCond1172) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1172) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1172) CFA_SP SP+-5
        CFI Block cfiCond1173 Using cfiCommon0
        CFI (cfiCond1173) NoFunction
        CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_622
        CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1173) CFA_SP SP+-2
        CFI (cfiCond1173) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1174 Using cfiCommon0
        CFI (cfiCond1174) NoFunction
        CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_623
        CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1174) CFA_SP SP+-2
        CFI (cfiCond1174) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1175 Using cfiCommon0
        CFI (cfiCond1175) NoFunction
        CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_624
        CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1175) CFA_SP SP+0
        CFI (cfiCond1175) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1176 Using cfiCommon0
        CFI (cfiCond1176) NoFunction
        CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_625
        CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1176) CFA_SP SP+0
        CFI (cfiCond1176) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1177 Using cfiCommon0
        CFI (cfiCond1177) NoFunction
        CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_611
        CFI (cfiCond1177) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1177) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1177) CFA_SP SP+-5
        CFI Block cfiCond1178 Using cfiCommon0
        CFI (cfiCond1178) NoFunction
        CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_612
        CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1178) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1178) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1178) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1178) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1178) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1178) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1178) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1178) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1178) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1178) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1178) CFA_SP SP+-2
        CFI (cfiCond1178) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1179 Using cfiCommon0
        CFI (cfiCond1179) NoFunction
        CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_613
        CFI (cfiCond1179) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1179) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1179) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1179) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1179) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1179) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1179) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1179) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1179) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1179) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1179) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1179) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1179) CFA_SP SP+0
        CFI (cfiCond1179) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1180 Using cfiCommon0
        CFI (cfiCond1180) NoFunction
        CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_614
        CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1180) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1180) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1180) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1180) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1180) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1180) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1180) CFA_SP SP+-2
        CFI (cfiCond1180) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1181 Using cfiCommon0
        CFI (cfiCond1181) NoFunction
        CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_615
        CFI (cfiCond1181) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1181) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1181) CFA_SP SP+-5
        CFI Block cfiCond1182 Using cfiCommon0
        CFI (cfiCond1182) NoFunction
        CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_616
        CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1182) CFA_SP SP+0
        CFI (cfiCond1182) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1183 Using cfiCommon0
        CFI (cfiCond1183) NoFunction
        CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_617
        CFI (cfiCond1183) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1183) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1183) CFA_SP SP+-5
        CFI (cfiCond1183) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1184 Using cfiCommon0
        CFI (cfiCond1184) NoFunction
        CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_322
        CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1184) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1184) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1184) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1184) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1184) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1184) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1184) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1184) CFA_SP SP+0
        CFI (cfiCond1184) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1185 Using cfiCommon0
        CFI (cfiCond1185) NoFunction
        CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_323
        CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1185) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1185) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1185) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1185) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1185) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1185) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1185) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1185) CFA_SP SP+0
        CFI (cfiCond1185) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1186 Using cfiCommon0
        CFI (cfiCond1186) NoFunction
        CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_63
        CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1186) CFA_SP SP+0
        CFI (cfiCond1186) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1187 Using cfiCommon0
        CFI (cfiCond1187) NoFunction
        CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_64
        CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1187) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1187) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1187) CFA_SP SP+0
        CFI (cfiCond1187) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1188 Using cfiCommon1
        CFI (cfiPicker1188) NoFunction
        CFI (cfiPicker1188) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond1102
        CFI EndBlock cfiCond1103
        CFI EndBlock cfiCond1104
        CFI EndBlock cfiCond1105
        CFI EndBlock cfiCond1106
        CFI EndBlock cfiCond1107
        CFI EndBlock cfiCond1108
        CFI EndBlock cfiCond1109
        CFI EndBlock cfiCond1110
        CFI EndBlock cfiCond1111
        CFI EndBlock cfiCond1112
        CFI EndBlock cfiCond1113
        CFI EndBlock cfiCond1114
        CFI EndBlock cfiCond1115
        CFI EndBlock cfiCond1116
        CFI EndBlock cfiCond1117
        CFI EndBlock cfiCond1118
        CFI EndBlock cfiCond1119
        CFI EndBlock cfiCond1120
        CFI EndBlock cfiCond1121
        CFI EndBlock cfiCond1122
        CFI EndBlock cfiCond1123
        CFI EndBlock cfiCond1124
        CFI EndBlock cfiCond1125
        CFI EndBlock cfiCond1126
        CFI EndBlock cfiCond1127
        CFI EndBlock cfiCond1128
        CFI EndBlock cfiCond1129
        CFI EndBlock cfiCond1130
        CFI EndBlock cfiCond1131
        CFI EndBlock cfiCond1132
        CFI EndBlock cfiCond1133
        CFI EndBlock cfiCond1134
        CFI EndBlock cfiCond1135
        CFI EndBlock cfiCond1136
        CFI EndBlock cfiCond1137
        CFI EndBlock cfiCond1138
        CFI EndBlock cfiCond1139
        CFI EndBlock cfiCond1140
        CFI EndBlock cfiCond1141
        CFI EndBlock cfiCond1142
        CFI EndBlock cfiCond1143
        CFI EndBlock cfiCond1144
        CFI EndBlock cfiCond1145
        CFI EndBlock cfiCond1146
        CFI EndBlock cfiCond1147
        CFI EndBlock cfiCond1148
        CFI EndBlock cfiCond1149
        CFI EndBlock cfiCond1150
        CFI EndBlock cfiCond1151
        CFI EndBlock cfiCond1152
        CFI EndBlock cfiCond1153
        CFI EndBlock cfiCond1154
        CFI EndBlock cfiCond1155
        CFI EndBlock cfiCond1156
        CFI EndBlock cfiCond1157
        CFI EndBlock cfiCond1158
        CFI EndBlock cfiCond1159
        CFI EndBlock cfiCond1160
        CFI EndBlock cfiCond1161
        CFI EndBlock cfiCond1162
        CFI EndBlock cfiCond1163
        CFI EndBlock cfiCond1164
        CFI EndBlock cfiCond1165
        CFI EndBlock cfiCond1166
        CFI EndBlock cfiCond1167
        CFI EndBlock cfiCond1168
        CFI EndBlock cfiCond1169
        CFI EndBlock cfiCond1170
        CFI EndBlock cfiCond1171
        CFI EndBlock cfiCond1172
        CFI EndBlock cfiCond1173
        CFI EndBlock cfiCond1174
        CFI EndBlock cfiCond1175
        CFI EndBlock cfiCond1176
        CFI EndBlock cfiCond1177
        CFI EndBlock cfiCond1178
        CFI EndBlock cfiCond1179
        CFI EndBlock cfiCond1180
        CFI EndBlock cfiCond1181
        CFI EndBlock cfiCond1182
        CFI EndBlock cfiCond1183
        CFI EndBlock cfiCond1184
        CFI EndBlock cfiCond1185
        CFI EndBlock cfiCond1186
        CFI EndBlock cfiCond1187
        CFI EndBlock cfiPicker1188
// 2232 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2233 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromArray(cJSON *array, int which)
cJSON_DetachItemFromArray:
        CFI Block cfiBlock1189 Using cfiCommon0
        CFI Function cJSON_DetachItemFromArray
        CODE
// 2234 {
        FUNCALL cJSON_DetachItemFromArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromArray, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2235     if (which < 0)
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_513:
        JNC     ??cJSON_DetachItemFromArray_0
// 2236     {
// 2237         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_DetachItemFromArray_1
// 2238     }
// 2239 
// 2240     return cJSON_DetachItemViaPointer(array, get_array_item(array, (size_t)which));
??cJSON_DetachItemFromArray_0:
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function get_array_item
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL   ??cJSON_DetachItemViaPointer?relay
??cJSON_DetachItemFromArray_1:
        LJMP    ??Subroutine191_0 & 0xFFFF
        CFI EndBlock cfiBlock1189
// 2241 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
        CFI Block cfiCond1190 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_505
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1191 Using cfiCommon0
        CFI (cfiCond1191) NoFunction
        CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_506
        CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1191) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1191) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1191) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1191) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1191) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1191) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1191) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1191) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1191) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1191) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1191) CFA_SP SP+0
        CFI (cfiCond1191) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1192 Using cfiCommon1
        CFI (cfiPicker1192) NoFunction
        CFI (cfiPicker1192) Picker
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        CFI EndBlock cfiCond1190
        CFI EndBlock cfiCond1191
        CFI EndBlock cfiPicker1192
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine207_0:
        CFI Block cfiCond1193 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_512
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1194 Using cfiCommon0
        CFI (cfiCond1194) NoFunction
        CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_513
        CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1194) CFA_SP SP+0
        CFI (cfiCond1194) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1195 Using cfiCommon0
        CFI (cfiCond1195) NoFunction
        CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_514
        CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1195) CFA_SP SP+0
        CFI (cfiCond1195) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1196 Using cfiCommon0
        CFI (cfiCond1196) NoFunction
        CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_515
        CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1196) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1196) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1196) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1196) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1196) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1196) CFA_SP SP+0
        CFI (cfiCond1196) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1197 Using cfiCommon0
        CFI (cfiCond1197) NoFunction
        CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_505
        CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1197) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1197) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1197) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1197) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1197) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1197) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1197) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1197) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1197) CFA_SP SP+0
        CFI (cfiCond1197) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1198 Using cfiCommon0
        CFI (cfiCond1198) NoFunction
        CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_506
        CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1198) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1198) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1198) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1198) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1198) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1198) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1198) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1198) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1198) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1198) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1198) CFA_SP SP+0
        CFI (cfiCond1198) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1199 Using cfiCommon1
        CFI (cfiPicker1199) NoFunction
        CFI (cfiPicker1199) Picker
        CLR     C
        MOV     A,R5
        CFI EndBlock cfiCond1193
        CFI EndBlock cfiCond1194
        CFI EndBlock cfiCond1195
        CFI EndBlock cfiCond1196
        CFI EndBlock cfiCond1197
        CFI EndBlock cfiCond1198
        CFI EndBlock cfiPicker1199
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine208_0:
        CFI Block cfiCond1200 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_507
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1201 Using cfiCommon0
        CFI (cfiCond1201) NoFunction
        CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_508
        CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1201) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1201) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1201) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1201) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1201) CFA_SP SP+0
        CFI (cfiCond1201) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1202 Using cfiCommon0
        CFI (cfiCond1202) NoFunction
        CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_509
        CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1202) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1202) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1202) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1202) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1202) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1202) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1202) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1202) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1202) CFA_SP SP+0
        CFI (cfiCond1202) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1203 Using cfiCommon0
        CFI (cfiCond1203) NoFunction
        CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_510
        CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1203) CFA_SP SP+0
        CFI (cfiCond1203) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1204 Using cfiCommon0
        CFI (cfiCond1204) NoFunction
        CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_511
        CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1204) CFA_SP SP+0
        CFI (cfiCond1204) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1205 Using cfiCommon0
        CFI (cfiCond1205) NoFunction
        CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_512
        CFI (cfiCond1205) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1205) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1205) CFA_SP SP+-5
        CFI Block cfiCond1206 Using cfiCommon0
        CFI (cfiCond1206) NoFunction
        CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_513
        CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1206) CFA_SP SP+0
        CFI (cfiCond1206) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1207 Using cfiCommon0
        CFI (cfiCond1207) NoFunction
        CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_514
        CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1207) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1207) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1207) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1207) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1207) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1207) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1207) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1207) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1207) CFA_SP SP+0
        CFI (cfiCond1207) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1208 Using cfiCommon0
        CFI (cfiCond1208) NoFunction
        CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_515
        CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1208) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1208) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1208) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1208) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1208) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1208) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1208) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1208) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1208) CFA_SP SP+0
        CFI (cfiCond1208) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1209 Using cfiCommon0
        CFI (cfiCond1209) NoFunction
        CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_505
        CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1209) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1209) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1209) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1209) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1209) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1209) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1209) CFA_SP SP+0
        CFI (cfiCond1209) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1210 Using cfiCommon0
        CFI (cfiCond1210) NoFunction
        CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_506
        CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1210) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1210) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1210) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1210) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1210) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1210) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1210) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1210) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1210) CFA_SP SP+0
        CFI (cfiCond1210) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1211 Using cfiCommon1
        CFI (cfiPicker1211) NoFunction
        CFI (cfiPicker1211) Picker
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond1200
        CFI EndBlock cfiCond1201
        CFI EndBlock cfiCond1202
        CFI EndBlock cfiCond1203
        CFI EndBlock cfiCond1204
        CFI EndBlock cfiCond1205
        CFI EndBlock cfiCond1206
        CFI EndBlock cfiCond1207
        CFI EndBlock cfiCond1208
        CFI EndBlock cfiCond1209
        CFI EndBlock cfiCond1210
        CFI EndBlock cfiPicker1211
// 2242 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2243 CJSON_PUBLIC(void) cJSON_DeleteItemFromArray(cJSON *array, int which)
cJSON_DeleteItemFromArray:
        CFI Block cfiBlock1212 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromArray
        CODE
// 2244 {
        FUNCALL cJSON_DeleteItemFromArray, cJSON_DetachItemFromArray
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromArray, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2245     cJSON_Delete(cJSON_DetachItemFromArray(array, which));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromArray
        LCALL   ??cJSON_DetachItemFromArray?relay
        CFI EndBlock cfiBlock1212
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 2246 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiBlock1213 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        LCALL   ??cJSON_Delete?relay
        SJMP    ??Subroutine209_0
        CFI EndBlock cfiBlock1213
// 2247 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2248 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObject(cJSON *object, const char *string)
cJSON_DetachItemFromObject:
        CFI Block cfiBlock1214 Using cfiCommon0
        CFI Function cJSON_DetachItemFromObject
        CODE
// 2249 {
        FUNCALL cJSON_DetachItemFromObject, cJSON_GetObjectItem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromObject, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2250     cJSON *to_detach = cJSON_GetObjectItem(object, string);
// 2251 
// 2252     return cJSON_DetachItemViaPointer(object, to_detach);
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function cJSON_GetObjectItem
        LCALL   ??cJSON_GetObjectItem?relay
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock1214
// 2253 }
// 2254 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2255 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObjectCaseSensitive(cJSON *object, const char *string)
cJSON_DetachItemFromObjectCaseSensitive:
        CFI Block cfiBlock1215 Using cfiCommon0
        CFI Function cJSON_DetachItemFromObjectCaseSensitive
        CODE
// 2256 {
        FUNCALL cJSON_DetachItemFromObjectCaseSensitive, cJSON_GetObjectItemCaseSensitive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromObjectCaseSensitive, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2257     cJSON *to_detach = cJSON_GetObjectItemCaseSensitive(object, string);
// 2258 
// 2259     return cJSON_DetachItemViaPointer(object, to_detach);
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function cJSON_GetObjectItemCaseSensitive
        LCALL   ??cJSON_GetObjectItemCaseSensitive?relay
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock1215
// 2260 }
// 2261 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2262 CJSON_PUBLIC(void) cJSON_DeleteItemFromObject(cJSON *object, const char *string)
cJSON_DeleteItemFromObject:
        CFI Block cfiBlock1216 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromObject
        CODE
// 2263 {
        FUNCALL cJSON_DeleteItemFromObject, cJSON_DetachItemFromObject
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromObject, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2264     cJSON_Delete(cJSON_DetachItemFromObject(object, string));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromObject
        LCALL   ??cJSON_DetachItemFromObject?relay
        SJMP    ?Subroutine8
        CFI EndBlock cfiBlock1216
// 2265 }
// 2266 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2267 CJSON_PUBLIC(void) cJSON_DeleteItemFromObjectCaseSensitive(cJSON *object, const char *string)
cJSON_DeleteItemFromObjectCaseSensitive:
        CFI Block cfiBlock1217 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromObjectCaseSensitive
        CODE
// 2268 {
        FUNCALL cJSON_DeleteItemFromObjectCaseSensitive, cJSON_DetachItemFromObjectCaseSensitive
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromObjectCaseSensitive, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2269     cJSON_Delete(cJSON_DetachItemFromObjectCaseSensitive(object, string));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromObjectCaseSensitive
        LCALL   ??cJSON_DetachItemFromObjectCaseSensitive?relay
        SJMP    ?Subroutine8
        CFI EndBlock cfiBlock1217
// 2270 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1218 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_271:
        LCALL   ?CALL_IND
        CFI EndBlock cfiBlock1218
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine209_0:
        CFI Block cfiBlock1219 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock1219
// 2271 
// 2272 /* Replace array/object items with new ones. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2273 CJSON_PUBLIC(cJSON_bool) cJSON_InsertItemInArray(cJSON *array, int which, cJSON *newitem)
cJSON_InsertItemInArray:
        CFI Block cfiBlock1220 Using cfiCommon0
        CFI Function cJSON_InsertItemInArray
        CODE
// 2274 {
        FUNCALL cJSON_InsertItemInArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_InsertItemInArray, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
// 2275     cJSON *after_inserted = NULL;
// 2276 
// 2277     if (which < 0)
??CrossCallReturnLabel_52:
        JNC     ??cJSON_InsertItemInArray_0
// 2278     {
// 2279         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_InsertItemInArray_1
// 2280     }
// 2281 
// 2282     after_inserted = get_array_item(array, (size_t)which);
??cJSON_InsertItemInArray_0:
        ; Setup parameters for call to function get_array_item
        LCALL   ??get_array_item?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
// 2283     if (after_inserted == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     ??cJSON_InsertItemInArray_2
// 2284     {
// 2285         return add_item_to_array(array, newitem);
        ; Setup parameters for call to function add_item_to_array
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
        SJMP    ??cJSON_InsertItemInArray_3
// 2286     }
// 2287 
// 2288     newitem->next = after_inserted;
??cJSON_InsertItemInArray_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2289     newitem->prev = after_inserted->prev;
??CrossCallReturnLabel_439:
        MOV     A,R0
        ADD     A,#0x2
        INC     R2
        INC     R2
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_541:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine105 & 0xFFFF
// 2290     after_inserted->prev = newitem;
??CrossCallReturnLabel_168:
        LCALL   ??Subroutine211_0 & 0xFFFF
// 2291     if (after_inserted == array->child)
??CrossCallReturnLabel_518:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_416:
        MOV     A,R0
        XRL     A,R2
        JNZ     ??cJSON_InsertItemInArray_4
        MOV     A,R1
        XRL     A,R3
??cJSON_InsertItemInArray_4:
        JNZ     ??cJSON_InsertItemInArray_5
// 2292     {
// 2293         array->child = newitem;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_266
// 2294     }
// 2295     else
// 2296     {
// 2297         newitem->prev->next = newitem;
??cJSON_InsertItemInArray_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine164_0 & 0xFFFF
// 2298     }
??CrossCallReturnLabel_266:
        LCALL   ??Subroutine211_0 & 0xFFFF
// 2299     return true;
??CrossCallReturnLabel_519:
        MOV     R2,#0x1
??cJSON_InsertItemInArray_1:
        MOV     R3,#0x0
??cJSON_InsertItemInArray_3:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock1220
// 2300 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
        CFI Block cfiCond1221 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_166
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1222 Using cfiCommon0
        CFI (cfiCond1222) NoFunction
        CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond1222) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1222) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1222) CFA_SP SP+-5
        CFI Block cfiCond1223 Using cfiCommon0
        CFI (cfiCond1223) NoFunction
        CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1223) CFA_SP SP+0
        CFI (cfiCond1223) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1224 Using cfiCommon0
        CFI (cfiCond1224) NoFunction
        CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1224) CFA_SP SP+0
        CFI (cfiCond1224) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1225 Using cfiCommon0
        CFI (cfiCond1225) NoFunction
        CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond1225) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1225) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1225) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1225) CFA_SP SP+0
        CFI (cfiCond1225) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1226 Using cfiCommon1
        CFI (cfiPicker1226) NoFunction
        CFI (cfiPicker1226) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
        CFI EndBlock cfiCond1221
        CFI EndBlock cfiCond1222
        CFI EndBlock cfiCond1223
        CFI EndBlock cfiCond1224
        CFI EndBlock cfiCond1225
        CFI EndBlock cfiPicker1226

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
        CFI Block cfiCond1227 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_521
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1228 Using cfiCommon0
        CFI (cfiCond1228) NoFunction
        CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_522
        CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1228) CFA_SP SP+0
        CFI (cfiCond1228) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1229 Using cfiCommon1
        CFI (cfiPicker1229) NoFunction
        CFI (cfiPicker1229) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        CFI EndBlock cfiCond1227
        CFI EndBlock cfiCond1228
        CFI EndBlock cfiPicker1229
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine210_0:
        CFI Block cfiCond1230 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_520
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1231 Using cfiCommon0
        CFI (cfiCond1231) NoFunction
        CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_521
        CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1231) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1231) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1231) CFA_SP SP+0
        CFI (cfiCond1231) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1232 Using cfiCommon0
        CFI (cfiCond1232) NoFunction
        CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_522
        CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1232) CFA_SP SP+0
        CFI (cfiCond1232) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1233 Using cfiCommon1
        CFI (cfiPicker1233) NoFunction
        CFI (cfiPicker1233) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1230
        CFI EndBlock cfiCond1231
        CFI EndBlock cfiCond1232
        CFI EndBlock cfiPicker1233
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine211_0:
        CFI Block cfiCond1234 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_516
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1235 Using cfiCommon0
        CFI (cfiCond1235) NoFunction
        CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_517
        CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1235) CFA_SP SP+0
        CFI (cfiCond1235) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1236 Using cfiCommon0
        CFI (cfiCond1236) NoFunction
        CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_518
        CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1236) CFA_SP SP+0
        CFI (cfiCond1236) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1237 Using cfiCommon0
        CFI (cfiCond1237) NoFunction
        CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_519
        CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1237) CFA_SP SP+0
        CFI (cfiCond1237) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1238 Using cfiCommon0
        CFI (cfiCond1238) NoFunction
        CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_520
        CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1238) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1238) CFA_SP SP+0
        CFI (cfiCond1238) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1239 Using cfiCommon0
        CFI (cfiCond1239) NoFunction
        CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_521
        CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1239) CFA_SP SP+0
        CFI (cfiCond1239) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1240 Using cfiCommon0
        CFI (cfiCond1240) NoFunction
        CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_522
        CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1240) CFA_SP SP+0
        CFI (cfiCond1240) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1241 Using cfiCommon1
        CFI (cfiPicker1241) NoFunction
        CFI (cfiPicker1241) Picker
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1234
        CFI EndBlock cfiCond1235
        CFI EndBlock cfiCond1236
        CFI EndBlock cfiCond1237
        CFI EndBlock cfiCond1238
        CFI EndBlock cfiCond1239
        CFI EndBlock cfiCond1240
        CFI EndBlock cfiPicker1241
// 2301 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2302 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemViaPointer(cJSON * const parent, cJSON * const item, cJSON * replacement)
cJSON_ReplaceItemViaPointer:
        CFI Block cfiBlock1242 Using cfiCommon0
        CFI Function cJSON_ReplaceItemViaPointer
        CODE
// 2303 {
        FUNCALL cJSON_ReplaceItemViaPointer, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
// 2304     if ((parent == NULL) || (replacement == NULL) || (item == NULL))
??CrossCallReturnLabel_68:
        ORL     A,R7
        JZ      ??cJSON_ReplaceItemViaPointer_0
        MOV     A,R0
        ORL     A,R1
        JZ      ??cJSON_ReplaceItemViaPointer_0
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_ReplaceItemViaPointer_1
// 2305     {
// 2306         return false;
??cJSON_ReplaceItemViaPointer_0:
        MOV     R2,#0x0
        LJMP    ??cJSON_ReplaceItemViaPointer_2 & 0xFFFF
// 2307     }
// 2308 
// 2309     if (replacement == item)
??cJSON_ReplaceItemViaPointer_1:
        MOV     A,R2
        XRL     A,R0
        JNZ     ??cJSON_ReplaceItemViaPointer_3
        MOV     A,R3
        XRL     A,R1
??cJSON_ReplaceItemViaPointer_3:
        JNZ     $+5
        LJMP    ??cJSON_ReplaceItemViaPointer_4 & 0xFFFF
// 2310     {
// 2311         return true;
// 2312     }
// 2313 
// 2314     replacement->next = item->next;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_542:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine104 & 0xFFFF
// 2315     replacement->prev = item->prev;
??CrossCallReturnLabel_163:
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_527:
        LCALL   ?Subroutine97 & 0xFFFF
// 2316 
// 2317     if (replacement->next != NULL)
??CrossCallReturnLabel_522:
        MOV     A,R4
        ORL     A,R5
        JZ      ??CrossCallReturnLabel_448
// 2318     {
// 2319         replacement->next->prev = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine78 & 0xFFFF
// 2320     }
??CrossCallReturnLabel_120:
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2321     if (parent->child == item)
??CrossCallReturnLabel_448:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_546:
        MOV     A,R2
        XRL     A,R4
        JNZ     ??cJSON_ReplaceItemViaPointer_5
        MOV     A,R3
        XRL     A,R5
??cJSON_ReplaceItemViaPointer_5:
        JNZ     ??cJSON_ReplaceItemViaPointer_6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_528:
        MOV     A,R4
        XRL     A,?V0 + 0
        JNZ     ??cJSON_ReplaceItemViaPointer_7
        MOV     A,R5
        XRL     A,?V0 + 1
??cJSON_ReplaceItemViaPointer_7:
        JNZ     ??CrossCallReturnLabel_449
// 2322     {
// 2323         if (parent->child->prev == parent->child)
// 2324         {
// 2325             replacement->prev = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2326         }
// 2327         parent->child = replacement;
??CrossCallReturnLabel_449:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_121
// 2328     }
// 2329     else
// 2330     {   /*
// 2331          * To find the last item in array quickly, we use prev in array.
// 2332          * We can't modify the last item's next pointer where this item was the parent's child
// 2333          */
// 2334         if (replacement->prev != NULL)
??cJSON_ReplaceItemViaPointer_6:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_545:
        MOV     A,R4
        ORL     A,R5
        JZ      ??CrossCallReturnLabel_440
// 2335         {
// 2336             replacement->prev->next = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2337         }
// 2338         if (replacement->next == NULL)
??CrossCallReturnLabel_440:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_543:
        MOV     A,R4
        ORL     A,R5
        JNZ     ??CrossCallReturnLabel_450
// 2339         {
// 2340             parent->child->prev = replacement;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine78 & 0xFFFF
// 2341         }
// 2342     }
??CrossCallReturnLabel_121:
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2343 
// 2344     item->next = NULL;
??CrossCallReturnLabel_450:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine104 & 0xFFFF
// 2345     item->prev = NULL;
??CrossCallReturnLabel_164:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2346     cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??cJSON_Delete?relay
// 2347 
// 2348     return true;
??cJSON_ReplaceItemViaPointer_4:
        MOV     R2,#0x1
??cJSON_ReplaceItemViaPointer_2:
        MOV     R3,#0x0
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1242
// 2349 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
        CFI Block cfiCond1243 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_120
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1244 Using cfiCommon0
        CFI (cfiCond1244) NoFunction
        CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_121
        CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1244) CFA_SP SP+0
        CFI (cfiCond1244) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1245 Using cfiCommon1
        CFI (cfiPicker1245) NoFunction
        CFI (cfiPicker1245) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        RET
        CFI EndBlock cfiCond1243
        CFI EndBlock cfiCond1244
        CFI EndBlock cfiPicker1245

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
        CFI Block cfiCond1246 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_529
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1247 Using cfiCommon0
        CFI (cfiCond1247) NoFunction
        CFI (cfiCond1247) Conditional ??CrossCallReturnLabel_530
        CFI (cfiCond1247) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1247) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1247) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1247) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1247) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1247) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1247) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1247) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1247) CFA_SP SP+0
        CFI (cfiCond1247) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1248 Using cfiCommon0
        CFI (cfiCond1248) NoFunction
        CFI (cfiCond1248) Conditional ??CrossCallReturnLabel_531
        CFI (cfiCond1248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1248) CFA_SP SP+0
        CFI (cfiCond1248) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1249 Using cfiCommon0
        CFI (cfiCond1249) NoFunction
        CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_532
        CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1249) CFA_SP SP+0
        CFI (cfiCond1249) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1250 Using cfiCommon0
        CFI (cfiCond1250) NoFunction
        CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_533
        CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1250) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1250) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1250) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1250) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1250) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1250) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1250) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1250) CFA_SP SP+0
        CFI (cfiCond1250) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1251 Using cfiCommon1
        CFI (cfiPicker1251) NoFunction
        CFI (cfiPicker1251) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond1246
        CFI EndBlock cfiCond1247
        CFI EndBlock cfiCond1248
        CFI EndBlock cfiCond1249
        CFI EndBlock cfiCond1250
        CFI EndBlock cfiPicker1251
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine212_0:
        CFI Block cfiCond1252 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_523
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1253 Using cfiCommon0
        CFI (cfiCond1253) NoFunction
        CFI (cfiCond1253) Conditional ??CrossCallReturnLabel_524
        CFI (cfiCond1253) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1253) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1253) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1253) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1253) CFA_SP SP+0
        CFI (cfiCond1253) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1254 Using cfiCommon0
        CFI (cfiCond1254) NoFunction
        CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_525
        CFI (cfiCond1254) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1254) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1254) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1254) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1254) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1254) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1254) CFA_SP SP+0
        CFI (cfiCond1254) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1255 Using cfiCommon0
        CFI (cfiCond1255) NoFunction
        CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_526
        CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1255) CFA_SP SP+0
        CFI (cfiCond1255) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1256 Using cfiCommon0
        CFI (cfiCond1256) NoFunction
        CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_527
        CFI (cfiCond1256) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1256) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1256) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1256) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1256) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1256) CFA_SP SP+0
        CFI (cfiCond1256) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1257 Using cfiCommon0
        CFI (cfiCond1257) NoFunction
        CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_528
        CFI (cfiCond1257) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1257) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1257) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1257) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1257) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1257) CFA_SP SP+0
        CFI (cfiCond1257) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1258 Using cfiCommon0
        CFI (cfiCond1258) NoFunction
        CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_529
        CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1258) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1258) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1258) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1258) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1258) CFA_SP SP+0
        CFI (cfiCond1258) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1259 Using cfiCommon0
        CFI (cfiCond1259) NoFunction
        CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_530
        CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1259) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1259) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1259) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1259) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1259) CFA_SP SP+0
        CFI (cfiCond1259) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1260 Using cfiCommon0
        CFI (cfiCond1260) NoFunction
        CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_531
        CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1260) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1260) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1260) CFA_SP SP+0
        CFI (cfiCond1260) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1261 Using cfiCommon0
        CFI (cfiCond1261) NoFunction
        CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_532
        CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1261) CFA_SP SP+0
        CFI (cfiCond1261) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1262 Using cfiCommon0
        CFI (cfiCond1262) NoFunction
        CFI (cfiCond1262) Conditional ??CrossCallReturnLabel_533
        CFI (cfiCond1262) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1262) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1262) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1262) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1262) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1262) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1262) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1262) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1262) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1262) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1262) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1262) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1262) CFA_SP SP+0
        CFI (cfiCond1262) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1263 Using cfiCommon1
        CFI (cfiPicker1263) NoFunction
        CFI (cfiPicker1263) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_540:
        RET
        CFI EndBlock cfiCond1252
        CFI EndBlock cfiCond1253
        CFI EndBlock cfiCond1254
        CFI EndBlock cfiCond1255
        CFI EndBlock cfiCond1256
        CFI EndBlock cfiCond1257
        CFI EndBlock cfiCond1258
        CFI EndBlock cfiCond1259
        CFI EndBlock cfiCond1260
        CFI EndBlock cfiCond1261
        CFI EndBlock cfiCond1262
        CFI EndBlock cfiPicker1263

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
        CFI Block cfiCond1264 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_335
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1265 Using cfiCommon0
        CFI (cfiCond1265) NoFunction
        CFI (cfiCond1265) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_336
        CFI (cfiCond1265) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1265) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1265) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1265) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1265) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1265) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1265) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1265) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1265) CFA_SP SP+0
        CFI (cfiCond1265) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1266 Using cfiCommon0
        CFI (cfiCond1266) NoFunction
        CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_337
        CFI (cfiCond1266) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1266) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1266) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1266) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1266) CFA_SP SP+0
        CFI (cfiCond1266) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1267 Using cfiCommon0
        CFI (cfiCond1267) NoFunction
        CFI (cfiCond1267) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_529
        CFI (cfiCond1267) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1267) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1267) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1267) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1267) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1267) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1267) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1267) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1267) CFA_SP SP+0
        CFI (cfiCond1267) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1268 Using cfiCommon0
        CFI (cfiCond1268) NoFunction
        CFI (cfiCond1268) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_530
        CFI (cfiCond1268) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1268) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1268) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1268) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1268) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1268) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1268) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1268) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1268) CFA_SP SP+0
        CFI (cfiCond1268) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1269 Using cfiCommon0
        CFI (cfiCond1269) NoFunction
        CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_531
        CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1269) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1269) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1269) CFA_SP SP+0
        CFI (cfiCond1269) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1270 Using cfiCommon0
        CFI (cfiCond1270) NoFunction
        CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_532
        CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1270) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1270) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1270) CFA_SP SP+0
        CFI (cfiCond1270) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1271 Using cfiCommon0
        CFI (cfiCond1271) NoFunction
        CFI (cfiCond1271) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_533
        CFI (cfiCond1271) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1271) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1271) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1271) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1271) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1271) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1271) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1271) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1271) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1271) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1271) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1271) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1271) CFA_SP SP+0
        CFI (cfiCond1271) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1272 Using cfiCommon0
        CFI (cfiCond1272) NoFunction
        CFI (cfiCond1272) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_523
        CFI (cfiCond1272) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1272) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1272) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1272) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1272) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1272) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1272) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1272) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1272) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1272) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1272) CFA_SP SP+0
        CFI (cfiCond1272) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1273 Using cfiCommon0
        CFI (cfiCond1273) NoFunction
        CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_524
        CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1273) CFA_SP SP+0
        CFI (cfiCond1273) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1274 Using cfiCommon0
        CFI (cfiCond1274) NoFunction
        CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_525
        CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1274) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1274) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1274) CFA_SP SP+0
        CFI (cfiCond1274) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1275 Using cfiCommon0
        CFI (cfiCond1275) NoFunction
        CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_526
        CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1275) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1275) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1275) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1275) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1275) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1275) CFA_SP SP+0
        CFI (cfiCond1275) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1276 Using cfiCommon0
        CFI (cfiCond1276) NoFunction
        CFI (cfiCond1276) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_527
        CFI (cfiCond1276) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1276) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1276) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1276) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1276) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1276) CFA_SP SP+0
        CFI (cfiCond1276) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1277 Using cfiCommon0
        CFI (cfiCond1277) NoFunction
        CFI (cfiCond1277) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_528
        CFI (cfiCond1277) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1277) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1277) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1277) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1277) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1277) CFA_SP SP+0
        CFI (cfiCond1277) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1278 Using cfiCommon0
        CFI (cfiCond1278) NoFunction
        CFI (cfiCond1278) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_52
        CFI (cfiCond1278) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1278) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1278) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1278) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1278) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1278) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1278) CFA_SP SP+0
        CFI (cfiCond1278) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1279 Using cfiCommon0
        CFI (cfiCond1279) NoFunction
        CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_53
        CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1279) CFA_SP SP+0
        CFI (cfiCond1279) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1280 Using cfiCommon0
        CFI (cfiCond1280) NoFunction
        CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_73
        CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1280) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1280) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1280) CFA_SP SP+0
        CFI (cfiCond1280) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1281 Using cfiCommon0
        CFI (cfiCond1281) NoFunction
        CFI (cfiCond1281) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_74
        CFI (cfiCond1281) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1281) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1281) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1281) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1281) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1281) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1281) CFA_SP SP+0
        CFI (cfiCond1281) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1282 Using cfiCommon0
        CFI (cfiCond1282) NoFunction
        CFI (cfiCond1282) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_65
        CFI (cfiCond1282) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1282) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1282) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1282) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1282) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1282) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1282) CFA_SP SP+0
        CFI (cfiCond1282) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1283 Using cfiCommon0
        CFI (cfiCond1283) NoFunction
        CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_66
        CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1283) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1283) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1283) CFA_SP SP+0
        CFI (cfiCond1283) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1284 Using cfiCommon0
        CFI (cfiCond1284) NoFunction
        CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_95
        CFI (cfiCond1284) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1284) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1284) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1284) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1284) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1284) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1284) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1284) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1284) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1284) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1284) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1284) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1284) CFA_SP SP+0
        CFI (cfiCond1284) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1285 Using cfiCommon0
        CFI (cfiCond1285) NoFunction
        CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_96
        CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1285) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1285) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1285) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1285) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1285) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1285) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1285) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1285) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1285) CFA_SP SP+0
        CFI (cfiCond1285) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1286 Using cfiCommon0
        CFI (cfiCond1286) NoFunction
        CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_535, ??CrossCallReturnLabel_56
        CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1286) CFA_SP SP+0
        CFI (cfiCond1286) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1287 Using cfiCommon0
        CFI (cfiCond1287) NoFunction
        CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_535, ??CrossCallReturnLabel_57
        CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1287) CFA_SP SP+0
        CFI (cfiCond1287) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1288 Using cfiCommon1
        CFI (cfiPicker1288) NoFunction
        CFI (cfiPicker1288) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond1264
        CFI EndBlock cfiCond1265
        CFI EndBlock cfiCond1266
        CFI EndBlock cfiCond1267
        CFI EndBlock cfiCond1268
        CFI EndBlock cfiCond1269
        CFI EndBlock cfiCond1270
        CFI EndBlock cfiCond1271
        CFI EndBlock cfiCond1272
        CFI EndBlock cfiCond1273
        CFI EndBlock cfiCond1274
        CFI EndBlock cfiCond1275
        CFI EndBlock cfiCond1276
        CFI EndBlock cfiCond1277
        CFI EndBlock cfiCond1278
        CFI EndBlock cfiCond1279
        CFI EndBlock cfiCond1280
        CFI EndBlock cfiCond1281
        CFI EndBlock cfiCond1282
        CFI EndBlock cfiCond1283
        CFI EndBlock cfiCond1284
        CFI EndBlock cfiCond1285
        CFI EndBlock cfiCond1286
        CFI EndBlock cfiCond1287
        CFI EndBlock cfiPicker1288

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
        CFI Block cfiCond1289 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_546
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1290 Using cfiCommon0
        CFI (cfiCond1290) NoFunction
        CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_547
        CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1290) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1290) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1290) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1290) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1290) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1290) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1290) CFA_SP SP+0
        CFI (cfiCond1290) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1291 Using cfiCommon1
        CFI (cfiPicker1291) NoFunction
        CFI (cfiPicker1291) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1289
        CFI EndBlock cfiCond1290
        CFI EndBlock cfiPicker1291
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine213_0:
        CFI Block cfiCond1292 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_545
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1293 Using cfiCommon0
        CFI (cfiCond1293) NoFunction
        CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_546
        CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1293) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1293) CFA_SP SP+0
        CFI (cfiCond1293) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1294 Using cfiCommon0
        CFI (cfiCond1294) NoFunction
        CFI (cfiCond1294) Conditional ??CrossCallReturnLabel_547
        CFI (cfiCond1294) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1294) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1294) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1294) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1294) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1294) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1294) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1294) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1294) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1294) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1294) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1294) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1294) CFA_SP SP+0
        CFI (cfiCond1294) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1295 Using cfiCommon1
        CFI (cfiPicker1295) NoFunction
        CFI (cfiPicker1295) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1292
        CFI EndBlock cfiCond1293
        CFI EndBlock cfiCond1294
        CFI EndBlock cfiPicker1295
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine214_0:
        CFI Block cfiCond1296 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_541
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1297 Using cfiCommon0
        CFI (cfiCond1297) NoFunction
        CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_542
        CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1297) CFA_SP SP+0
        CFI (cfiCond1297) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1298 Using cfiCommon0
        CFI (cfiCond1298) NoFunction
        CFI (cfiCond1298) Conditional ??CrossCallReturnLabel_543
        CFI (cfiCond1298) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1298) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1298) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1298) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1298) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1298) CFA_SP SP+0
        CFI (cfiCond1298) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1299 Using cfiCommon0
        CFI (cfiCond1299) NoFunction
        CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_544
        CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1299) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1299) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1299) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1299) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1299) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1299) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1299) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1299) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1299) CFA_SP SP+0
        CFI (cfiCond1299) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1300 Using cfiCommon0
        CFI (cfiCond1300) NoFunction
        CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_545
        CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1300) CFA_SP SP+0
        CFI (cfiCond1300) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1301 Using cfiCommon0
        CFI (cfiCond1301) NoFunction
        CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_546
        CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1301) CFA_SP SP+0
        CFI (cfiCond1301) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1302 Using cfiCommon0
        CFI (cfiCond1302) NoFunction
        CFI (cfiCond1302) Conditional ??CrossCallReturnLabel_547
        CFI (cfiCond1302) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1302) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1302) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1302) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1302) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1302) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1302) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1302) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1302) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1302) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1302) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1302) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1302) CFA_SP SP+0
        CFI (cfiCond1302) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1303 Using cfiCommon1
        CFI (cfiPicker1303) NoFunction
        CFI (cfiPicker1303) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
        CFI EndBlock cfiCond1296
        CFI EndBlock cfiCond1297
        CFI EndBlock cfiCond1298
        CFI EndBlock cfiCond1299
        CFI EndBlock cfiCond1300
        CFI EndBlock cfiCond1301
        CFI EndBlock cfiCond1302
        CFI EndBlock cfiPicker1303
// 2350 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2351 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInArray(cJSON *array, int which, cJSON *newitem)
cJSON_ReplaceItemInArray:
        CFI Block cfiBlock1304 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInArray
        CODE
// 2352 {
        FUNCALL cJSON_ReplaceItemInArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ReplaceItemInArray, cJSON_ReplaceItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
// 2353     if (which < 0)
??CrossCallReturnLabel_53:
        JNC     ??cJSON_ReplaceItemInArray_0
// 2354     {
// 2355         return false;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_ReplaceItemInArray_1
// 2356     }
// 2357 
// 2358     return cJSON_ReplaceItemViaPointer(array, get_array_item(array, (size_t)which), newitem);
??cJSON_ReplaceItemInArray_0:
        ; Setup parameters for call to function cJSON_ReplaceItemViaPointer
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function get_array_item
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL   ??cJSON_ReplaceItemViaPointer?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
??cJSON_ReplaceItemInArray_1:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1304
// 2359 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
        CFI Block cfiCond1305 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_191
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1306 Using cfiCommon0
        CFI (cfiCond1306) NoFunction
        CFI (cfiCond1306) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond1306) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1306) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1306) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1306) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1306) CFA_SP SP+0
        CFI (cfiCond1306) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1307 Using cfiCommon1
        CFI (cfiPicker1307) NoFunction
        CFI (cfiPicker1307) Picker
        LCALL   ??get_array_item?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1305
        CFI EndBlock cfiCond1306
        CFI EndBlock cfiPicker1307

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
        CFI Block cfiCond1308 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1309 Using cfiCommon0
        CFI (cfiCond1309) NoFunction
        CFI (cfiCond1309) Conditional ??CrossCallReturnLabel_53
        CFI (cfiCond1309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1309) CFA_SP SP+0
        CFI (cfiCond1309) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1310 Using cfiCommon1
        CFI (cfiPicker1310) NoFunction
        CFI (cfiPicker1310) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_534:
        CLR     C
        MOV     A,R5
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond1308
        CFI EndBlock cfiCond1309
        CFI EndBlock cfiPicker1310
// 2360 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2361 static cJSON_bool replace_item_in_object(cJSON *object, const char *string, cJSON *replacement, cJSON_bool case_sensitive)
replace_item_in_object:
        CFI Block cfiBlock1311 Using cfiCommon0
        CFI Function replace_item_in_object
        CODE
// 2362 {
        FUNCALL replace_item_in_object, cJSON_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, cJSON_ReplaceItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_92:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2363     if ((replacement == NULL) || (string == NULL))
??CrossCallReturnLabel_98:
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??replace_item_in_object_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??replace_item_in_object_1
// 2364     {
// 2365         return false;
??replace_item_in_object_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??replace_item_in_object_2 & 0xFFFF
// 2366     }
// 2367 
// 2368     /* replace the name in the replacement */
// 2369     if (!(replacement->type & cJSON_StringIsConst) && (replacement->string != NULL))
??replace_item_in_object_1:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??CrossCallReturnLabel_105
        MOV     A,?V0 + 4
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_640:
        MOV     A,?V0 + 5
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_354:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_480:
        JZ      ??CrossCallReturnLabel_105
// 2370     {
// 2371         cJSON_free(replacement->string);
        ; Setup parameters for call to function cJSON_free
        MOV     A,?V0 + 4
        LCALL   ??Subroutine231_0 & 0xFFFF
// 2372     }
??CrossCallReturnLabel_641:
        MOV     A,?V0 + 5
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_355:
        LCALL   ?Subroutine67 & 0xFFFF
// 2373     replacement->string = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
??CrossCallReturnLabel_105:
        MOV     A,?V0 + 4
        ADD     A,#0x10
        MOV     R0,A
        MOV     A,?V0 + 5
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL   ??Subroutine186_0 & 0xFFFF
// 2374     if (replacement->string == NULL)
??CrossCallReturnLabel_377:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_481:
        JZ      ??replace_item_in_object_0
// 2375     {
// 2376         return false;
// 2377     }
// 2378 
// 2379     replacement->type &= ~cJSON_StringIsConst;
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfd
        MOVX    @DPTR,A
// 2380 
// 2381     return cJSON_ReplaceItemViaPointer(object, get_object_item(object, string, case_sensitive), replacement);
        ; Setup parameters for call to function cJSON_ReplaceItemViaPointer
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_ReplaceItemViaPointer?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
??replace_item_in_object_2:
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock1311
// 2382 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
        CFI Block cfiCond1312 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_104
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1313 Using cfiCommon0
        CFI (cfiCond1313) NoFunction
        CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_105
        CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1313) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1313) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1313) CFA_SP SP+0
        CFI (cfiCond1313) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1314 Using cfiCommon1
        CFI (cfiPicker1314) NoFunction
        CFI (cfiPicker1314) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_552:
        LCALL   ??cJSON_free?relay
        RET
        CFI EndBlock cfiCond1312
        CFI EndBlock cfiCond1313
        CFI EndBlock cfiPicker1314

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
        CFI Block cfiCond1315 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1316 Using cfiCommon0
        CFI (cfiCond1316) NoFunction
        CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_27
        CFI (cfiCond1316) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1316) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1316) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1316) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1316) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1316) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1316) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1316) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1316) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1316) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1316) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1316) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1316) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1316) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1316) CFA_SP SP+0
        CFI (cfiCond1316) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1317 Using cfiCommon0
        CFI (cfiCond1317) NoFunction
        CFI (cfiCond1317) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_102
        CFI (cfiCond1317) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1317) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1317) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1317) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1317) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1317) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1317) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1317) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1317) CFA_SP SP+0
        CFI (cfiCond1317) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1318 Using cfiCommon0
        CFI (cfiCond1318) NoFunction
        CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_103
        CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1318) CFA_SP SP+0
        CFI (cfiCond1318) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1319 Using cfiCommon1
        CFI (cfiPicker1319) NoFunction
        CFI (cfiPicker1319) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1315
        CFI EndBlock cfiCond1316
        CFI EndBlock cfiCond1317
        CFI EndBlock cfiCond1318
        CFI EndBlock cfiPicker1319
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine215_0:
        CFI Block cfiCond1320 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_367
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1321 Using cfiCommon0
        CFI (cfiCond1321) NoFunction
        CFI (cfiCond1321) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_368
        CFI (cfiCond1321) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1321) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1321) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1321) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1321) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1321) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1321) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1321) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1321) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1321) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1321) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1321) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1321) CFA_SP SP+0
        CFI (cfiCond1321) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1322 Using cfiCommon0
        CFI (cfiCond1322) NoFunction
        CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_365
        CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1322) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1322) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1322) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1322) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1322) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1322) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1322) CFA_SP SP+0
        CFI (cfiCond1322) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1323 Using cfiCommon0
        CFI (cfiCond1323) NoFunction
        CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_366
        CFI (cfiCond1323) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1323) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1323) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1323) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1323) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1323) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1323) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1323) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1323) CFA_SP SP+0
        CFI (cfiCond1323) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1324 Using cfiCommon0
        CFI (cfiCond1324) NoFunction
        CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_26
        CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1324) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1324) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1324) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1324) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1324) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1324) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1324) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1324) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1324) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1324) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1324) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1324) CFA_SP SP+0
        CFI (cfiCond1324) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1325 Using cfiCommon0
        CFI (cfiCond1325) NoFunction
        CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_27
        CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1325) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1325) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1325) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1325) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1325) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1325) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1325) CFA_SP SP+0
        CFI (cfiCond1325) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1326 Using cfiCommon0
        CFI (cfiCond1326) NoFunction
        CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_102
        CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1326) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1326) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1326) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1326) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1326) CFA_SP SP+0
        CFI (cfiCond1326) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1327 Using cfiCommon0
        CFI (cfiCond1327) NoFunction
        CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_103
        CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1327) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1327) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1327) CFA_SP SP+0
        CFI (cfiCond1327) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1328 Using cfiCommon1
        CFI (cfiPicker1328) NoFunction
        CFI (cfiPicker1328) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1320
        CFI EndBlock cfiCond1321
        CFI EndBlock cfiCond1322
        CFI EndBlock cfiCond1323
        CFI EndBlock cfiCond1324
        CFI EndBlock cfiCond1325
        CFI EndBlock cfiCond1326
        CFI EndBlock cfiCond1327
        CFI EndBlock cfiPicker1328
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine216_0:
        CFI Block cfiCond1329 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1330 Using cfiCommon0
        CFI (cfiCond1330) NoFunction
        CFI (cfiCond1330) Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_29
        CFI (cfiCond1330) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1330) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1330) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1330) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1330) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1330) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1330) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1330) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1330) CFA_SP SP+0
        CFI (cfiCond1330) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1331 Using cfiCommon0
        CFI (cfiCond1331) NoFunction
        CFI (cfiCond1331) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_23
        CFI (cfiCond1331) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1331) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1331) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1331) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1331) CFA_SP SP+0
        CFI (cfiCond1331) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1332 Using cfiCommon0
        CFI (cfiCond1332) NoFunction
        CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_24
        CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1332) CFA_SP SP+0
        CFI (cfiCond1332) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1333 Using cfiCommon0
        CFI (cfiCond1333) NoFunction
        CFI (cfiCond1333) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_25
        CFI (cfiCond1333) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1333) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1333) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1333) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1333) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1333) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1333) CFA_SP SP+0
        CFI (cfiCond1333) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1334 Using cfiCommon0
        CFI (cfiCond1334) NoFunction
        CFI (cfiCond1334) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_45
        CFI (cfiCond1334) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1334) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1334) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1334) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1334) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1334) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1334) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1334) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1334) CFA_SP SP+0
        CFI (cfiCond1334) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1335 Using cfiCommon0
        CFI (cfiCond1335) NoFunction
        CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_46
        CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1335) CFA_SP SP+0
        CFI (cfiCond1335) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1336 Using cfiCommon0
        CFI (cfiCond1336) NoFunction
        CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_107
        CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1336) CFA_SP SP+0
        CFI (cfiCond1336) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1337 Using cfiCommon0
        CFI (cfiCond1337) NoFunction
        CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_106
        CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1337) CFA_SP SP+0
        CFI (cfiCond1337) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1338 Using cfiCommon0
        CFI (cfiCond1338) NoFunction
        CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_386
        CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1338) CFA_SP SP+0
        CFI (cfiCond1338) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1339 Using cfiCommon0
        CFI (cfiCond1339) NoFunction
        CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_387
        CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1339) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1339) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1339) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1339) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1339) CFA_SP SP+0
        CFI (cfiCond1339) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1340 Using cfiCommon0
        CFI (cfiCond1340) NoFunction
        CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_391
        CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1340) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1340) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1340) CFA_SP SP+0
        CFI (cfiCond1340) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1341 Using cfiCommon0
        CFI (cfiCond1341) NoFunction
        CFI (cfiCond1341) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_392
        CFI (cfiCond1341) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1341) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1341) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1341) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1341) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1341) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1341) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1341) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1341) CFA_SP SP+0
        CFI (cfiCond1341) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1342 Using cfiCommon0
        CFI (cfiCond1342) NoFunction
        CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_393
        CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1342) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1342) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1342) CFA_SP SP+0
        CFI (cfiCond1342) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1343 Using cfiCommon0
        CFI (cfiCond1343) NoFunction
        CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_390
        CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1343) CFA_SP SP+0
        CFI (cfiCond1343) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1344 Using cfiCommon0
        CFI (cfiCond1344) NoFunction
        CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_389
        CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1344) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1344) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1344) CFA_SP SP+0
        CFI (cfiCond1344) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1345 Using cfiCommon0
        CFI (cfiCond1345) NoFunction
        CFI (cfiCond1345) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_388
        CFI (cfiCond1345) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1345) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1345) CFA_SP SP+-5
        CFI Block cfiCond1346 Using cfiCommon0
        CFI (cfiCond1346) NoFunction
        CFI (cfiCond1346) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_417
        CFI (cfiCond1346) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1346) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1346) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1346) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1346) CFA_SP SP+0
        CFI (cfiCond1346) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1347 Using cfiCommon0
        CFI (cfiCond1347) NoFunction
        CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_418
        CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1347) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1347) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1347) CFA_SP SP+0
        CFI (cfiCond1347) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1348 Using cfiCommon0
        CFI (cfiCond1348) NoFunction
        CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_415
        CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1348) CFA_SP SP+0
        CFI (cfiCond1348) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1349 Using cfiCommon0
        CFI (cfiCond1349) NoFunction
        CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_416
        CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1349) CFA_SP SP+0
        CFI (cfiCond1349) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1350 Using cfiCommon0
        CFI (cfiCond1350) NoFunction
        CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_405
        CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1350) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1350) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1350) CFA_SP SP+0
        CFI (cfiCond1350) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1351 Using cfiCommon0
        CFI (cfiCond1351) NoFunction
        CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_406
        CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1351) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1351) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1351) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1351) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1351) CFA_SP SP+-2
        CFI (cfiCond1351) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1352 Using cfiCommon0
        CFI (cfiCond1352) NoFunction
        CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_407
        CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1352) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1352) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1352) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1352) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1352) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1352) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1352) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1352) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1352) CFA_SP SP+0
        CFI (cfiCond1352) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1353 Using cfiCommon0
        CFI (cfiCond1353) NoFunction
        CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_408
        CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1353) CFA_SP SP+0
        CFI (cfiCond1353) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond1354 Using cfiCommon0
        CFI (cfiCond1354) NoFunction
        CFI (cfiCond1354) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_409
        CFI (cfiCond1354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1354) CFA_SP SP+-2
        CFI (cfiCond1354) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1355 Using cfiCommon0
        CFI (cfiCond1355) NoFunction
        CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_410
        CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1355) CFA_SP SP+0
        CFI (cfiCond1355) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1356 Using cfiCommon0
        CFI (cfiCond1356) NoFunction
        CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_411
        CFI (cfiCond1356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1356) CFA_SP SP+0
        CFI (cfiCond1356) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1357 Using cfiCommon0
        CFI (cfiCond1357) NoFunction
        CFI (cfiCond1357) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_412
        CFI (cfiCond1357) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1357) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1357) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1357) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1357) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1357) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1357) CFA_SP SP+0
        CFI (cfiCond1357) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1358 Using cfiCommon0
        CFI (cfiCond1358) NoFunction
        CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_413
        CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1358) CFA_SP SP+0
        CFI (cfiCond1358) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1359 Using cfiCommon0
        CFI (cfiCond1359) NoFunction
        CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_414
        CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1359) CFA_SP SP+0
        CFI (cfiCond1359) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1360 Using cfiCommon0
        CFI (cfiCond1360) NoFunction
        CFI (cfiCond1360) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_104
        CFI (cfiCond1360) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1360) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1360) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1360) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1360) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1360) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1360) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1360) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1360) CFA_SP SP+0
        CFI (cfiCond1360) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1361 Using cfiCommon0
        CFI (cfiCond1361) NoFunction
        CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_105
        CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1361) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1361) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1361) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1361) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1361) CFA_SP SP+0
        CFI (cfiCond1361) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1362 Using cfiCommon0
        CFI (cfiCond1362) NoFunction
        CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_71
        CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1362) CFA_SP SP+0
        CFI (cfiCond1362) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1363 Using cfiCommon0
        CFI (cfiCond1363) NoFunction
        CFI (cfiCond1363) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_72
        CFI (cfiCond1363) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1363) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1363) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1363) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1363) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1363) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1363) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1363) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1363) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1363) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1363) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1363) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1363) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1363) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1363) CFA_SP SP+0
        CFI (cfiCond1363) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1364 Using cfiCommon0
        CFI (cfiCond1364) NoFunction
        CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_108
        CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1364) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1364) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1364) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1364) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1364) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1364) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1364) CFA_SP SP+0
        CFI (cfiCond1364) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1365 Using cfiCommon0
        CFI (cfiCond1365) NoFunction
        CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_109
        CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1365) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1365) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1365) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1365) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1365) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1365) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1365) CFA_SP SP+0
        CFI (cfiCond1365) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1366 Using cfiCommon0
        CFI (cfiCond1366) NoFunction
        CFI (cfiCond1366) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_367
        CFI (cfiCond1366) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1366) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1366) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1366) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1366) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1366) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1366) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1366) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1366) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1366) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1366) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1366) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1366) CFA_SP SP+0
        CFI (cfiCond1366) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1367 Using cfiCommon0
        CFI (cfiCond1367) NoFunction
        CFI (cfiCond1367) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_368
        CFI (cfiCond1367) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1367) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1367) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1367) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1367) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1367) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1367) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1367) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1367) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1367) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1367) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1367) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1367) CFA_SP SP+0
        CFI (cfiCond1367) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1368 Using cfiCommon0
        CFI (cfiCond1368) NoFunction
        CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_365
        CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1368) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1368) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1368) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1368) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1368) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1368) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1368) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1368) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1368) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1368) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1368) CFA_SP SP+0
        CFI (cfiCond1368) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1369 Using cfiCommon0
        CFI (cfiCond1369) NoFunction
        CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_559, ??CrossCallReturnLabel_366
        CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1369) CFA_SP SP+0
        CFI (cfiCond1369) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1370 Using cfiCommon0
        CFI (cfiCond1370) NoFunction
        CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_26
        CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1370) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1370) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1370) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1370) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1370) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1370) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1370) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1370) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1370) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1370) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1370) CFA_SP SP+0
        CFI (cfiCond1370) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1371 Using cfiCommon0
        CFI (cfiCond1371) NoFunction
        CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_27
        CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1371) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1371) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1371) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1371) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1371) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1371) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1371) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1371) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1371) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1371) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1371) CFA_SP SP+0
        CFI (cfiCond1371) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1372 Using cfiCommon0
        CFI (cfiCond1372) NoFunction
        CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_102
        CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1372) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1372) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1372) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1372) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1372) CFA_SP SP+0
        CFI (cfiCond1372) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1373 Using cfiCommon0
        CFI (cfiCond1373) NoFunction
        CFI (cfiCond1373) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_103
        CFI (cfiCond1373) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1373) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1373) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1373) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1373) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1373) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1373) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1373) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1373) CFA_SP SP+0
        CFI (cfiCond1373) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1374 Using cfiCommon1
        CFI (cfiPicker1374) NoFunction
        CFI (cfiPicker1374) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1329
        CFI EndBlock cfiCond1330
        CFI EndBlock cfiCond1331
        CFI EndBlock cfiCond1332
        CFI EndBlock cfiCond1333
        CFI EndBlock cfiCond1334
        CFI EndBlock cfiCond1335
        CFI EndBlock cfiCond1336
        CFI EndBlock cfiCond1337
        CFI EndBlock cfiCond1338
        CFI EndBlock cfiCond1339
        CFI EndBlock cfiCond1340
        CFI EndBlock cfiCond1341
        CFI EndBlock cfiCond1342
        CFI EndBlock cfiCond1343
        CFI EndBlock cfiCond1344
        CFI EndBlock cfiCond1345
        CFI EndBlock cfiCond1346
        CFI EndBlock cfiCond1347
        CFI EndBlock cfiCond1348
        CFI EndBlock cfiCond1349
        CFI EndBlock cfiCond1350
        CFI EndBlock cfiCond1351
        CFI EndBlock cfiCond1352
        CFI EndBlock cfiCond1353
        CFI EndBlock cfiCond1354
        CFI EndBlock cfiCond1355
        CFI EndBlock cfiCond1356
        CFI EndBlock cfiCond1357
        CFI EndBlock cfiCond1358
        CFI EndBlock cfiCond1359
        CFI EndBlock cfiCond1360
        CFI EndBlock cfiCond1361
        CFI EndBlock cfiCond1362
        CFI EndBlock cfiCond1363
        CFI EndBlock cfiCond1364
        CFI EndBlock cfiCond1365
        CFI EndBlock cfiCond1366
        CFI EndBlock cfiCond1367
        CFI EndBlock cfiCond1368
        CFI EndBlock cfiCond1369
        CFI EndBlock cfiCond1370
        CFI EndBlock cfiCond1371
        CFI EndBlock cfiCond1372
        CFI EndBlock cfiCond1373
        CFI EndBlock cfiPicker1374

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
        CFI Block cfiCond1375 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_97
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1376 Using cfiCommon0
        CFI (cfiCond1376) NoFunction
        CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_98
        CFI (cfiCond1376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1376) CFA_SP SP+0
        CFI (cfiCond1376) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1377 Using cfiCommon0
        CFI (cfiCond1377) NoFunction
        CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_99
        CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1377) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1377) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1377) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1377) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1377) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1377) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1377) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1377) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1377) CFA_SP SP+0
        CFI (cfiCond1377) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1378 Using cfiCommon1
        CFI (cfiPicker1378) NoFunction
        CFI (cfiPicker1378) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        RET
        CFI EndBlock cfiCond1375
        CFI EndBlock cfiCond1376
        CFI EndBlock cfiCond1377
        CFI EndBlock cfiPicker1378
// 2383 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2384 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObject(cJSON *object, const char *string, cJSON *newitem)
cJSON_ReplaceItemInObject:
        CFI Block cfiBlock1379 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInObject
        CODE
// 2385 {
        FUNCALL cJSON_ReplaceItemInObject, replace_item_in_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine49 & 0xFFFF
        CFI EndBlock cfiBlock1379
// 2386     return replace_item_in_object(object, string, newitem, false);
??CrossCallReturnLabel_74:
        REQUIRE ?Subroutine13
        ; // Fall through to label ?Subroutine13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiBlock1380 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??replace_item_in_object?relay
        MOV     A,#0x4
        LJMP    ??Subroutine183_0 & 0xFFFF
        CFI EndBlock cfiBlock1380

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
        CFI Block cfiCond1381 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_73
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1382 Using cfiCommon0
        CFI (cfiCond1382) NoFunction
        CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_74
        CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1382) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1382) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1382) CFA_SP SP+0
        CFI (cfiCond1382) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1383 Using cfiCommon1
        CFI (cfiPicker1383) NoFunction
        CFI (cfiPicker1383) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_537:
        ; Setup parameters for call to function add_item_to_object
        ; Setup parameters for call to function replace_item_in_object
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond1381
        CFI EndBlock cfiCond1382
        CFI EndBlock cfiPicker1383
// 2387 }
// 2388 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2389 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObjectCaseSensitive(cJSON *object, const char *string, cJSON *newitem)
cJSON_ReplaceItemInObjectCaseSensitive:
        CFI Block cfiBlock1384 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInObjectCaseSensitive
        CODE
// 2390 {
        FUNCALL cJSON_ReplaceItemInObjectCaseSensitive, replace_item_in_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2391     return replace_item_in_object(object, string, newitem, true);
??CrossCallReturnLabel_66:
        SJMP    ?Subroutine13
        CFI EndBlock cfiBlock1384

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
        CFI Block cfiCond1385 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_65
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1386 Using cfiCommon0
        CFI (cfiCond1386) NoFunction
        CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_66
        CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1386) CFA_SP SP+0
        CFI (cfiCond1386) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1387 Using cfiCommon1
        CFI (cfiPicker1387) NoFunction
        CFI (cfiPicker1387) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_536:
        ; Setup parameters for call to function add_item_to_object
        ; Setup parameters for call to function replace_item_in_object
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        RET
        CFI EndBlock cfiCond1385
        CFI EndBlock cfiCond1386
        CFI EndBlock cfiPicker1387
// 2392 }
// 2393 
// 2394 /* Create basic types: */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2395 CJSON_PUBLIC(cJSON *) cJSON_CreateNull(void)
cJSON_CreateNull:
        CFI Block cfiBlock1388 Using cfiCommon0
        CFI Function cJSON_CreateNull
        CODE
// 2396 {
        FUNCALL cJSON_CreateNull, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2397     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2398     if(item)
??CrossCallReturnLabel_577:
        JZ      ??CrossCallReturnLabel_562
// 2399     {
// 2400         item->type = cJSON_NULL;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x4
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2401     }
// 2402 
// 2403     return item;
??CrossCallReturnLabel_562:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1388
// 2404 }
// 2405 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2406 CJSON_PUBLIC(cJSON *) cJSON_CreateTrue(void)
cJSON_CreateTrue:
        CFI Block cfiBlock1389 Using cfiCommon0
        CFI Function cJSON_CreateTrue
        CODE
// 2407 {
        FUNCALL cJSON_CreateTrue, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2408     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2409     if(item)
??CrossCallReturnLabel_578:
        JZ      ??CrossCallReturnLabel_563
// 2410     {
// 2411         item->type = cJSON_True;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2412     }
// 2413 
// 2414     return item;
??CrossCallReturnLabel_563:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1389
// 2415 }
// 2416 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2417 CJSON_PUBLIC(cJSON *) cJSON_CreateFalse(void)
cJSON_CreateFalse:
        CFI Block cfiBlock1390 Using cfiCommon0
        CFI Function cJSON_CreateFalse
        CODE
// 2418 {
        FUNCALL cJSON_CreateFalse, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2419     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2420     if(item)
??CrossCallReturnLabel_579:
        JZ      ??CrossCallReturnLabel_564
// 2421     {
// 2422         item->type = cJSON_False;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2423     }
// 2424 
// 2425     return item;
??CrossCallReturnLabel_564:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1390
// 2426 }
// 2427 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2428 CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean)
cJSON_CreateBool:
        CFI Block cfiBlock1391 Using cfiCommon0
        CFI Function cJSON_CreateBool
        CODE
// 2429 {
        FUNCALL cJSON_CreateBool, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine119 & 0xFFFF
// 2430     cJSON *item = cJSON_New_Item(&global_hooks);
// 2431     if(item)
??CrossCallReturnLabel_573:
        JZ      ??CrossCallReturnLabel_565
// 2432     {
// 2433         item->type = boolean ? cJSON_True : cJSON_False;
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_CreateBool_0
        MOV     R0,#0x2
        SJMP    ??cJSON_CreateBool_1
??cJSON_CreateBool_0:
        MOV     R0,#0x1
??cJSON_CreateBool_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2434     }
// 2435 
// 2436     return item;
??CrossCallReturnLabel_565:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1391
// 2437 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
        CFI Block cfiCond1392 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_568
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1393 Using cfiCommon0
        CFI (cfiCond1393) NoFunction
        CFI (cfiCond1393) Conditional ??CrossCallReturnLabel_569
        CFI (cfiCond1393) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1393) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1393) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1393) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1393) CFA_SP SP+0
        CFI (cfiCond1393) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1394 Using cfiCommon1
        CFI (cfiPicker1394) NoFunction
        CFI (cfiPicker1394) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x20
        CFI EndBlock cfiCond1392
        CFI EndBlock cfiCond1393
        CFI EndBlock cfiPicker1394
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine217_0:
        CFI Block cfiCond1395 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_560
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1396 Using cfiCommon0
        CFI (cfiCond1396) NoFunction
        CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_561
        CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1396) CFA_SP SP+0
        CFI (cfiCond1396) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1397 Using cfiCommon0
        CFI (cfiCond1397) NoFunction
        CFI (cfiCond1397) Conditional ??CrossCallReturnLabel_562
        CFI (cfiCond1397) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1397) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1397) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1397) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1397) CFA_SP SP+0
        CFI (cfiCond1397) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1398 Using cfiCommon0
        CFI (cfiCond1398) NoFunction
        CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_563
        CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1398) CFA_SP SP+0
        CFI (cfiCond1398) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1399 Using cfiCommon0
        CFI (cfiCond1399) NoFunction
        CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_564
        CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1399) CFA_SP SP+0
        CFI (cfiCond1399) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1400 Using cfiCommon0
        CFI (cfiCond1400) NoFunction
        CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_565
        CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1400) CFA_SP SP+0
        CFI (cfiCond1400) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1401 Using cfiCommon0
        CFI (cfiCond1401) NoFunction
        CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_566
        CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1401) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1401) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1401) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1401) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1401) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1401) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1401) CFA_SP SP+0
        CFI (cfiCond1401) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1402 Using cfiCommon0
        CFI (cfiCond1402) NoFunction
        CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_567
        CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1402) CFA_SP SP+0
        CFI (cfiCond1402) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1403 Using cfiCommon0
        CFI (cfiCond1403) NoFunction
        CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_568
        CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1403) CFA_SP SP+0
        CFI (cfiCond1403) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1404 Using cfiCommon0
        CFI (cfiCond1404) NoFunction
        CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_569
        CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1404) CFA_SP SP+0
        CFI (cfiCond1404) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1405 Using cfiCommon1
        CFI (cfiPicker1405) NoFunction
        CFI (cfiPicker1405) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1395
        CFI EndBlock cfiCond1396
        CFI EndBlock cfiCond1397
        CFI EndBlock cfiCond1398
        CFI EndBlock cfiCond1399
        CFI EndBlock cfiCond1400
        CFI EndBlock cfiCond1401
        CFI EndBlock cfiCond1402
        CFI EndBlock cfiCond1403
        CFI EndBlock cfiCond1404
        CFI EndBlock cfiPicker1405
// 2438 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2439 CJSON_PUBLIC(cJSON *) cJSON_CreateNumber(double num)
cJSON_CreateNumber:
        CFI Block cfiBlock1406 Using cfiCommon0
        CFI Function cJSON_CreateNumber
        CODE
// 2440 {
        FUNCALL cJSON_CreateNumber, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
// 2441     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2442     if(item)
??CrossCallReturnLabel_580:
        JZ      ??cJSON_CreateNumber_0
// 2443     {
// 2444         item->type = cJSON_Number;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x8
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2445         item->valuedouble = num;
??CrossCallReturnLabel_566:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2446 
// 2447         /* use saturation in case of overflow */
// 2448         if (num >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_GE
        JNC     ??cJSON_CreateNumber_1
// 2449         {
// 2450             item->valueint = INT_MAX;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??cJSON_CreateNumber_2
// 2451         }
// 2452         else if (num <= (double)INT_MIN)
??cJSON_CreateNumber_1:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_LT
        JNC     ??cJSON_CreateNumber_3
// 2453         {
// 2454             item->valueint = INT_MIN;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??cJSON_CreateNumber_2
// 2455         }
// 2456         else
// 2457         {
// 2458             item->valueint = (int)num;
??cJSON_CreateNumber_3:
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
??cJSON_CreateNumber_2:
        MOVX    @DPTR,A
// 2459         }
// 2460     }
// 2461 
// 2462     return item;
??cJSON_CreateNumber_0:
        LJMP    ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock1406
// 2463 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
        CFI Block cfiCond1407 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_145
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond1408 Using cfiCommon0
        CFI (cfiCond1408) NoFunction
        CFI (cfiCond1408) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond1408) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1408) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1408) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1408) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1408) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1408) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1408) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1408) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1408) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1408) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1408) CFA_SP SP+0
        CFI (cfiCond1408) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1409 Using cfiCommon0
        CFI (cfiCond1409) NoFunction
        CFI (cfiCond1409) Conditional ??CrossCallReturnLabel_147
        CFI (cfiCond1409) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1409) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1409) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1409) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1409) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1409) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1409) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1409) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1409) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1409) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1409) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1409) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1409) CFA_SP SP+0
        CFI (cfiCond1409) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker1410 Using cfiCommon1
        CFI (cfiPicker1410) NoFunction
        CFI (cfiPicker1410) Picker
        MOV     A,R2
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_648:
        RET
        CFI EndBlock cfiCond1407
        CFI EndBlock cfiCond1408
        CFI EndBlock cfiCond1409
        CFI EndBlock cfiPicker1410
// 2464 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2465 CJSON_PUBLIC(cJSON *) cJSON_CreateString(const char *string)
cJSON_CreateString:
        CFI Block cfiBlock1411 Using cfiCommon0
        CFI Function cJSON_CreateString
        CODE
// 2466 {
        FUNCALL cJSON_CreateString, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateString, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateString, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine118 & 0xFFFF
// 2467     cJSON *item = cJSON_New_Item(&global_hooks);
// 2468     if(item)
??CrossCallReturnLabel_570:
        JZ      ??cJSON_CreateString_0
// 2469     {
// 2470         item->type = cJSON_String;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        LCALL   ?Subroutine87 & 0xFFFF
// 2471         item->valuestring = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
// 2472         if(!item->valuestring)
??CrossCallReturnLabel_148:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_482:
        JNZ     ??cJSON_CreateString_0
// 2473         {
// 2474             cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ?Subroutine110 & 0xFFFF
// 2475             return NULL;
// 2476         }
// 2477     }
??CrossCallReturnLabel_419:
        SJMP    ??cJSON_CreateString_1
// 2478 
// 2479     return item;
??cJSON_CreateString_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateString_1:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock1411
// 2480 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
        CFI Block cfiCond1412 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_570
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1413 Using cfiCommon0
        CFI (cfiCond1413) NoFunction
        CFI (cfiCond1413) Conditional ??CrossCallReturnLabel_571
        CFI (cfiCond1413) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1413) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1413) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1413) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1413) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1413) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1413) CFA_SP SP+0
        CFI (cfiCond1413) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1414 Using cfiCommon1
        CFI (cfiPicker1414) NoFunction
        CFI (cfiPicker1414) Picker
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        CFI EndBlock cfiCond1412
        CFI EndBlock cfiCond1413
        CFI EndBlock cfiPicker1414
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine218_0:
        CFI Block cfiCond1415 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_572
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1416 Using cfiCommon0
        CFI (cfiCond1416) NoFunction
        CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_570
        CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1416) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1416) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1416) CFA_SP SP+0
        CFI (cfiCond1416) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1417 Using cfiCommon0
        CFI (cfiCond1417) NoFunction
        CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_571
        CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1417) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1417) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1417) CFA_SP SP+0
        CFI (cfiCond1417) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1418 Using cfiCommon1
        CFI (cfiPicker1418) NoFunction
        CFI (cfiPicker1418) Picker
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond1415
        CFI EndBlock cfiCond1416
        CFI EndBlock cfiCond1417
        CFI EndBlock cfiPicker1418
// 2481 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2482 CJSON_PUBLIC(cJSON *) cJSON_CreateStringReference(const char *string)
cJSON_CreateStringReference:
        CFI Block cfiBlock1419 Using cfiCommon0
        CFI Function cJSON_CreateStringReference
        CODE
// 2483 {
        FUNCALL cJSON_CreateStringReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine119 & 0xFFFF
// 2484     cJSON *item = cJSON_New_Item(&global_hooks);
// 2485     if (item != NULL)
??CrossCallReturnLabel_574:
        JZ      ??cJSON_CreateStringReference_0
// 2486     {
// 2487         item->type = cJSON_String | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        LCALL   ?Subroutine104 & 0xFFFF
// 2488         item->valuestring = (char*)cast_away_const(string);
// 2489     }
??CrossCallReturnLabel_165:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 2490 
// 2491     return item;
??cJSON_CreateStringReference_0:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1419
// 2492 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
        CFI Block cfiCond1420 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_163
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1421 Using cfiCommon0
        CFI (cfiCond1421) NoFunction
        CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_164
        CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1421) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1421) CFA_SP SP+0
        CFI (cfiCond1421) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1422 Using cfiCommon0
        CFI (cfiCond1422) NoFunction
        CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1422) CFA_SP SP+0
        CFI (cfiCond1422) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1423 Using cfiCommon1
        CFI (cfiPicker1423) NoFunction
        CFI (cfiPicker1423) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1420
        CFI EndBlock cfiCond1421
        CFI EndBlock cfiCond1422
        CFI EndBlock cfiPicker1423
// 2493 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2494 CJSON_PUBLIC(cJSON *) cJSON_CreateObjectReference(const cJSON *child)
cJSON_CreateObjectReference:
        CFI Block cfiBlock1424 Using cfiCommon0
        CFI Function cJSON_CreateObjectReference
        CODE
// 2495 {
        FUNCALL cJSON_CreateObjectReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine119 & 0xFFFF
// 2496     cJSON *item = cJSON_New_Item(&global_hooks);
// 2497     if (item != NULL) {
??CrossCallReturnLabel_575:
        JZ      ??CrossCallReturnLabel_157
// 2498         item->type = cJSON_Object | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ?Subroutine96 & 0xFFFF
// 2499         item->child = (cJSON*)cast_away_const(child);
// 2500     }
// 2501 
// 2502     return item;
??CrossCallReturnLabel_157:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1424
// 2503 }
// 2504 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2505 CJSON_PUBLIC(cJSON *) cJSON_CreateArrayReference(const cJSON *child) {
cJSON_CreateArrayReference:
        CFI Block cfiBlock1425 Using cfiCommon0
        CFI Function cJSON_CreateArrayReference
        CODE
        FUNCALL cJSON_CreateArrayReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine119 & 0xFFFF
// 2506     cJSON *item = cJSON_New_Item(&global_hooks);
// 2507     if (item != NULL) {
??CrossCallReturnLabel_576:
        JZ      ??CrossCallReturnLabel_158
// 2508         item->type = cJSON_Array | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x20
        LCALL   ?Subroutine96 & 0xFFFF
// 2509         item->child = (cJSON*)cast_away_const(child);
// 2510     }
// 2511 
// 2512     return item;
??CrossCallReturnLabel_158:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1425
// 2513 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
        CFI Block cfiCond1426 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_157
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1427 Using cfiCommon0
        CFI (cfiCond1427) NoFunction
        CFI (cfiCond1427) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond1427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1427) CFA_SP SP+0
        CFI (cfiCond1427) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1428 Using cfiCommon1
        CFI (cfiPicker1428) NoFunction
        CFI (cfiPicker1428) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1426
        CFI EndBlock cfiCond1427
        CFI EndBlock cfiPicker1428
// 2514 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2515 CJSON_PUBLIC(cJSON *) cJSON_CreateRaw(const char *raw)
cJSON_CreateRaw:
        CFI Block cfiBlock1429 Using cfiCommon0
        CFI Function cJSON_CreateRaw
        CODE
// 2516 {
        FUNCALL cJSON_CreateRaw, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateRaw, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateRaw, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine118 & 0xFFFF
// 2517     cJSON *item = cJSON_New_Item(&global_hooks);
// 2518     if(item)
??CrossCallReturnLabel_571:
        JZ      ??cJSON_CreateRaw_0
// 2519     {
// 2520         item->type = cJSON_Raw;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x80
        LCALL   ?Subroutine87 & 0xFFFF
// 2521         item->valuestring = (char*)cJSON_strdup((const unsigned char*)raw, &global_hooks);
// 2522         if(!item->valuestring)
??CrossCallReturnLabel_149:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_483:
        JNZ     ??cJSON_CreateRaw_0
// 2523         {
// 2524             cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ?Subroutine110 & 0xFFFF
// 2525             return NULL;
// 2526         }
// 2527     }
??CrossCallReturnLabel_420:
        SJMP    ??cJSON_CreateRaw_1
// 2528 
// 2529     return item;
??cJSON_CreateRaw_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateRaw_1:
        LJMP    ??Subroutine184_0 & 0xFFFF
        CFI EndBlock cfiBlock1429
// 2530 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
        CFI Block cfiCond1430 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_148
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1431 Using cfiCommon0
        CFI (cfiCond1431) NoFunction
        CFI (cfiCond1431) Conditional ??CrossCallReturnLabel_149
        CFI (cfiCond1431) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1431) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1431) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1431) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1431) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1431) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1431) CFA_SP SP+0
        CFI (cfiCond1431) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1432 Using cfiCommon1
        CFI (cfiPicker1432) NoFunction
        CFI (cfiPicker1432) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        RET
        CFI EndBlock cfiCond1430
        CFI EndBlock cfiCond1431
        CFI EndBlock cfiPicker1432

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
        CFI Block cfiCond1433 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_226
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1434 Using cfiCommon0
        CFI (cfiCond1434) NoFunction
        CFI (cfiCond1434) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_148
        CFI (cfiCond1434) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1434) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1434) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1434) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1434) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1434) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1434) CFA_SP SP+0
        CFI (cfiCond1434) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1435 Using cfiCommon0
        CFI (cfiCond1435) NoFunction
        CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_149
        CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1435) CFA_SP SP+0
        CFI (cfiCond1435) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1436 Using cfiCommon1
        CFI (cfiPicker1436) NoFunction
        CFI (cfiPicker1436) Picker
        LCALL   ??cJSON_strdup?relay
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        RET
        CFI EndBlock cfiCond1433
        CFI EndBlock cfiCond1434
        CFI EndBlock cfiCond1435
        CFI EndBlock cfiPicker1436

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
        CFI Block cfiCond1437 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_216
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1438 Using cfiCommon0
        CFI (cfiCond1438) NoFunction
        CFI (cfiCond1438) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_148
        CFI (cfiCond1438) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1438) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1438) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1438) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1438) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1438) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1438) CFA_SP SP+0
        CFI (cfiCond1438) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1439 Using cfiCommon0
        CFI (cfiCond1439) NoFunction
        CFI (cfiCond1439) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_149
        CFI (cfiCond1439) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1439) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1439) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1439) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1439) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1439) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1439) CFA_SP SP+0
        CFI (cfiCond1439) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1440 Using cfiCommon1
        CFI (cfiPicker1440) NoFunction
        CFI (cfiPicker1440) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        ; Setup parameters for call to function cJSON_strdup
        ; Setup parameters for call to function cJSON_strdup
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        RET
        CFI EndBlock cfiCond1437
        CFI EndBlock cfiCond1438
        CFI EndBlock cfiCond1439
        CFI EndBlock cfiPicker1440
// 2531 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2532 CJSON_PUBLIC(cJSON *) cJSON_CreateArray(void)
cJSON_CreateArray:
        CFI Block cfiBlock1441 Using cfiCommon0
        CFI Function cJSON_CreateArray
        CODE
// 2533 {
        FUNCALL cJSON_CreateArray, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2534     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2535     if(item)
??CrossCallReturnLabel_581:
        JZ      ??CrossCallReturnLabel_569
// 2536     {
// 2537         item->type=cJSON_Array;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine101 & 0xFFFF
// 2538     }
// 2539 
// 2540     return item;
??CrossCallReturnLabel_569:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1441
// 2541 }
// 2542 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2543 CJSON_PUBLIC(cJSON *) cJSON_CreateObject(void)
cJSON_CreateObject:
        CFI Block cfiBlock1442 Using cfiCommon0
        CFI Function cJSON_CreateObject
        CODE
// 2544 {
        FUNCALL cJSON_CreateObject, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2545     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2546     if (item)
??CrossCallReturnLabel_582:
        JZ      ??CrossCallReturnLabel_567
// 2547     {
// 2548         item->type = cJSON_Object;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ??Subroutine217_0 & 0xFFFF
// 2549     }
// 2550 
// 2551     return item;
??CrossCallReturnLabel_567:
        LJMP    ??Subroutine162_0 & 0xFFFF
        CFI EndBlock cfiBlock1442
// 2552 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
        CFI Block cfiCond1443 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_573
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1444 Using cfiCommon0
        CFI (cfiCond1444) NoFunction
        CFI (cfiCond1444) Conditional ??CrossCallReturnLabel_574
        CFI (cfiCond1444) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1444) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1444) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1444) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1444) CFA_SP SP+0
        CFI (cfiCond1444) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1445 Using cfiCommon0
        CFI (cfiCond1445) NoFunction
        CFI (cfiCond1445) Conditional ??CrossCallReturnLabel_575
        CFI (cfiCond1445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1445) CFA_SP SP+0
        CFI (cfiCond1445) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1446 Using cfiCommon0
        CFI (cfiCond1446) NoFunction
        CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_576
        CFI (cfiCond1446) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1446) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1446) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1446) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1446) CFA_SP SP+0
        CFI (cfiCond1446) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1447 Using cfiCommon1
        CFI (cfiPicker1447) NoFunction
        CFI (cfiPicker1447) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        CFI EndBlock cfiCond1443
        CFI EndBlock cfiCond1444
        CFI EndBlock cfiCond1445
        CFI EndBlock cfiCond1446
        CFI EndBlock cfiPicker1447
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine219_0:
        CFI Block cfiCond1448 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_577
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1449 Using cfiCommon0
        CFI (cfiCond1449) NoFunction
        CFI (cfiCond1449) Conditional ??CrossCallReturnLabel_578
        CFI (cfiCond1449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1449) CFA_SP SP+0
        CFI (cfiCond1449) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1450 Using cfiCommon0
        CFI (cfiCond1450) NoFunction
        CFI (cfiCond1450) Conditional ??CrossCallReturnLabel_579
        CFI (cfiCond1450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1450) CFA_SP SP+0
        CFI (cfiCond1450) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1451 Using cfiCommon0
        CFI (cfiCond1451) NoFunction
        CFI (cfiCond1451) Conditional ??CrossCallReturnLabel_580
        CFI (cfiCond1451) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1451) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1451) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1451) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1451) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1451) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1451) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1451) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1451) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1451) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1451) CFA_SP SP+0
        CFI (cfiCond1451) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1452 Using cfiCommon0
        CFI (cfiCond1452) NoFunction
        CFI (cfiCond1452) Conditional ??CrossCallReturnLabel_581
        CFI (cfiCond1452) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1452) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1452) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1452) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1452) CFA_SP SP+0
        CFI (cfiCond1452) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1453 Using cfiCommon0
        CFI (cfiCond1453) NoFunction
        CFI (cfiCond1453) Conditional ??CrossCallReturnLabel_582
        CFI (cfiCond1453) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1453) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1453) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1453) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1453) CFA_SP SP+0
        CFI (cfiCond1453) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1454 Using cfiCommon0
        CFI (cfiCond1454) NoFunction
        CFI (cfiCond1454) Conditional ??CrossCallReturnLabel_573
        CFI (cfiCond1454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1454) CFA_SP SP+0
        CFI (cfiCond1454) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1455 Using cfiCommon0
        CFI (cfiCond1455) NoFunction
        CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_574
        CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1455) CFA_SP SP+0
        CFI (cfiCond1455) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1456 Using cfiCommon0
        CFI (cfiCond1456) NoFunction
        CFI (cfiCond1456) Conditional ??CrossCallReturnLabel_575
        CFI (cfiCond1456) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1456) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1456) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1456) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1456) CFA_SP SP+0
        CFI (cfiCond1456) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1457 Using cfiCommon0
        CFI (cfiCond1457) NoFunction
        CFI (cfiCond1457) Conditional ??CrossCallReturnLabel_576
        CFI (cfiCond1457) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1457) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1457) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1457) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1457) CFA_SP SP+0
        CFI (cfiCond1457) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1458 Using cfiCommon1
        CFI (cfiPicker1458) NoFunction
        CFI (cfiPicker1458) Picker
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond1448
        CFI EndBlock cfiCond1449
        CFI EndBlock cfiCond1450
        CFI EndBlock cfiCond1451
        CFI EndBlock cfiCond1452
        CFI EndBlock cfiCond1453
        CFI EndBlock cfiCond1454
        CFI EndBlock cfiCond1455
        CFI EndBlock cfiCond1456
        CFI EndBlock cfiCond1457
        CFI EndBlock cfiPicker1458
// 2553 
// 2554 /* Create Arrays: */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2555 CJSON_PUBLIC(cJSON *) cJSON_CreateIntArray(const int *numbers, int count)
cJSON_CreateIntArray:
        CFI Block cfiBlock1459 Using cfiCommon0
        CFI Function cJSON_CreateIntArray
        CODE
// 2556 {
        FUNCALL cJSON_CreateIntArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 2557     size_t i = 0;
// 2558     cJSON *n = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2559     cJSON *p = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2560     cJSON *a = NULL;
// 2561 
// 2562     if ((count < 0) || (numbers == NULL))
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_514:
        JC      ??cJSON_CreateIntArray_0
        MOV     A,R2
        ORL     A,?V0 + 13
        JNZ     ??cJSON_CreateIntArray_1
// 2563     {
// 2564         return NULL;
??cJSON_CreateIntArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateIntArray_2
// 2565     }
// 2566 
// 2567     a = cJSON_CreateArray();
??cJSON_CreateIntArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine127 & 0xFFFF
// 2568 
// 2569     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_197:
        JZ      ??CrossCallReturnLabel_30
        SJMP    ??CrossCallReturnLabel_583
// 2570     {
// 2571         n = cJSON_CreateNumber(numbers[i]);
// 2572         if (!n)
// 2573         {
// 2574             cJSON_Delete(a);
// 2575             return NULL;
// 2576         }
// 2577         if(!i)
// 2578         {
// 2579             a->child = n;
// 2580         }
// 2581         else
// 2582         {
// 2583             suffix_object(p, n);
??cJSON_CreateIntArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??suffix_object?relay
// 2584         }
// 2585         p = n;
??cJSON_CreateIntArray_4:
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_583:
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_185:
        JNC     ??cJSON_CreateIntArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,?V0 + 1
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 12
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 13
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?L_TO_FLT
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_CreateIntArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateIntArray_0
??cJSON_CreateIntArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateIntArray_3
        LCALL   ?Subroutine107 & 0xFFFF
// 2586     }
??CrossCallReturnLabel_381:
        SJMP    ??cJSON_CreateIntArray_4
??cJSON_CreateIntArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_492:
        JZ      ??CrossCallReturnLabel_30
// 2587 
// 2588     if (a && a->child) {
// 2589         a->child->prev = n;
        LCALL   ?Subroutine27 & 0xFFFF
// 2590     }
// 2591 
// 2592     return a;
??CrossCallReturnLabel_30:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateIntArray_2:
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1459
// 2593 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
        CFI Block cfiCond1460 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_583
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1461 Using cfiCommon0
        CFI (cfiCond1461) NoFunction
        CFI (cfiCond1461) Conditional ??CrossCallReturnLabel_584
        CFI (cfiCond1461) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1461) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1461) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1461) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1461) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1461) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1461) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1461) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1461) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1461) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1461) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1461) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1461) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1461) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1461) CFA_SP SP+0
        CFI (cfiCond1461) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1462 Using cfiCommon1
        CFI (cfiPicker1462) NoFunction
        CFI (cfiPicker1462) Picker
        MOV     ?V0 + 4,?V0 + 2
        MOV     ?V0 + 5,?V0 + 3
        CFI EndBlock cfiCond1460
        CFI EndBlock cfiCond1461
        CFI EndBlock cfiPicker1462
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine220_0:
        CFI Block cfiCond1463 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_585
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1464 Using cfiCommon0
        CFI (cfiCond1464) NoFunction
        CFI (cfiCond1464) Conditional ??CrossCallReturnLabel_586
        CFI (cfiCond1464) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1464) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1464) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1464) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1464) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1464) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1464) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1464) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1464) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1464) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1464) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1464) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1464) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1464) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1464) CFA_SP SP+0
        CFI (cfiCond1464) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1465 Using cfiCommon0
        CFI (cfiCond1465) NoFunction
        CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_583
        CFI (cfiCond1465) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1465) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1465) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1465) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1465) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1465) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1465) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1465) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1465) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1465) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1465) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1465) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1465) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1465) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1465) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1465) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1465) CFA_SP SP+0
        CFI (cfiCond1465) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1466 Using cfiCommon0
        CFI (cfiCond1466) NoFunction
        CFI (cfiCond1466) Conditional ??CrossCallReturnLabel_584
        CFI (cfiCond1466) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1466) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1466) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1466) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1466) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1466) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1466) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1466) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1466) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1466) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1466) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1466) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1466) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1466) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1466) CFA_SP SP+0
        CFI (cfiCond1466) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1467 Using cfiCommon1
        CFI (cfiPicker1467) NoFunction
        CFI (cfiPicker1467) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond1463
        CFI EndBlock cfiCond1464
        CFI EndBlock cfiCond1465
        CFI EndBlock cfiCond1466
        CFI EndBlock cfiPicker1467

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
        CFI Block cfiCond1468 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_54
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 50)
        CFI Block cfiCond1469 Using cfiCommon0
        CFI (cfiCond1469) NoFunction
        CFI (cfiCond1469) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond1469) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1469) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1469) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1469) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1469) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1469) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1469) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1469) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1469) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1469) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1469) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1469) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1469) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1469) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1469) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1469) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1469) CFA_SP SP+0
        CFI (cfiCond1469) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker1470 Using cfiCommon1
        CFI (cfiPicker1470) NoFunction
        CFI (cfiPicker1470) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 9,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 10,A
        MOV     ?V0 + 11,A
        MOV     R0,#?V0 + 8
        RET
        CFI EndBlock cfiCond1468
        CFI EndBlock cfiCond1469
        CFI EndBlock cfiPicker1470
// 2594 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2595 CJSON_PUBLIC(cJSON *) cJSON_CreateFloatArray(const float *numbers, int count)
cJSON_CreateFloatArray:
        CFI Block cfiBlock1471 Using cfiCommon0
        CFI Function cJSON_CreateFloatArray
        CODE
// 2596 {
        FUNCALL cJSON_CreateFloatArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        LCALL   ?Subroutine111 & 0xFFFF
// 2597     size_t i = 0;
// 2598     cJSON *n = NULL;
// 2599     cJSON *p = NULL;
// 2600     cJSON *a = NULL;
// 2601 
// 2602     if ((count < 0) || (numbers == NULL))
??CrossCallReturnLabel_505:
        JC      ??cJSON_CreateFloatArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateFloatArray_1
// 2603     {
// 2604         return NULL;
??cJSON_CreateFloatArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateFloatArray_2
// 2605     }
// 2606 
// 2607     a = cJSON_CreateArray();
??cJSON_CreateFloatArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine127 & 0xFFFF
// 2608 
// 2609     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_198:
        JZ      ??CrossCallReturnLabel_61
        SJMP    ??CrossCallReturnLabel_585
// 2610     {
// 2611         n = cJSON_CreateNumber((double)numbers[i]);
// 2612         if(!n)
// 2613         {
// 2614             cJSON_Delete(a);
// 2615             return NULL;
// 2616         }
// 2617         if(!i)
// 2618         {
// 2619             a->child = n;
// 2620         }
// 2621         else
// 2622         {
// 2623             suffix_object(p, n);
??cJSON_CreateFloatArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??suffix_object?relay
// 2624         }
// 2625         p = n;
??cJSON_CreateFloatArray_4:
        MOV     ?V0 + 2,?V0 + 4
        MOV     ?V0 + 3,?V0 + 5
        LCALL   ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_585:
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_186:
        JNC     ??cJSON_CreateFloatArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x2
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_201:
        JNZ     ??cJSON_CreateFloatArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateFloatArray_0
??cJSON_CreateFloatArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateFloatArray_3
        LCALL   ?Subroutine107 & 0xFFFF
// 2626     }
??CrossCallReturnLabel_382:
        SJMP    ??cJSON_CreateFloatArray_4
??cJSON_CreateFloatArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_493:
        JZ      ??CrossCallReturnLabel_61
// 2627 
// 2628     if (a && a->child) {
// 2629         a->child->prev = n;
        LCALL   ?Subroutine43 & 0xFFFF
// 2630     }
// 2631 
// 2632     return a;
??CrossCallReturnLabel_61:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateFloatArray_2:
        SJMP    ??Subroutine221_0
        CFI EndBlock cfiBlock1471
// 2633 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiBlock1472 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock1472
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine221_0:
        CFI Block cfiBlock1473 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1473
// 2634 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2635 CJSON_PUBLIC(cJSON *) cJSON_CreateDoubleArray(const double *numbers, int count)
cJSON_CreateDoubleArray:
        CFI Block cfiBlock1474 Using cfiCommon0
        CFI Function cJSON_CreateDoubleArray
        CODE
// 2636 {
        FUNCALL cJSON_CreateDoubleArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        LCALL   ?Subroutine111 & 0xFFFF
// 2637     size_t i = 0;
// 2638     cJSON *n = NULL;
// 2639     cJSON *p = NULL;
// 2640     cJSON *a = NULL;
// 2641 
// 2642     if ((count < 0) || (numbers == NULL))
??CrossCallReturnLabel_506:
        JC      ??cJSON_CreateDoubleArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateDoubleArray_1
// 2643     {
// 2644         return NULL;
??cJSON_CreateDoubleArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateDoubleArray_2
// 2645     }
// 2646 
// 2647     a = cJSON_CreateArray();
??cJSON_CreateDoubleArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine127 & 0xFFFF
// 2648 
// 2649     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_199:
        JZ      ??CrossCallReturnLabel_62
        SJMP    ??CrossCallReturnLabel_586
// 2650     {
// 2651         n = cJSON_CreateNumber(numbers[i]);
// 2652         if(!n)
// 2653         {
// 2654             cJSON_Delete(a);
// 2655             return NULL;
// 2656         }
// 2657         if(!i)
// 2658         {
// 2659             a->child = n;
// 2660         }
// 2661         else
// 2662         {
// 2663             suffix_object(p, n);
??cJSON_CreateDoubleArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??suffix_object?relay
// 2664         }
// 2665         p = n;
??cJSON_CreateDoubleArray_4:
        MOV     ?V0 + 2,?V0 + 4
        MOV     ?V0 + 3,?V0 + 5
        LCALL   ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_586:
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_187:
        JNC     ??cJSON_CreateDoubleArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x2
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_202:
        JNZ     ??cJSON_CreateDoubleArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateDoubleArray_0
??cJSON_CreateDoubleArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateDoubleArray_3
        LCALL   ?Subroutine107 & 0xFFFF
// 2666     }
??CrossCallReturnLabel_383:
        SJMP    ??cJSON_CreateDoubleArray_4
??cJSON_CreateDoubleArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_494:
        JZ      ??CrossCallReturnLabel_62
// 2667 
// 2668     if (a && a->child) {
// 2669         a->child->prev = n;
        LCALL   ?Subroutine43 & 0xFFFF
// 2670     }
// 2671 
// 2672     return a;
??CrossCallReturnLabel_62:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateDoubleArray_2:
        SJMP    ??Subroutine221_0
        CFI EndBlock cfiBlock1474
// 2673 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
        CFI Block cfiCond1475 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_201
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1476 Using cfiCommon0
        CFI (cfiCond1476) NoFunction
        CFI (cfiCond1476) Conditional ??CrossCallReturnLabel_202
        CFI (cfiCond1476) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1476) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1476) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1476) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1476) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1476) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1476) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1476) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1476) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1476) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1476) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1476) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1476) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1476) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1476) CFA_SP SP+0
        CFI (cfiCond1476) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1477 Using cfiCommon1
        CFI (cfiPicker1477) NoFunction
        CFI (cfiPicker1477) Picker
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        RET
        CFI EndBlock cfiCond1475
        CFI EndBlock cfiCond1476
        CFI EndBlock cfiPicker1477

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
        CFI Block cfiCond1478 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_197
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1479 Using cfiCommon0
        CFI (cfiCond1479) NoFunction
        CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1479) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1479) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1479) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1479) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1479) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1479) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1479) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1479) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1479) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1479) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1479) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1479) CFA_SP SP+0
        CFI (cfiCond1479) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1480 Using cfiCommon0
        CFI (cfiCond1480) NoFunction
        CFI (cfiCond1480) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond1480) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1480) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1480) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1480) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1480) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1480) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1480) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1480) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1480) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1480) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1480) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1480) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1480) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1480) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1480) CFA_SP SP+0
        CFI (cfiCond1480) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1481 Using cfiCommon0
        CFI (cfiCond1481) NoFunction
        CFI (cfiCond1481) Conditional ??CrossCallReturnLabel_200
        CFI (cfiCond1481) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1481) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1481) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1481) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1481) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1481) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1481) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1481) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1481) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1481) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1481) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1481) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1481) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1481) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1481) CFA_SP SP+0
        CFI (cfiCond1481) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1482 Using cfiCommon1
        CFI (cfiPicker1482) NoFunction
        CFI (cfiPicker1482) Picker
        LCALL   ??cJSON_CreateArray?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond1478
        CFI EndBlock cfiCond1479
        CFI EndBlock cfiCond1480
        CFI EndBlock cfiCond1481
        CFI EndBlock cfiPicker1482

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
        CFI Block cfiCond1483 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_189
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1484 Using cfiCommon0
        CFI (cfiCond1484) NoFunction
        CFI (cfiCond1484) Conditional ??CrossCallReturnLabel_190
        CFI (cfiCond1484) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1484) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1484) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1484) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1484) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1484) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1484) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1484) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1484) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1484) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1484) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1484) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1484) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1484) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1484) CFA_SP SP+0
        CFI (cfiCond1484) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1485 Using cfiCommon1
        CFI (cfiPicker1485) NoFunction
        CFI (cfiPicker1485) Picker
        MOV     A,?V0 + 8
        ADD     A,?V0 + 4
        MOV     DPL,A
        MOV     A,?V0 + 9
        ADDC    A,?V0 + 5
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond1483
        CFI EndBlock cfiCond1484
        CFI EndBlock cfiPicker1485

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
        CFI Block cfiCond1486 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_185
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1487 Using cfiCommon0
        CFI (cfiCond1487) NoFunction
        CFI (cfiCond1487) Conditional ??CrossCallReturnLabel_186
        CFI (cfiCond1487) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1487) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1487) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1487) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1487) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1487) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1487) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1487) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1487) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1487) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1487) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1487) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1487) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1487) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1487) CFA_SP SP+0
        CFI (cfiCond1487) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1488 Using cfiCommon0
        CFI (cfiCond1488) NoFunction
        CFI (cfiCond1488) Conditional ??CrossCallReturnLabel_187
        CFI (cfiCond1488) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1488) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1488) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1488) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1488) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1488) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1488) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1488) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1488) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1488) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1488) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1488) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1488) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1488) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1488) CFA_SP SP+0
        CFI (cfiCond1488) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1489 Using cfiCommon0
        CFI (cfiCond1489) NoFunction
        CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_188
        CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1489) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1489) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1489) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1489) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1489) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1489) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1489) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1489) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1489) CFA_SP SP+0
        CFI (cfiCond1489) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1490 Using cfiCommon1
        CFI (cfiPicker1490) NoFunction
        CFI (cfiPicker1490) Picker
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,?V0 + 6
        MOV     A,?V0 + 1
        SUBB    A,?V0 + 7
        RET
        CFI EndBlock cfiCond1486
        CFI EndBlock cfiCond1487
        CFI EndBlock cfiCond1488
        CFI EndBlock cfiCond1489
        CFI EndBlock cfiPicker1490

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
        CFI Block cfiCond1491 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_61
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1492 Using cfiCommon0
        CFI (cfiCond1492) NoFunction
        CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_62
        CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1492) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1492) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1492) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1492) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1492) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1492) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1492) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1492) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1492) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1492) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1492) CFA_SP SP+0
        CFI (cfiCond1492) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1493 Using cfiCommon1
        CFI (cfiPicker1493) NoFunction
        CFI (cfiPicker1493) Picker
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_592:
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1491
        CFI EndBlock cfiCond1492
        CFI EndBlock cfiPicker1493

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
        CFI Block cfiCond1494 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_61
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1495 Using cfiCommon0
        CFI (cfiCond1495) NoFunction
        CFI (cfiCond1495) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_62
        CFI (cfiCond1495) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1495) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1495) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1495) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1495) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1495) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1495) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1495) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1495) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1495) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1495) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1495) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1495) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1495) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1495) CFA_SP SP+0
        CFI (cfiCond1495) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1496 Using cfiCommon0
        CFI (cfiCond1496) NoFunction
        CFI (cfiCond1496) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_30
        CFI (cfiCond1496) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1496) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1496) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1496) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1496) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1496) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1496) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1496) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1496) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1496) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1496) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1496) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1496) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1496) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1496) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1496) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1496) CFA_SP SP+0
        CFI (cfiCond1496) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1497 Using cfiCommon0
        CFI (cfiCond1497) NoFunction
        CFI (cfiCond1497) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_31
        CFI (cfiCond1497) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1497) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1497) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1497) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1497) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1497) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1497) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1497) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1497) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1497) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1497) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1497) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1497) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1497) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1497) CFA_SP SP+0
        CFI (cfiCond1497) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1498 Using cfiCommon0
        CFI (cfiCond1498) NoFunction
        CFI (cfiCond1498) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_32
        CFI (cfiCond1498) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1498) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1498) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1498) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1498) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1498) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1498) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1498) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1498) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1498) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1498) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1498) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1498) CFA_SP SP+0
        CFI (cfiCond1498) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1499 Using cfiCommon1
        CFI (cfiPicker1499) NoFunction
        CFI (cfiPicker1499) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1494
        CFI EndBlock cfiCond1495
        CFI EndBlock cfiCond1496
        CFI EndBlock cfiCond1497
        CFI EndBlock cfiCond1498
        CFI EndBlock cfiPicker1499
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine222_0:
        CFI Block cfiCond1500 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_588
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1501 Using cfiCommon0
        CFI (cfiCond1501) NoFunction
        CFI (cfiCond1501) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_589
        CFI (cfiCond1501) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1501) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1501) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1501) CFA_SP SP+0
        CFI (cfiCond1501) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1502 Using cfiCommon0
        CFI (cfiCond1502) NoFunction
        CFI (cfiCond1502) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_587
        CFI (cfiCond1502) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1502) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1502) CFA_SP SP+-5
        CFI (cfiCond1502) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1503 Using cfiCommon0
        CFI (cfiCond1503) NoFunction
        CFI (cfiCond1503) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_61
        CFI (cfiCond1503) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1503) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1503) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1503) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1503) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1503) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1503) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1503) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1503) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1503) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1503) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1503) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1503) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1503) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1503) CFA_SP SP+0
        CFI (cfiCond1503) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1504 Using cfiCommon0
        CFI (cfiCond1504) NoFunction
        CFI (cfiCond1504) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_62
        CFI (cfiCond1504) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1504) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1504) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1504) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1504) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1504) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1504) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1504) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1504) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1504) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1504) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1504) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1504) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1504) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1504) CFA_SP SP+0
        CFI (cfiCond1504) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1505 Using cfiCommon0
        CFI (cfiCond1505) NoFunction
        CFI (cfiCond1505) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_30
        CFI (cfiCond1505) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1505) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1505) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1505) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1505) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1505) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1505) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1505) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1505) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1505) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1505) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1505) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1505) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1505) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1505) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1505) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1505) CFA_SP SP+0
        CFI (cfiCond1505) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1506 Using cfiCommon0
        CFI (cfiCond1506) NoFunction
        CFI (cfiCond1506) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_31
        CFI (cfiCond1506) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1506) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1506) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1506) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1506) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1506) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1506) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1506) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1506) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1506) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1506) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1506) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1506) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1506) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1506) CFA_SP SP+0
        CFI (cfiCond1506) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1507 Using cfiCommon0
        CFI (cfiCond1507) NoFunction
        CFI (cfiCond1507) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_32
        CFI (cfiCond1507) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1507) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1507) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1507) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1507) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1507) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1507) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1507) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1507) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1507) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1507) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1507) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1507) CFA_SP SP+0
        CFI (cfiCond1507) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1508 Using cfiCommon1
        CFI (cfiPicker1508) NoFunction
        CFI (cfiPicker1508) Picker
        INC     DPTR
        CFI EndBlock cfiCond1500
        CFI EndBlock cfiCond1501
        CFI EndBlock cfiCond1502
        CFI EndBlock cfiCond1503
        CFI EndBlock cfiCond1504
        CFI EndBlock cfiCond1505
        CFI EndBlock cfiCond1506
        CFI EndBlock cfiCond1507
        CFI EndBlock cfiPicker1508
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine223_0:
        CFI Block cfiCond1509 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_112
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1510 Using cfiCommon0
        CFI (cfiCond1510) NoFunction
        CFI (cfiCond1510) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_113
        CFI (cfiCond1510) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1510) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1510) CFA_SP SP+-5
        CFI (cfiCond1510) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1511 Using cfiCommon0
        CFI (cfiCond1511) NoFunction
        CFI (cfiCond1511) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_588
        CFI (cfiCond1511) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1511) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1511) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1511) CFA_SP SP+0
        CFI (cfiCond1511) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1512 Using cfiCommon0
        CFI (cfiCond1512) NoFunction
        CFI (cfiCond1512) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_589
        CFI (cfiCond1512) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1512) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1512) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1512) CFA_SP SP+0
        CFI (cfiCond1512) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1513 Using cfiCommon0
        CFI (cfiCond1513) NoFunction
        CFI (cfiCond1513) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_587
        CFI (cfiCond1513) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1513) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1513) CFA_SP SP+-5
        CFI (cfiCond1513) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1514 Using cfiCommon0
        CFI (cfiCond1514) NoFunction
        CFI (cfiCond1514) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_61
        CFI (cfiCond1514) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1514) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1514) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1514) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1514) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1514) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1514) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1514) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1514) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1514) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1514) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1514) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1514) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1514) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1514) CFA_SP SP+0
        CFI (cfiCond1514) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1515 Using cfiCommon0
        CFI (cfiCond1515) NoFunction
        CFI (cfiCond1515) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_62
        CFI (cfiCond1515) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1515) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1515) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1515) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1515) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1515) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1515) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1515) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1515) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1515) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1515) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1515) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1515) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1515) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1515) CFA_SP SP+0
        CFI (cfiCond1515) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1516 Using cfiCommon0
        CFI (cfiCond1516) NoFunction
        CFI (cfiCond1516) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_30
        CFI (cfiCond1516) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1516) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1516) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1516) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1516) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1516) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1516) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1516) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1516) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1516) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1516) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1516) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1516) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1516) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1516) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1516) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1516) CFA_SP SP+0
        CFI (cfiCond1516) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1517 Using cfiCommon0
        CFI (cfiCond1517) NoFunction
        CFI (cfiCond1517) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_31
        CFI (cfiCond1517) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1517) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1517) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1517) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1517) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1517) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1517) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1517) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1517) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1517) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1517) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1517) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1517) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1517) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1517) CFA_SP SP+0
        CFI (cfiCond1517) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1518 Using cfiCommon0
        CFI (cfiCond1518) NoFunction
        CFI (cfiCond1518) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_32
        CFI (cfiCond1518) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1518) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1518) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1518) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1518) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1518) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1518) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1518) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1518) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1518) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1518) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1518) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1518) CFA_SP SP+0
        CFI (cfiCond1518) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1519 Using cfiCommon1
        CFI (cfiPicker1519) NoFunction
        CFI (cfiPicker1519) Picker
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_609:
        INC     DPTR
        RET
        CFI EndBlock cfiCond1509
        CFI EndBlock cfiCond1510
        CFI EndBlock cfiCond1511
        CFI EndBlock cfiCond1512
        CFI EndBlock cfiCond1513
        CFI EndBlock cfiCond1514
        CFI EndBlock cfiCond1515
        CFI EndBlock cfiCond1516
        CFI EndBlock cfiCond1517
        CFI EndBlock cfiCond1518
        CFI EndBlock cfiPicker1519
// 2674 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2675 CJSON_PUBLIC(cJSON *) cJSON_CreateStringArray(const char *const *strings, int count)
cJSON_CreateStringArray:
        CFI Block cfiBlock1520 Using cfiCommon0
        CFI Function cJSON_CreateStringArray
        CODE
// 2676 {
        FUNCALL cJSON_CreateStringArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, cJSON_CreateString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 2677     size_t i = 0;
// 2678     cJSON *n = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2679     cJSON *p = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2680     cJSON *a = NULL;
// 2681 
// 2682     if ((count < 0) || (strings == NULL))
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_515:
        JC      ??cJSON_CreateStringArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateStringArray_1
// 2683     {
// 2684         return NULL;
??cJSON_CreateStringArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateStringArray_2
// 2685     }
// 2686 
// 2687     a = cJSON_CreateArray();
??cJSON_CreateStringArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine127 & 0xFFFF
// 2688 
// 2689     for (i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_200:
        JZ      ??CrossCallReturnLabel_31
        SJMP    ??CrossCallReturnLabel_584
// 2690     {
// 2691         n = cJSON_CreateString(strings[i]);
// 2692         if(!n)
// 2693         {
// 2694             cJSON_Delete(a);
// 2695             return NULL;
// 2696         }
// 2697         if(!i)
// 2698         {
// 2699             a->child = n;
// 2700         }
// 2701         else
// 2702         {
// 2703             suffix_object(p,n);
??cJSON_CreateStringArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??suffix_object?relay
// 2704         }
// 2705         p = n;
??cJSON_CreateStringArray_4:
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_584:
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_188:
        JNC     ??cJSON_CreateStringArray_5
        ; Setup parameters for call to function cJSON_CreateString
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,?V0 + 1
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 8
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 9
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_72:
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_CreateStringArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateStringArray_0
??cJSON_CreateStringArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateStringArray_3
        LCALL   ?Subroutine107 & 0xFFFF
// 2706     }
??CrossCallReturnLabel_384:
        SJMP    ??cJSON_CreateStringArray_4
??cJSON_CreateStringArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_495:
        JZ      ??CrossCallReturnLabel_31
// 2707 
// 2708     if (a && a->child) {
// 2709         a->child->prev = n;
        LCALL   ?Subroutine27 & 0xFFFF
// 2710     }
// 2711 
// 2712     return a;
??CrossCallReturnLabel_31:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateStringArray_2:
        LJMP    ??Subroutine221_0 & 0xFFFF
        CFI EndBlock cfiBlock1520
// 2713 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
        CFI Block cfiCond1521 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_71
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1522 Using cfiCommon0
        CFI (cfiCond1522) NoFunction
        CFI (cfiCond1522) Conditional ??CrossCallReturnLabel_72
        CFI (cfiCond1522) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1522) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1522) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1522) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1522) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1522) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1522) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1522) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1522) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1522) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1522) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1522) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1522) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1522) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1522) CFA_SP SP+0
        CFI (cfiCond1522) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1523 Using cfiCommon1
        CFI (cfiPicker1523) NoFunction
        CFI (cfiPicker1523) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_551:
        ; Setup parameters for call to function cJSON_CreateString
        LCALL   ??cJSON_CreateString?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        RET
        CFI EndBlock cfiCond1521
        CFI EndBlock cfiCond1522
        CFI EndBlock cfiPicker1523

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond1524 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_30
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1525 Using cfiCommon0
        CFI (cfiCond1525) NoFunction
        CFI (cfiCond1525) Conditional ??CrossCallReturnLabel_31
        CFI (cfiCond1525) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1525) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1525) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1525) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1525) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1525) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1525) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1525) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1525) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1525) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1525) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1525) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1525) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1525) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1525) CFA_SP SP+0
        CFI (cfiCond1525) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1526 Using cfiCommon0
        CFI (cfiCond1526) NoFunction
        CFI (cfiCond1526) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond1526) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1526) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1526) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1526) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1526) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1526) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1526) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1526) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1526) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1526) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1526) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1526) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1526) CFA_SP SP+0
        CFI (cfiCond1526) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1527 Using cfiCommon1
        CFI (cfiPicker1527) NoFunction
        CFI (cfiPicker1527) Picker
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_591:
        INC     DPTR
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1524
        CFI EndBlock cfiCond1525
        CFI EndBlock cfiCond1526
        CFI EndBlock cfiPicker1527
// 2714 
// 2715 /* Duplication */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2716 CJSON_PUBLIC(cJSON *) cJSON_Duplicate(const cJSON *item, cJSON_bool recurse)
cJSON_Duplicate:
        CFI Block cfiBlock1528 Using cfiCommon0
        CFI Function cJSON_Duplicate
        CODE
// 2717 {
        FUNCALL cJSON_Duplicate, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_Duplicate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
// 2718     cJSON *newitem = NULL;
// 2719     cJSON *child = NULL;
// 2720     cJSON *next = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2721     cJSON *newchild = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2722 
// 2723     /* Bail on bad ptr */
// 2724     if (!item)
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_0 & 0xFFFF
// 2725     {
// 2726         goto fail;
// 2727     }
// 2728     /* Create new item */
// 2729     newitem = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 2730     if (!newitem)
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_0 & 0xFFFF
// 2731     {
// 2732         goto fail;
// 2733     }
// 2734     /* Copy over all vars */
// 2735     newitem->type = item->type & (~cJSON_IsReference);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfe
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine197_0 & 0xFFFF
// 2736     newitem->valueint = item->valueint;
??CrossCallReturnLabel_451:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_64:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine197_0 & 0xFFFF
// 2737     newitem->valuedouble = item->valuedouble;
??CrossCallReturnLabel_452:
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL   ?XSTORE_R2345
// 2738     if (item->valuestring)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_500:
        JZ      ??cJSON_Duplicate_1
// 2739     {
// 2740         newitem->valuestring = (char*)cJSON_strdup((unsigned char*)item->valuestring, &global_hooks);
        MOV     A,R6
        ADD     A,#0x8
        MOV     ?V0 + 6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_108:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine186_0 & 0xFFFF
// 2741         if (!newitem->valuestring)
??CrossCallReturnLabel_378:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine205_0 & 0xFFFF
// 2742         {
// 2743             goto fail;
// 2744         }
// 2745     }
??CrossCallReturnLabel_484:
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_2 & 0xFFFF
// 2746     if (item->string)
??cJSON_Duplicate_1:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_362:
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_485:
        JZ      ??cJSON_Duplicate_3
// 2747     {
// 2748         newitem->string = (item->type&cJSON_StringIsConst) ? item->string : (char*)cJSON_strdup((unsigned char*)item->string, &global_hooks);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??cJSON_Duplicate_4
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_363:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_109:
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R0,?V0 + 6
        MOV     R1,?V0 + 7
??cJSON_Duplicate_4:
        MOV     A,R6
        ADD     A,#0x10
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2749         if (!newitem->string)
??CrossCallReturnLabel_441:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,R1
        JZ      ??cJSON_Duplicate_2
// 2750         {
// 2751             goto fail;
// 2752         }
// 2753     }
// 2754     /* If non-recursive, then we're done! */
// 2755     if (!recurse)
??cJSON_Duplicate_3:
        MOV     A,?V0 + 8
        ORL     A,?V0 + 9
        JNZ     ??cJSON_Duplicate_5
// 2756     {
// 2757         return newitem;
??cJSON_Duplicate_6:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??cJSON_Duplicate_7
// 2758     }
// 2759     /* Walk the ->next chain for the child. */
// 2760     child = item->child;
??cJSON_Duplicate_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??cJSON_Duplicate_8
// 2761     while (child != NULL)
// 2762     {
// 2763         newchild = cJSON_Duplicate(child, true); /* Duplicate (with recurse) each item in the ->next chain */
// 2764         if (!newchild)
// 2765         {
// 2766             goto fail;
// 2767         }
// 2768         if (next != NULL)
// 2769         {
// 2770             /* If newitem->child already set, then crosswire ->prev and ->next and move on */
// 2771             next->next = newchild;
// 2772             newchild->prev = next;
// 2773             next = newchild;
// 2774         }
// 2775         else
// 2776         {
// 2777             /* Set newitem->child and move to it */
// 2778             newitem->child = newchild;
??cJSON_Duplicate_9:
        LCALL   ?Subroutine107 & 0xFFFF
// 2779             next = newchild;
??CrossCallReturnLabel_385:
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,A
// 2780         }
// 2781         child = child->next;
??cJSON_Duplicate_10:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
??cJSON_Duplicate_8:
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_95:
        JZ      ??cJSON_Duplicate_11
        ; Setup parameters for call to function cJSON_Duplicate
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Duplicate?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??cJSON_Duplicate_2
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??cJSON_Duplicate_9
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_379:
        MOV     DPL,R2
        MOV     DPH,A
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        SJMP    ??cJSON_Duplicate_10
// 2782     }
??cJSON_Duplicate_11:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_496:
        JZ      ??cJSON_Duplicate_6
// 2783     if (newitem && newitem->child)
// 2784     {
// 2785         newitem->child->prev = newchild;
        LCALL   ?Subroutine27 & 0xFFFF
// 2786     }
??CrossCallReturnLabel_32:
        SJMP    ??cJSON_Duplicate_6
// 2787 
// 2788     return newitem;
// 2789 
// 2790 fail:
// 2791     if (newitem != NULL)
// 2792     {
// 2793         cJSON_Delete(newitem);
??cJSON_Duplicate_2:
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
// 2794     }
// 2795 
// 2796     return NULL;
??cJSON_Duplicate_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_Duplicate_7:
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock1528
// 2797 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
        CFI Block cfiCond1529 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_142
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1530 Using cfiCommon0
        CFI (cfiCond1530) NoFunction
        CFI (cfiCond1530) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond1530) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1530) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1530) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1530) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1530) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1530) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1530) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1530) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1530) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1530) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1530) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1530) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1530) CFA_SP SP+0
        CFI (cfiCond1530) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1531 Using cfiCommon0
        CFI (cfiCond1531) NoFunction
        CFI (cfiCond1531) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond1531) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1531) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1531) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1531) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1531) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1531) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1531) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1531) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1531) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1531) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1531) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1531) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1531) CFA_SP SP+0
        CFI (cfiCond1531) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1532 Using cfiCommon1
        CFI (cfiPicker1532) NoFunction
        CFI (cfiPicker1532) Picker
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_647:
        RET
        CFI EndBlock cfiCond1529
        CFI EndBlock cfiCond1530
        CFI EndBlock cfiCond1531
        CFI EndBlock cfiPicker1532

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
        CFI Block cfiCond1533 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_108
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1534 Using cfiCommon0
        CFI (cfiCond1534) NoFunction
        CFI (cfiCond1534) Conditional ??CrossCallReturnLabel_109
        CFI (cfiCond1534) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1534) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1534) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1534) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1534) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1534) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1534) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1534) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1534) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1534) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1534) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1534) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1534) CFA_SP SP+0
        CFI (cfiCond1534) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1535 Using cfiCommon1
        CFI (cfiPicker1535) NoFunction
        CFI (cfiPicker1535) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_554:
        LCALL   ??cJSON_strdup?relay
        RET
        CFI EndBlock cfiCond1533
        CFI EndBlock cfiCond1534
        CFI EndBlock cfiPicker1535

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
        CFI Block cfiCond1536 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_63
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1537 Using cfiCommon0
        CFI (cfiCond1537) NoFunction
        CFI (cfiCond1537) Conditional ??CrossCallReturnLabel_64
        CFI (cfiCond1537) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1537) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1537) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1537) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1537) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1537) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1537) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1537) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1537) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1537) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1537) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1537) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1537) CFA_SP SP+0
        CFI (cfiCond1537) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1538 Using cfiCommon1
        CFI (cfiPicker1538) NoFunction
        CFI (cfiPicker1538) Picker
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_635:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1536
        CFI EndBlock cfiCond1537
        CFI EndBlock cfiPicker1538
// 2798 
// 2799 static void skip_oneline_comment(char **input)
// 2800 {
// 2801     *input += static_strlen("//");
// 2802 
// 2803     for (; (*input)[0] != '\0'; ++(*input))
// 2804     {
// 2805         if ((*input)[0] == '\n') {
// 2806             *input += static_strlen("\n");
// 2807             return;
// 2808         }
// 2809     }
// 2810 }
// 2811 
// 2812 static void skip_multiline_comment(char **input)
// 2813 {
// 2814     *input += static_strlen("/*");
// 2815 
// 2816     for (; (*input)[0] != '\0'; ++(*input))
// 2817     {
// 2818         if (((*input)[0] == '*') && ((*input)[1] == '/'))
// 2819         {
// 2820             *input += static_strlen("*/");
// 2821             return;
// 2822         }
// 2823     }
// 2824 }
// 2825 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2826 static void minify_string(char **input, char **output) {
minify_string:
        CFI Block cfiBlock1539 Using cfiCommon0
        CFI Function minify_string
        CODE
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2827     (*output)[0] = (*input)[0];
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_600:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_267:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??minify_string_0
// 2828     *input += static_strlen("\"");
// 2829     *output += static_strlen("\"");
// 2830 
// 2831 
// 2832     for (; (*input)[0] != '\0'; (void)++(*input), ++(*output)) {
// 2833         (*output)[0] = (*input)[0];
// 2834 
// 2835         if ((*input)[0] == '\"') {
// 2836             (*output)[0] = '\"';
// 2837             *input += static_strlen("\"");
// 2838             *output += static_strlen("\"");
// 2839             return;
// 2840         } else if (((*input)[0] == '\\') && ((*input)[1] == '\"')) {
??minify_string_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_595:
        XRL     A,#0x5c
        JNZ     ??minify_string_2
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_588:
        XRL     A,#0x22
        JNZ     ??minify_string_2
// 2841             (*output)[1] = (*input)[1];
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_589:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_111:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine105 & 0xFFFF
// 2842             *input += static_strlen("\"");
??CrossCallReturnLabel_169:
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_42:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2843             *output += static_strlen("\"");
??CrossCallReturnLabel_442:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine33 & 0xFFFF
// 2844         }
??CrossCallReturnLabel_43:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??minify_string_0:
        MOVX    @DPTR,A
??minify_string_2:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_601:
        JZ      ??CrossCallReturnLabel_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_596:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_268:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_602:
        XRL     A,#0x22
        JNZ     ??minify_string_1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_269:
        MOV     A,#0x22
        MOVX    @DPTR,A
        LCALL   ?Subroutine16 & 0xFFFF
// 2845     }
??CrossCallReturnLabel_0:
        LJMP    ??Subroutine191_0 & 0xFFFF
        CFI EndBlock cfiBlock1539
// 2846 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
        CFI Block cfiCond1540 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_588
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1541 Using cfiCommon0
        CFI (cfiCond1541) NoFunction
        CFI (cfiCond1541) Conditional ??CrossCallReturnLabel_589
        CFI (cfiCond1541) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1541) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1541) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1541) CFA_SP SP+0
        CFI (cfiCond1541) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1542 Using cfiCommon1
        CFI (cfiPicker1542) NoFunction
        CFI (cfiPicker1542) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        CFI EndBlock cfiCond1540
        CFI EndBlock cfiCond1541
        CFI EndBlock cfiPicker1542
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine224_0:
        CFI Block cfiCond1543 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_587
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1544 Using cfiCommon0
        CFI (cfiCond1544) NoFunction
        CFI (cfiCond1544) Conditional ??CrossCallReturnLabel_588
        CFI (cfiCond1544) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1544) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1544) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1544) CFA_SP SP+0
        CFI (cfiCond1544) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1545 Using cfiCommon0
        CFI (cfiCond1545) NoFunction
        CFI (cfiCond1545) Conditional ??CrossCallReturnLabel_589
        CFI (cfiCond1545) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1545) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1545) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1545) CFA_SP SP+0
        CFI (cfiCond1545) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1546 Using cfiCommon1
        CFI (cfiPicker1546) NoFunction
        CFI (cfiPicker1546) Picker
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_593:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond1543
        CFI EndBlock cfiCond1544
        CFI EndBlock cfiCond1545
        CFI EndBlock cfiPicker1546

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
        CFI Block cfiCond1547 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_110
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1548 Using cfiCommon0
        CFI (cfiCond1548) NoFunction
        CFI (cfiCond1548) Conditional ??CrossCallReturnLabel_111
        CFI (cfiCond1548) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1548) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1548) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1548) CFA_SP SP+-1
        CFI (cfiCond1548) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1549 Using cfiCommon1
        CFI (cfiPicker1549) NoFunction
        CFI (cfiPicker1549) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_283:
        INC     DPTR
        RET
        CFI EndBlock cfiCond1547
        CFI EndBlock cfiCond1548
        CFI EndBlock cfiPicker1549
// 2847 

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond1550 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_604
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1551 Using cfiCommon0
        CFI (cfiCond1551) NoFunction
        CFI (cfiCond1551) Conditional ??CrossCallReturnLabel_605
        CFI (cfiCond1551) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1551) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1551) CFA_SP SP+-5
        CFI (cfiCond1551) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1552 Using cfiCommon1
        CFI (cfiPicker1552) NoFunction
        CFI (cfiPicker1552) Picker
        INC     R0
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        CFI EndBlock cfiCond1550
        CFI EndBlock cfiCond1551
        CFI EndBlock cfiPicker1552
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine225_0:
        CFI Block cfiCond1553 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_603
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1554 Using cfiCommon0
        CFI (cfiCond1554) NoFunction
        CFI (cfiCond1554) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond1554) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1554) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1554) CFA_SP SP+-5
        CFI (cfiCond1554) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1555 Using cfiCommon0
        CFI (cfiCond1555) NoFunction
        CFI (cfiCond1555) Conditional ??CrossCallReturnLabel_605
        CFI (cfiCond1555) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1555) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1555) CFA_SP SP+-5
        CFI (cfiCond1555) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1556 Using cfiCommon1
        CFI (cfiPicker1556) NoFunction
        CFI (cfiPicker1556) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond1553
        CFI EndBlock cfiCond1554
        CFI EndBlock cfiCond1555
        CFI EndBlock cfiPicker1556
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine226_0:
        CFI Block cfiCond1557 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_600
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1558 Using cfiCommon0
        CFI (cfiCond1558) NoFunction
        CFI (cfiCond1558) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1558) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1558) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1558) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1558) CFA_SP SP+0
        CFI (cfiCond1558) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1559 Using cfiCommon0
        CFI (cfiCond1559) NoFunction
        CFI (cfiCond1559) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1559) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1559) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1559) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1559) CFA_SP SP+0
        CFI (cfiCond1559) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1560 Using cfiCommon0
        CFI (cfiCond1560) NoFunction
        CFI (cfiCond1560) Conditional ??CrossCallReturnLabel_603
        CFI (cfiCond1560) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1560) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1560) CFA_SP SP+-5
        CFI (cfiCond1560) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1561 Using cfiCommon0
        CFI (cfiCond1561) NoFunction
        CFI (cfiCond1561) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond1561) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1561) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1561) CFA_SP SP+-5
        CFI (cfiCond1561) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1562 Using cfiCommon0
        CFI (cfiCond1562) NoFunction
        CFI (cfiCond1562) Conditional ??CrossCallReturnLabel_605
        CFI (cfiCond1562) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1562) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1562) CFA_SP SP+-5
        CFI (cfiCond1562) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1563 Using cfiCommon1
        CFI (cfiPicker1563) NoFunction
        CFI (cfiPicker1563) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        CFI EndBlock cfiCond1557
        CFI EndBlock cfiCond1558
        CFI EndBlock cfiCond1559
        CFI EndBlock cfiCond1560
        CFI EndBlock cfiCond1561
        CFI EndBlock cfiCond1562
        CFI EndBlock cfiPicker1563
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine227_0:
        CFI Block cfiCond1564 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_595
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1565 Using cfiCommon0
        CFI (cfiCond1565) NoFunction
        CFI (cfiCond1565) Conditional ??CrossCallReturnLabel_596
        CFI (cfiCond1565) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1565) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1565) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1565) CFA_SP SP+0
        CFI (cfiCond1565) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1566 Using cfiCommon0
        CFI (cfiCond1566) NoFunction
        CFI (cfiCond1566) Conditional ??CrossCallReturnLabel_597
        CFI (cfiCond1566) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1566) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1566) CFA_SP SP+-5
        CFI (cfiCond1566) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1567 Using cfiCommon0
        CFI (cfiCond1567) NoFunction
        CFI (cfiCond1567) Conditional ??CrossCallReturnLabel_598
        CFI (cfiCond1567) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1567) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1567) CFA_SP SP+-5
        CFI (cfiCond1567) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1568 Using cfiCommon0
        CFI (cfiCond1568) NoFunction
        CFI (cfiCond1568) Conditional ??CrossCallReturnLabel_599
        CFI (cfiCond1568) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1568) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1568) CFA_SP SP+-5
        CFI (cfiCond1568) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1569 Using cfiCommon0
        CFI (cfiCond1569) NoFunction
        CFI (cfiCond1569) Conditional ??CrossCallReturnLabel_600
        CFI (cfiCond1569) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1569) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1569) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1569) CFA_SP SP+0
        CFI (cfiCond1569) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1570 Using cfiCommon0
        CFI (cfiCond1570) NoFunction
        CFI (cfiCond1570) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1570) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1570) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1570) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1570) CFA_SP SP+0
        CFI (cfiCond1570) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1571 Using cfiCommon0
        CFI (cfiCond1571) NoFunction
        CFI (cfiCond1571) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1571) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1571) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1571) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1571) CFA_SP SP+0
        CFI (cfiCond1571) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1572 Using cfiCommon0
        CFI (cfiCond1572) NoFunction
        CFI (cfiCond1572) Conditional ??CrossCallReturnLabel_603
        CFI (cfiCond1572) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1572) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1572) CFA_SP SP+-5
        CFI (cfiCond1572) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1573 Using cfiCommon0
        CFI (cfiCond1573) NoFunction
        CFI (cfiCond1573) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond1573) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1573) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1573) CFA_SP SP+-5
        CFI (cfiCond1573) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1574 Using cfiCommon0
        CFI (cfiCond1574) NoFunction
        CFI (cfiCond1574) Conditional ??CrossCallReturnLabel_605
        CFI (cfiCond1574) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1574) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1574) CFA_SP SP+-5
        CFI (cfiCond1574) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1575 Using cfiCommon1
        CFI (cfiPicker1575) NoFunction
        CFI (cfiPicker1575) Picker
        INC     DPTR
        CFI EndBlock cfiCond1564
        CFI EndBlock cfiCond1565
        CFI EndBlock cfiCond1566
        CFI EndBlock cfiCond1567
        CFI EndBlock cfiCond1568
        CFI EndBlock cfiCond1569
        CFI EndBlock cfiCond1570
        CFI EndBlock cfiCond1571
        CFI EndBlock cfiCond1572
        CFI EndBlock cfiCond1573
        CFI EndBlock cfiCond1574
        CFI EndBlock cfiPicker1575
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine228_0:
        CFI Block cfiCond1576 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_594
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1577 Using cfiCommon0
        CFI (cfiCond1577) NoFunction
        CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_595
        CFI (cfiCond1577) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1577) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1577) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1577) CFA_SP SP+0
        CFI (cfiCond1577) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1578 Using cfiCommon0
        CFI (cfiCond1578) NoFunction
        CFI (cfiCond1578) Conditional ??CrossCallReturnLabel_596
        CFI (cfiCond1578) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1578) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1578) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1578) CFA_SP SP+0
        CFI (cfiCond1578) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1579 Using cfiCommon0
        CFI (cfiCond1579) NoFunction
        CFI (cfiCond1579) Conditional ??CrossCallReturnLabel_597
        CFI (cfiCond1579) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1579) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1579) CFA_SP SP+-5
        CFI (cfiCond1579) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1580 Using cfiCommon0
        CFI (cfiCond1580) NoFunction
        CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_598
        CFI (cfiCond1580) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1580) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1580) CFA_SP SP+-5
        CFI (cfiCond1580) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1581 Using cfiCommon0
        CFI (cfiCond1581) NoFunction
        CFI (cfiCond1581) Conditional ??CrossCallReturnLabel_599
        CFI (cfiCond1581) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1581) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1581) CFA_SP SP+-5
        CFI (cfiCond1581) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1582 Using cfiCommon0
        CFI (cfiCond1582) NoFunction
        CFI (cfiCond1582) Conditional ??CrossCallReturnLabel_600
        CFI (cfiCond1582) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1582) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1582) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1582) CFA_SP SP+0
        CFI (cfiCond1582) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1583 Using cfiCommon0
        CFI (cfiCond1583) NoFunction
        CFI (cfiCond1583) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1583) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1583) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1583) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1583) CFA_SP SP+0
        CFI (cfiCond1583) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1584 Using cfiCommon0
        CFI (cfiCond1584) NoFunction
        CFI (cfiCond1584) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1584) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1584) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1584) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1584) CFA_SP SP+0
        CFI (cfiCond1584) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1585 Using cfiCommon0
        CFI (cfiCond1585) NoFunction
        CFI (cfiCond1585) Conditional ??CrossCallReturnLabel_603
        CFI (cfiCond1585) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1585) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1585) CFA_SP SP+-5
        CFI (cfiCond1585) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1586 Using cfiCommon0
        CFI (cfiCond1586) NoFunction
        CFI (cfiCond1586) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond1586) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1586) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1586) CFA_SP SP+-5
        CFI (cfiCond1586) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1587 Using cfiCommon0
        CFI (cfiCond1587) NoFunction
        CFI (cfiCond1587) Conditional ??CrossCallReturnLabel_605
        CFI (cfiCond1587) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1587) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1587) CFA_SP SP+-5
        CFI (cfiCond1587) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1588 Using cfiCommon1
        CFI (cfiPicker1588) NoFunction
        CFI (cfiPicker1588) Picker
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_610:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond1576
        CFI EndBlock cfiCond1577
        CFI EndBlock cfiCond1578
        CFI EndBlock cfiCond1579
        CFI EndBlock cfiCond1580
        CFI EndBlock cfiCond1581
        CFI EndBlock cfiCond1582
        CFI EndBlock cfiCond1583
        CFI EndBlock cfiCond1584
        CFI EndBlock cfiCond1585
        CFI EndBlock cfiCond1586
        CFI EndBlock cfiCond1587
        CFI EndBlock cfiPicker1588

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond1589 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_1
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1590 Using cfiCommon0
        CFI (cfiCond1590) NoFunction
        CFI (cfiCond1590) Conditional ??CrossCallReturnLabel_0
        CFI (cfiCond1590) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1590) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1590) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1590) CFA_SP SP+0
        CFI (cfiCond1590) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1591 Using cfiCommon1
        CFI (cfiPicker1591) NoFunction
        CFI (cfiPicker1591) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1589
        CFI EndBlock cfiCond1590
        CFI EndBlock cfiPicker1591

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2848 CJSON_PUBLIC(void) cJSON_Minify(char *json)
cJSON_Minify:
        CFI Block cfiBlock1592 Using cfiCommon0
        CFI Function cJSON_Minify
        CODE
// 2849 {
        FUNCALL cJSON_Minify, minify_string
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 4, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 4)
        LCALL   ?Subroutine106 & 0xFFFF
// 2850     char *into = json;
??CrossCallReturnLabel_290:
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_617:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2851 
// 2852     if (json == NULL)
??CrossCallReturnLabel_443:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_486:
        JNZ     ??CrossCallReturnLabel_444
        LJMP    ??CrossCallReturnLabel_101 & 0xFFFF
// 2853     {
// 2854         return;
// 2855     }
// 2856 
// 2857     while (json[0] != '\0')
// 2858     {
// 2859         switch (json[0])
// 2860         {
// 2861             case ' ':
// 2862             case '\t':
// 2863             case '\r':
// 2864             case '\n':
// 2865                 json++;
??cJSON_Minify_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R0,A
??cJSON_Minify_1:
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2866                 break;
??CrossCallReturnLabel_444:
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_603:
        JNZ     $+5
        LJMP    ??cJSON_Minify_2 & 0xFFFF
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_597:
        ADD     A,#-0x9
        JZ      ??cJSON_Minify_0
        DEC     A
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x3
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x13
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??cJSON_Minify_3 & 0xFFFF
        ADD     A,#-0xd
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        INC     DPTR
        JZ      $+5
        LJMP    ??cJSON_Minify_4 & 0xFFFF
// 2867 
// 2868             case '/':
// 2869                 if (json[1] == '/')
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_112:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JNZ     ??cJSON_Minify_5
// 2870                 {
// 2871                     skip_oneline_comment(&json);
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
??cJSON_Minify_6:
        LCALL   ?Subroutine19 & 0xFFFF
// 2872                 }
??CrossCallReturnLabel_604:
        JZ      ??CrossCallReturnLabel_444
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_598:
        XRL     A,#0xa
        JZ      ??cJSON_Minify_0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        SJMP    ??cJSON_Minify_6
// 2873                 else if (json[1] == '*')
??cJSON_Minify_5:
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_587:
        XRL     A,#0x2a
        JNZ     ??cJSON_Minify_0
// 2874                 {
// 2875                     skip_multiline_comment(&json);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
        SJMP    ??cJSON_Minify_7
// 2876                 } else {
??cJSON_Minify_8:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
??cJSON_Minify_7:
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_605:
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_444 & 0xFFFF
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_599:
        XRL     A,#0x2a
        JNZ     ??cJSON_Minify_8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        INC     DPTR
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_113:
        JNZ     ??cJSON_Minify_8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
        INC     R0
        LJMP    ??cJSON_Minify_1 & 0xFFFF
// 2877                     json++;
// 2878                 }
// 2879                 break;
// 2880 
// 2881             case '\"':
// 2882                 minify_string(&json, (char**)&into);
??cJSON_Minify_3:
        ; Setup parameters for call to function minify_string
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??minify_string?relay
// 2883                 break;
        LJMP    ??CrossCallReturnLabel_444 & 0xFFFF
// 2884 
// 2885             default:
// 2886                 into[0] = json[0];
??cJSON_Minify_4:
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_594:
        PUSH    A
        CFI CFA_SP SP+-6
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_270:
        POP     A
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine32 & 0xFFFF
// 2887                 json++;
// 2888                 into++;
??CrossCallReturnLabel_37:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
// 2889         }
// 2890     }
??CrossCallReturnLabel_44:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LJMP    ??CrossCallReturnLabel_212 & 0xFFFF
// 2891 
// 2892     /* and null-terminate. */
// 2893     *into = '\0';
??cJSON_Minify_2:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine65 & 0xFFFF
// 2894 }
??CrossCallReturnLabel_101:
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 XSP16+0
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock1592

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
        CFI Block cfiCond1593 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_604
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1594 Using cfiCommon0
        CFI (cfiCond1594) NoFunction
        CFI (cfiCond1594) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_605
        CFI (cfiCond1594) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1594) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1594) CFA_SP SP+-5
        CFI (cfiCond1594) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1595 Using cfiCommon0
        CFI (cfiCond1595) NoFunction
        CFI (cfiCond1595) Conditional ??CrossCallReturnLabel_212
        CFI (cfiCond1595) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1595) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1595) CFA_SP SP+-5
        CFI (cfiCond1595) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1596 Using cfiCommon1
        CFI (cfiPicker1596) NoFunction
        CFI (cfiPicker1596) Picker
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond1593
        CFI EndBlock cfiCond1594
        CFI EndBlock cfiCond1595
        CFI EndBlock cfiPicker1596

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
        CFI Block cfiCond1597 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_112
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1598 Using cfiCommon0
        CFI (cfiCond1598) NoFunction
        CFI (cfiCond1598) Conditional ??CrossCallReturnLabel_113
        CFI (cfiCond1598) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1598) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1598) CFA_SP SP+-5
        CFI (cfiCond1598) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1599 Using cfiCommon1
        CFI (cfiPicker1599) NoFunction
        CFI (cfiPicker1599) Picker
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_590:
        MOVX    A,@DPTR
        XRL     A,#0x2f
        RET
        CFI EndBlock cfiCond1597
        CFI EndBlock cfiCond1598
        CFI EndBlock cfiPicker1599

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
        CFI Block cfiCond1600 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1601 Using cfiCommon0
        CFI (cfiCond1601) NoFunction
        CFI (cfiCond1601) Conditional ??CrossCallReturnLabel_101
        CFI (cfiCond1601) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1601) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1601) CFA_SP SP+-5
        CFI (cfiCond1601) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1602 Using cfiCommon1
        CFI (cfiPicker1602) NoFunction
        CFI (cfiPicker1602) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_282:
        CLR     A
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1600
        CFI EndBlock cfiCond1601
        CFI EndBlock cfiPicker1602

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
        CFI Block cfiCond1603 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_626
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-2
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1604 Using cfiCommon0
        CFI (cfiCond1604) NoFunction
        CFI (cfiCond1604) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1604) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1604) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1604) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1604) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1604) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1604) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1604) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1604) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1604) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1604) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1604) CFA_SP SP+-2
        CFI (cfiCond1604) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1605 Using cfiCommon0
        CFI (cfiCond1605) NoFunction
        CFI (cfiCond1605) Conditional ??CrossCallReturnLabel_628
        CFI (cfiCond1605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1605) CFA_SP SP+-2
        CFI (cfiCond1605) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1606 Using cfiCommon0
        CFI (cfiCond1606) NoFunction
        CFI (cfiCond1606) Conditional ??CrossCallReturnLabel_629
        CFI (cfiCond1606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1606) CFA_SP SP+-2
        CFI (cfiCond1606) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1607 Using cfiCommon0
        CFI (cfiCond1607) NoFunction
        CFI (cfiCond1607) Conditional ??CrossCallReturnLabel_630
        CFI (cfiCond1607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1607) CFA_SP SP+-2
        CFI (cfiCond1607) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1608 Using cfiCommon1
        CFI (cfiPicker1608) NoFunction
        CFI (cfiPicker1608) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond1603
        CFI EndBlock cfiCond1604
        CFI EndBlock cfiCond1605
        CFI EndBlock cfiCond1606
        CFI EndBlock cfiCond1607
        CFI EndBlock cfiPicker1608
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine229_0:
        CFI Block cfiCond1609 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_618
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1610 Using cfiCommon0
        CFI (cfiCond1610) NoFunction
        CFI (cfiCond1610) Conditional ??CrossCallReturnLabel_619
        CFI (cfiCond1610) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1610) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1610) CFA_SP SP+-7
        CFI Block cfiCond1611 Using cfiCommon0
        CFI (cfiCond1611) NoFunction
        CFI (cfiCond1611) Conditional ??CrossCallReturnLabel_620
        CFI (cfiCond1611) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1611) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1611) CFA_SP SP+-7
        CFI Block cfiCond1612 Using cfiCommon0
        CFI (cfiCond1612) NoFunction
        CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_621
        CFI (cfiCond1612) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1612) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1612) CFA_SP SP+-5
        CFI Block cfiCond1613 Using cfiCommon0
        CFI (cfiCond1613) NoFunction
        CFI (cfiCond1613) Conditional ??CrossCallReturnLabel_622
        CFI (cfiCond1613) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1613) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1613) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1613) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1613) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1613) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1613) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1613) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1613) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1613) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1613) CFA_SP SP+-2
        CFI (cfiCond1613) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1614 Using cfiCommon0
        CFI (cfiCond1614) NoFunction
        CFI (cfiCond1614) Conditional ??CrossCallReturnLabel_623
        CFI (cfiCond1614) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1614) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1614) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1614) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1614) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1614) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1614) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1614) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1614) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1614) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1614) CFA_SP SP+-2
        CFI (cfiCond1614) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1615 Using cfiCommon0
        CFI (cfiCond1615) NoFunction
        CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_624
        CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1615) CFA_SP SP+0
        CFI (cfiCond1615) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1616 Using cfiCommon0
        CFI (cfiCond1616) NoFunction
        CFI (cfiCond1616) Conditional ??CrossCallReturnLabel_625
        CFI (cfiCond1616) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1616) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1616) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1616) CFA_SP SP+0
        CFI (cfiCond1616) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1617 Using cfiCommon0
        CFI (cfiCond1617) NoFunction
        CFI (cfiCond1617) Conditional ??CrossCallReturnLabel_626
        CFI (cfiCond1617) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1617) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1617) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1617) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1617) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1617) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1617) CFA_SP SP+-2
        CFI (cfiCond1617) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1618 Using cfiCommon0
        CFI (cfiCond1618) NoFunction
        CFI (cfiCond1618) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1618) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1618) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1618) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1618) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1618) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1618) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1618) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1618) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1618) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1618) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1618) CFA_SP SP+-2
        CFI (cfiCond1618) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1619 Using cfiCommon0
        CFI (cfiCond1619) NoFunction
        CFI (cfiCond1619) Conditional ??CrossCallReturnLabel_628
        CFI (cfiCond1619) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1619) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1619) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1619) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1619) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1619) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1619) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1619) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1619) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1619) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1619) CFA_SP SP+-2
        CFI (cfiCond1619) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1620 Using cfiCommon0
        CFI (cfiCond1620) NoFunction
        CFI (cfiCond1620) Conditional ??CrossCallReturnLabel_629
        CFI (cfiCond1620) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1620) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1620) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1620) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1620) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1620) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1620) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1620) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1620) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1620) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1620) CFA_SP SP+-2
        CFI (cfiCond1620) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1621 Using cfiCommon0
        CFI (cfiCond1621) NoFunction
        CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_630
        CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1621) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1621) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1621) CFA_SP SP+-2
        CFI (cfiCond1621) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1622 Using cfiCommon1
        CFI (cfiPicker1622) NoFunction
        CFI (cfiPicker1622) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1609
        CFI EndBlock cfiCond1610
        CFI EndBlock cfiCond1611
        CFI EndBlock cfiCond1612
        CFI EndBlock cfiCond1613
        CFI EndBlock cfiCond1614
        CFI EndBlock cfiCond1615
        CFI EndBlock cfiCond1616
        CFI EndBlock cfiCond1617
        CFI EndBlock cfiCond1618
        CFI EndBlock cfiCond1619
        CFI EndBlock cfiCond1620
        CFI EndBlock cfiCond1621
        CFI EndBlock cfiPicker1622
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine230_0:
        CFI Block cfiCond1623 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_611
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1624 Using cfiCommon0
        CFI (cfiCond1624) NoFunction
        CFI (cfiCond1624) Conditional ??CrossCallReturnLabel_612
        CFI (cfiCond1624) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1624) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1624) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1624) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1624) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1624) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1624) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1624) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1624) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1624) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1624) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1624) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1624) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1624) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1624) CFA_SP SP+-2
        CFI (cfiCond1624) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1625 Using cfiCommon0
        CFI (cfiCond1625) NoFunction
        CFI (cfiCond1625) Conditional ??CrossCallReturnLabel_613
        CFI (cfiCond1625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1625) CFA_SP SP+0
        CFI (cfiCond1625) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1626 Using cfiCommon0
        CFI (cfiCond1626) NoFunction
        CFI (cfiCond1626) Conditional ??CrossCallReturnLabel_614
        CFI (cfiCond1626) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1626) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1626) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1626) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1626) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1626) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1626) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1626) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1626) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1626) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1626) CFA_SP SP+-2
        CFI (cfiCond1626) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1627 Using cfiCommon0
        CFI (cfiCond1627) NoFunction
        CFI (cfiCond1627) Conditional ??CrossCallReturnLabel_615
        CFI (cfiCond1627) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1627) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1627) CFA_SP SP+-5
        CFI Block cfiCond1628 Using cfiCommon0
        CFI (cfiCond1628) NoFunction
        CFI (cfiCond1628) Conditional ??CrossCallReturnLabel_616
        CFI (cfiCond1628) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1628) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1628) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1628) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1628) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1628) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1628) CFA_SP SP+0
        CFI (cfiCond1628) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1629 Using cfiCommon0
        CFI (cfiCond1629) NoFunction
        CFI (cfiCond1629) Conditional ??CrossCallReturnLabel_617
        CFI (cfiCond1629) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1629) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1629) CFA_SP SP+-5
        CFI (cfiCond1629) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1630 Using cfiCommon0
        CFI (cfiCond1630) NoFunction
        CFI (cfiCond1630) Conditional ??CrossCallReturnLabel_618
        CFI (cfiCond1630) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1630) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1630) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1630) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1630) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1630) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1630) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1630) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1630) CFA_SP SP+0
        CFI (cfiCond1630) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1631 Using cfiCommon0
        CFI (cfiCond1631) NoFunction
        CFI (cfiCond1631) Conditional ??CrossCallReturnLabel_619
        CFI (cfiCond1631) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1631) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1631) CFA_SP SP+-7
        CFI Block cfiCond1632 Using cfiCommon0
        CFI (cfiCond1632) NoFunction
        CFI (cfiCond1632) Conditional ??CrossCallReturnLabel_620
        CFI (cfiCond1632) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1632) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1632) CFA_SP SP+-7
        CFI Block cfiCond1633 Using cfiCommon0
        CFI (cfiCond1633) NoFunction
        CFI (cfiCond1633) Conditional ??CrossCallReturnLabel_621
        CFI (cfiCond1633) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1633) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1633) CFA_SP SP+-5
        CFI Block cfiCond1634 Using cfiCommon0
        CFI (cfiCond1634) NoFunction
        CFI (cfiCond1634) Conditional ??CrossCallReturnLabel_622
        CFI (cfiCond1634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1634) CFA_SP SP+-2
        CFI (cfiCond1634) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1635 Using cfiCommon0
        CFI (cfiCond1635) NoFunction
        CFI (cfiCond1635) Conditional ??CrossCallReturnLabel_623
        CFI (cfiCond1635) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1635) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1635) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1635) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1635) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1635) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1635) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1635) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1635) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1635) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1635) CFA_SP SP+-2
        CFI (cfiCond1635) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1636 Using cfiCommon0
        CFI (cfiCond1636) NoFunction
        CFI (cfiCond1636) Conditional ??CrossCallReturnLabel_624
        CFI (cfiCond1636) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1636) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1636) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1636) CFA_SP SP+0
        CFI (cfiCond1636) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1637 Using cfiCommon0
        CFI (cfiCond1637) NoFunction
        CFI (cfiCond1637) Conditional ??CrossCallReturnLabel_625
        CFI (cfiCond1637) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1637) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1637) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1637) CFA_SP SP+0
        CFI (cfiCond1637) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1638 Using cfiCommon0
        CFI (cfiCond1638) NoFunction
        CFI (cfiCond1638) Conditional ??CrossCallReturnLabel_626
        CFI (cfiCond1638) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1638) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1638) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1638) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1638) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1638) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1638) CFA_SP SP+-2
        CFI (cfiCond1638) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1639 Using cfiCommon0
        CFI (cfiCond1639) NoFunction
        CFI (cfiCond1639) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1639) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1639) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1639) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1639) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1639) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1639) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1639) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1639) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1639) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1639) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1639) CFA_SP SP+-2
        CFI (cfiCond1639) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1640 Using cfiCommon0
        CFI (cfiCond1640) NoFunction
        CFI (cfiCond1640) Conditional ??CrossCallReturnLabel_628
        CFI (cfiCond1640) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1640) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1640) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1640) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1640) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1640) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1640) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1640) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1640) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1640) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1640) CFA_SP SP+-2
        CFI (cfiCond1640) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1641 Using cfiCommon0
        CFI (cfiCond1641) NoFunction
        CFI (cfiCond1641) Conditional ??CrossCallReturnLabel_629
        CFI (cfiCond1641) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1641) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1641) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1641) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1641) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1641) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1641) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1641) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1641) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1641) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1641) CFA_SP SP+-2
        CFI (cfiCond1641) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1642 Using cfiCommon0
        CFI (cfiCond1642) NoFunction
        CFI (cfiCond1642) Conditional ??CrossCallReturnLabel_630
        CFI (cfiCond1642) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1642) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1642) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1642) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1642) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1642) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1642) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1642) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1642) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1642) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1642) CFA_SP SP+-2
        CFI (cfiCond1642) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1643 Using cfiCommon1
        CFI (cfiPicker1643) NoFunction
        CFI (cfiPicker1643) Picker
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_638:
        RET
        CFI EndBlock cfiCond1623
        CFI EndBlock cfiCond1624
        CFI EndBlock cfiCond1625
        CFI EndBlock cfiCond1626
        CFI EndBlock cfiCond1627
        CFI EndBlock cfiCond1628
        CFI EndBlock cfiCond1629
        CFI EndBlock cfiCond1630
        CFI EndBlock cfiCond1631
        CFI EndBlock cfiCond1632
        CFI EndBlock cfiCond1633
        CFI EndBlock cfiCond1634
        CFI EndBlock cfiCond1635
        CFI EndBlock cfiCond1636
        CFI EndBlock cfiCond1637
        CFI EndBlock cfiCond1638
        CFI EndBlock cfiCond1639
        CFI EndBlock cfiCond1640
        CFI EndBlock cfiCond1641
        CFI EndBlock cfiCond1642
        CFI EndBlock cfiPicker1643

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond1644 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1645 Using cfiCommon0
        CFI (cfiCond1645) NoFunction
        CFI (cfiCond1645) Conditional ??CrossCallReturnLabel_37
        CFI (cfiCond1645) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1645) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1645) CFA_SP SP+-5
        CFI (cfiCond1645) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1646 Using cfiCommon1
        CFI (cfiPicker1646) NoFunction
        CFI (cfiPicker1646) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1644
        CFI EndBlock cfiCond1645
        CFI EndBlock cfiPicker1646
// 2895 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2896 CJSON_PUBLIC(cJSON_bool) cJSON_IsInvalid(const cJSON * const item)
cJSON_IsInvalid:
        CFI Block cfiBlock1647 Using cfiCommon0
        CFI Function cJSON_IsInvalid
        CODE
// 2897 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2898     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsInvalid_0
// 2899     {
// 2900         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsInvalid_1
// 2901     }
// 2902 
// 2903     return (item->type & 0xFF) == cJSON_Invalid;
??cJSON_IsInvalid_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??cJSON_IsInvalid_2
        SETB    B.0
        SJMP    ??cJSON_IsInvalid_3
??cJSON_IsInvalid_2:
        CLR     B.0
??cJSON_IsInvalid_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsInvalid_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1647
// 2904 }
// 2905 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2906 CJSON_PUBLIC(cJSON_bool) cJSON_IsFalse(const cJSON * const item)
cJSON_IsFalse:
        CFI Block cfiBlock1648 Using cfiCommon0
        CFI Function cJSON_IsFalse
        CODE
// 2907 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2908     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsFalse_0
// 2909     {
// 2910         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsFalse_1
// 2911     }
// 2912 
// 2913     return (item->type & 0xFF) == cJSON_False;
??cJSON_IsFalse_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??cJSON_IsFalse_2
        SETB    B.0
        SJMP    ??cJSON_IsFalse_3
??cJSON_IsFalse_2:
        CLR     B.0
??cJSON_IsFalse_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsFalse_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1648
// 2914 }
// 2915 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2916 CJSON_PUBLIC(cJSON_bool) cJSON_IsTrue(const cJSON * const item)
cJSON_IsTrue:
        CFI Block cfiBlock1649 Using cfiCommon0
        CFI Function cJSON_IsTrue
        CODE
// 2917 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2918     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsTrue_0
// 2919     {
// 2920         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsTrue_1
// 2921     }
// 2922 
// 2923     return (item->type & 0xff) == cJSON_True;
??cJSON_IsTrue_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??cJSON_IsTrue_2
        SETB    B.0
        SJMP    ??cJSON_IsTrue_3
??cJSON_IsTrue_2:
        CLR     B.0
??cJSON_IsTrue_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsTrue_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1649
// 2924 }
// 2925 
// 2926 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2927 CJSON_PUBLIC(cJSON_bool) cJSON_IsBool(const cJSON * const item)
cJSON_IsBool:
        CFI Block cfiBlock1650 Using cfiCommon0
        CFI Function cJSON_IsBool
        CODE
// 2928 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2929     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsBool_0
// 2930     {
// 2931         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsBool_1
// 2932     }
// 2933 
// 2934     return (item->type & (cJSON_True | cJSON_False)) != 0;
??cJSON_IsBool_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x3
        JZ      ??cJSON_IsBool_2
        SETB    B.0
        SJMP    ??cJSON_IsBool_3
??cJSON_IsBool_2:
        CLR     B.0
??cJSON_IsBool_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsBool_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1650
// 2935 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2936 CJSON_PUBLIC(cJSON_bool) cJSON_IsNull(const cJSON * const item)
cJSON_IsNull:
        CFI Block cfiBlock1651 Using cfiCommon0
        CFI Function cJSON_IsNull
        CODE
// 2937 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2938     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsNull_0
// 2939     {
// 2940         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsNull_1
// 2941     }
// 2942 
// 2943     return (item->type & 0xFF) == cJSON_NULL;
??cJSON_IsNull_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x4
        JNZ     ??cJSON_IsNull_2
        SETB    B.0
        SJMP    ??cJSON_IsNull_3
??cJSON_IsNull_2:
        CLR     B.0
??cJSON_IsNull_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsNull_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1651
// 2944 }
// 2945 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2946 CJSON_PUBLIC(cJSON_bool) cJSON_IsNumber(const cJSON * const item)
cJSON_IsNumber:
        CFI Block cfiBlock1652 Using cfiCommon0
        CFI Function cJSON_IsNumber
        CODE
// 2947 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2948     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsNumber_0
// 2949     {
// 2950         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsNumber_1
// 2951     }
// 2952 
// 2953     return (item->type & 0xFF) == cJSON_Number;
??cJSON_IsNumber_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x8
        JNZ     ??cJSON_IsNumber_2
        SETB    B.0
        SJMP    ??cJSON_IsNumber_3
??cJSON_IsNumber_2:
        CLR     B.0
??cJSON_IsNumber_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
        CFI EndBlock cfiBlock1652
??cJSON_IsNumber_1:
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
// 2954 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiBlock1653 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R3,#0x0
        LJMP    ??Subroutine209_0 & 0xFFFF
        CFI EndBlock cfiBlock1653
// 2955 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2956 CJSON_PUBLIC(cJSON_bool) cJSON_IsString(const cJSON * const item)
cJSON_IsString:
        CFI Block cfiBlock1654 Using cfiCommon0
        CFI Function cJSON_IsString
        CODE
// 2957 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2958     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsString_0
// 2959     {
// 2960         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsString_1
// 2961     }
// 2962 
// 2963     return (item->type & 0xFF) == cJSON_String;
??cJSON_IsString_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x10
        JNZ     ??cJSON_IsString_2
        SETB    B.0
        SJMP    ??cJSON_IsString_3
??cJSON_IsString_2:
        CLR     B.0
??cJSON_IsString_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsString_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1654
// 2964 }
// 2965 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2966 CJSON_PUBLIC(cJSON_bool) cJSON_IsArray(const cJSON * const item)
cJSON_IsArray:
        CFI Block cfiBlock1655 Using cfiCommon0
        CFI Function cJSON_IsArray
        CODE
// 2967 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2968     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsArray_0
// 2969     {
// 2970         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsArray_1
// 2971     }
// 2972 
// 2973     return (item->type & 0xFF) == cJSON_Array;
??cJSON_IsArray_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x20
        JNZ     ??cJSON_IsArray_2
        SETB    B.0
        SJMP    ??cJSON_IsArray_3
??cJSON_IsArray_2:
        CLR     B.0
??cJSON_IsArray_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsArray_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1655
// 2974 }
// 2975 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2976 CJSON_PUBLIC(cJSON_bool) cJSON_IsObject(const cJSON * const item)
cJSON_IsObject:
        CFI Block cfiBlock1656 Using cfiCommon0
        CFI Function cJSON_IsObject
        CODE
// 2977 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2978     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsObject_0
// 2979     {
// 2980         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsObject_1
// 2981     }
// 2982 
// 2983     return (item->type & 0xFF) == cJSON_Object;
??cJSON_IsObject_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x40
        JNZ     ??cJSON_IsObject_2
        SETB    B.0
        SJMP    ??cJSON_IsObject_3
??cJSON_IsObject_2:
        CLR     B.0
??cJSON_IsObject_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsObject_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1656
// 2984 }
// 2985 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2986 CJSON_PUBLIC(cJSON_bool) cJSON_IsRaw(const cJSON * const item)
cJSON_IsRaw:
        CFI Block cfiBlock1657 Using cfiCommon0
        CFI Function cJSON_IsRaw
        CODE
// 2987 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2988     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsRaw_0
// 2989     {
// 2990         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsRaw_1
// 2991     }
// 2992 
// 2993     return (item->type & 0xFF) == cJSON_Raw;
??cJSON_IsRaw_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x80
        JNZ     ??cJSON_IsRaw_2
        SETB    B.0
        SJMP    ??cJSON_IsRaw_3
??cJSON_IsRaw_2:
        CLR     B.0
??cJSON_IsRaw_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsRaw_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1657
// 2994 }
// 2995 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2996 CJSON_PUBLIC(cJSON_bool) cJSON_Compare(const cJSON * const a, const cJSON * const b, const cJSON_bool case_sensitive)
cJSON_Compare:
        CFI Block cfiBlock1658 Using cfiCommon0
        CFI Function cJSON_Compare
        CODE
// 2997 {
        FUNCALL cJSON_Compare, compare_double
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine64 & 0xFFFF
// 2998     if ((a == NULL) || (b == NULL) || ((a->type & 0xFF) != (b->type & 0xFF)))
??CrossCallReturnLabel_99:
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??cJSON_Compare_0
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_Compare_0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JZ      ??cJSON_Compare_1
// 2999     {
// 3000         return false;
??cJSON_Compare_0:
        MOV     R2,#0x0
??cJSON_Compare_2:
        MOV     R3,#0x0
// 3001     }
        LJMP    ?Subroutine6 & 0xFFFF
// 3002 
// 3003     /* check if type is valid */
// 3004     switch (a->type & 0xFF)
??cJSON_Compare_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??cJSON_Compare_3
        DEC     A
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x2
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x4
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x8
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x10
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x20
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x40
        JNZ     ??cJSON_Compare_0
// 3005     {
// 3006         case cJSON_False:
// 3007         case cJSON_True:
// 3008         case cJSON_NULL:
// 3009         case cJSON_Number:
// 3010         case cJSON_String:
// 3011         case cJSON_Raw:
// 3012         case cJSON_Array:
// 3013         case cJSON_Object:
// 3014             break;
// 3015 
// 3016         default:
// 3017             return false;
// 3018     }
// 3019 
// 3020     /* identical objects are equal */
// 3021     if (a == b)
??cJSON_Compare_3:
        MOV     A,R6
        XRL     A,?V0 + 4
        JNZ     ??cJSON_Compare_4
        MOV     A,R7
        XRL     A,?V0 + 5
??cJSON_Compare_4:
        JNZ     ??cJSON_Compare_5
// 3022     {
// 3023         return true;
??cJSON_Compare_6:
        MOV     R2,#0x1
        SJMP    ??cJSON_Compare_2
// 3024     }
// 3025 
// 3026     switch (a->type & 0xFF)
??cJSON_Compare_5:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??cJSON_Compare_6
        DEC     A
        JZ      ??cJSON_Compare_6
        ADD     A,#-0x2
        JZ      ??cJSON_Compare_6
        ADD     A,#-0x4
        JZ      ??cJSON_Compare_7
        ADD     A,#-0x8
        JZ      ??cJSON_Compare_8
        ADD     A,#-0x10
        JZ      ??cJSON_Compare_9
        ADD     A,#-0x20
        JNZ     $+5
        LJMP    ??cJSON_Compare_10 & 0xFFFF
        ADD     A,#-0x40
        JZ      ??cJSON_Compare_8
        SJMP    ??cJSON_Compare_0
// 3027     {
// 3028         /* in these cases and equal type is enough */
// 3029         case cJSON_False:
// 3030         case cJSON_True:
// 3031         case cJSON_NULL:
// 3032             return true;
// 3033 
// 3034         case cJSON_Number:
// 3035             if (compare_double(a->valuedouble, b->valuedouble))
??cJSON_Compare_7:
        ; Setup parameters for call to function compare_double
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_147:
        LCALL   ?XLOAD_R2345
        LCALL   ??compare_double?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_Compare_6
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3036             {
// 3037                 return true;
// 3038             }
// 3039             return false;
// 3040 
// 3041         case cJSON_String:
// 3042         case cJSON_Raw:
// 3043             if ((a->valuestring == NULL) || (b->valuestring == NULL))
??cJSON_Compare_8:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_501:
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_502:
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3044             {
// 3045                 return false;
// 3046             }
// 3047             if (strcmp(a->valuestring, b->valuestring) == 0)
        ; Setup parameters for call to function strcmp
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_547:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_418:
        LCALL   ??strcmp?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
        LJMP    ??cJSON_Compare_6 & 0xFFFF
// 3048             {
// 3049                 return true;
// 3050             }
// 3051 
// 3052             return false;
// 3053 
// 3054         case cJSON_Array:
// 3055         {
// 3056             cJSON *a_element = a->child;
??cJSON_Compare_9:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine39 & 0xFFFF
// 3057             cJSON *b_element = b->child;
??CrossCallReturnLabel_57:
        SJMP    ??cJSON_Compare_11
// 3058 
// 3059             for (; (a_element != NULL) && (b_element != NULL);)
??cJSON_Compare_12:
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3060             {
// 3061                 if (!cJSON_Compare(a_element, b_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3062                 {
// 3063                     return false;
// 3064                 }
// 3065 
// 3066                 a_element = a_element->next;
        LCALL   ?Subroutine63 & 0xFFFF
// 3067                 b_element = b_element->next;
??CrossCallReturnLabel_533:
        MOV     DPL,R6
        MOV     DPH,R7
??cJSON_Compare_11:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
// 3068             }
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_Compare_12
// 3069 
// 3070             /* one of the arrays is longer than the other */
// 3071             if (a_element != b_element) {
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Compare_6 & 0xFFFF
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3072                 return false;
// 3073             }
// 3074 
// 3075             return true;
// 3076         }
// 3077 
// 3078         case cJSON_Object:
// 3079         {
// 3080             cJSON *a_element = NULL;
// 3081             cJSON *b_element = NULL;
// 3082             cJSON_ArrayForEach(a_element, a)
??cJSON_Compare_10:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??cJSON_Compare_13
// 3083             {
// 3084                 /* TODO This has O(n^2) runtime, which is horrible! */
// 3085                 b_element = get_object_item(b, a_element->string, case_sensitive);
??cJSON_Compare_14:
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 2
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_642:
        MOV     A,?V0 + 3
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_655:
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 3086                 if (b_element == NULL)
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3087                 {
// 3088                     return false;
// 3089                 }
// 3090 
// 3091                 if (!cJSON_Compare(a_element, b_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3092                 {
// 3093                     return false;
// 3094                 }
// 3095             }
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
??cJSON_Compare_13:
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_Compare_14
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
??cJSON_Compare_15:
        LCALL   ?Subroutine62 & 0xFFFF
// 3096 
// 3097             /* doing this twice, once on a and b to prevent true comparison if a subset of b
// 3098              * TODO: Do this the proper way, this is just a fix for now */
// 3099             cJSON_ArrayForEach(b_element, b)
??CrossCallReturnLabel_96:
        JNZ     $+5
        LJMP    ??cJSON_Compare_6 & 0xFFFF
// 3100             {
// 3101                 a_element = get_object_item(a, b_element->string, case_sensitive);
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_364:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_544:
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 3102                 if (a_element == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3103                 {
// 3104                     return false;
// 3105                 }
// 3106 
// 3107                 if (!cJSON_Compare(b_element, a_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3108                 {
// 3109                     return false;
// 3110                 }
// 3111             }
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        SJMP    ??cJSON_Compare_15
        CFI EndBlock cfiBlock1658
// 3112 
// 3113             return true;
// 3114         }
// 3115 
// 3116         default:
// 3117             return false;
// 3118     }
// 3119 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
        CFI Block cfiCond1659 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_643
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1660 Using cfiCommon0
        CFI (cfiCond1660) NoFunction
        CFI (cfiCond1660) Conditional ??CrossCallReturnLabel_644
        CFI (cfiCond1660) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1660) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1660) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1660) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1660) CFA_SP SP+0
        CFI (cfiCond1660) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1661 Using cfiCommon0
        CFI (cfiCond1661) NoFunction
        CFI (cfiCond1661) Conditional ??CrossCallReturnLabel_645
        CFI (cfiCond1661) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1661) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1661) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1661) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1661) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1661) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1661) CFA_SP SP+0
        CFI (cfiCond1661) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1662 Using cfiCommon1
        CFI (cfiPicker1662) NoFunction
        CFI (cfiPicker1662) Picker
        MOV     A,R6
        CFI EndBlock cfiCond1659
        CFI EndBlock cfiCond1660
        CFI EndBlock cfiCond1661
        CFI EndBlock cfiPicker1662
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine231_0:
        CFI Block cfiCond1663 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_639
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1664 Using cfiCommon0
        CFI (cfiCond1664) NoFunction
        CFI (cfiCond1664) Conditional ??CrossCallReturnLabel_640
        CFI (cfiCond1664) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1664) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1664) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1664) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1664) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1664) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1664) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1664) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1664) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1664) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1664) CFA_SP SP+0
        CFI (cfiCond1664) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1665 Using cfiCommon0
        CFI (cfiCond1665) NoFunction
        CFI (cfiCond1665) Conditional ??CrossCallReturnLabel_641
        CFI (cfiCond1665) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1665) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1665) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1665) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1665) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1665) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1665) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1665) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1665) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1665) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1665) CFA_SP SP+0
        CFI (cfiCond1665) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1666 Using cfiCommon0
        CFI (cfiCond1666) NoFunction
        CFI (cfiCond1666) Conditional ??CrossCallReturnLabel_642
        CFI (cfiCond1666) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1666) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1666) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1666) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1666) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1666) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1666) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1666) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1666) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1666) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1666) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1666) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1666) CFA_SP SP+0
        CFI (cfiCond1666) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1667 Using cfiCommon0
        CFI (cfiCond1667) NoFunction
        CFI (cfiCond1667) Conditional ??CrossCallReturnLabel_643
        CFI (cfiCond1667) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1667) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1667) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1667) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1667) CFA_SP SP+0
        CFI (cfiCond1667) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1668 Using cfiCommon0
        CFI (cfiCond1668) NoFunction
        CFI (cfiCond1668) Conditional ??CrossCallReturnLabel_644
        CFI (cfiCond1668) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1668) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1668) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1668) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1668) CFA_SP SP+0
        CFI (cfiCond1668) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1669 Using cfiCommon0
        CFI (cfiCond1669) NoFunction
        CFI (cfiCond1669) Conditional ??CrossCallReturnLabel_645
        CFI (cfiCond1669) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1669) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1669) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1669) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1669) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1669) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1669) CFA_SP SP+0
        CFI (cfiCond1669) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1670 Using cfiCommon1
        CFI (cfiPicker1670) NoFunction
        CFI (cfiPicker1670) Picker
        ADD     A,#0x10
        MOV     DPL,A
        RET
        CFI EndBlock cfiCond1663
        CFI EndBlock cfiCond1664
        CFI EndBlock cfiCond1665
        CFI EndBlock cfiCond1666
        CFI EndBlock cfiCond1667
        CFI EndBlock cfiCond1668
        CFI EndBlock cfiCond1669
        CFI EndBlock cfiPicker1670

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
        CFI Block cfiCond1671 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_95
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1672 Using cfiCommon0
        CFI (cfiCond1672) NoFunction
        CFI (cfiCond1672) Conditional ??CrossCallReturnLabel_96
        CFI (cfiCond1672) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1672) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1672) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1672) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1672) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1672) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1672) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1672) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1672) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1672) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1672) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1672) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1672) CFA_SP SP+0
        CFI (cfiCond1672) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1673 Using cfiCommon1
        CFI (cfiPicker1673) NoFunction
        CFI (cfiPicker1673) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_538:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond1671
        CFI EndBlock cfiCond1672
        CFI EndBlock cfiPicker1673

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
        CFI Block cfiCond1674 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_56
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1675 Using cfiCommon0
        CFI (cfiCond1675) NoFunction
        CFI (cfiCond1675) Conditional ??CrossCallReturnLabel_57
        CFI (cfiCond1675) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1675) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1675) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1675) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1675) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1675) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1675) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1675) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1675) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1675) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1675) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1675) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1675) CFA_SP SP+0
        CFI (cfiCond1675) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1676 Using cfiCommon1
        CFI (cfiPicker1676) NoFunction
        CFI (cfiPicker1676) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_535:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1674
        CFI EndBlock cfiCond1675
        CFI EndBlock cfiPicker1676

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond1677 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_656
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1678 Using cfiCommon0
        CFI (cfiCond1678) NoFunction
        CFI (cfiCond1678) Conditional ??CrossCallReturnLabel_657
        CFI (cfiCond1678) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1678) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1678) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1678) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1678) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1678) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1678) CFA_SP SP+0
        CFI (cfiCond1678) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1679 Using cfiCommon1
        CFI (cfiPicker1679) NoFunction
        CFI (cfiPicker1679) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond1677
        CFI EndBlock cfiCond1678
        CFI EndBlock cfiPicker1679
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine232_0:
        CFI Block cfiCond1680 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_655
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1681 Using cfiCommon0
        CFI (cfiCond1681) NoFunction
        CFI (cfiCond1681) Conditional ??CrossCallReturnLabel_656
        CFI (cfiCond1681) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1681) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1681) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1681) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1681) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1681) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1681) CFA_SP SP+0
        CFI (cfiCond1681) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1682 Using cfiCommon0
        CFI (cfiCond1682) NoFunction
        CFI (cfiCond1682) Conditional ??CrossCallReturnLabel_657
        CFI (cfiCond1682) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1682) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1682) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1682) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1682) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1682) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1682) CFA_SP SP+0
        CFI (cfiCond1682) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1683 Using cfiCommon1
        CFI (cfiPicker1683) NoFunction
        CFI (cfiPicker1683) Picker
        LCALL   ??Subroutine178_0 & 0xFFFF
        CFI EndBlock cfiCond1680
        CFI EndBlock cfiCond1681
        CFI EndBlock cfiCond1682
        CFI EndBlock cfiPicker1683
??CrossCallReturnLabel_653:
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine233_0:
        CFI Block cfiCond1684 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_654
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1685 Using cfiCommon0
        CFI (cfiCond1685) NoFunction
        CFI (cfiCond1685) Conditional ??CrossCallReturnLabel_655
        CFI (cfiCond1685) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1685) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1685) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1685) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1685) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1685) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1685) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1685) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1685) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1685) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1685) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1685) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1685) CFA_SP SP+0
        CFI (cfiCond1685) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1686 Using cfiCommon0
        CFI (cfiCond1686) NoFunction
        CFI (cfiCond1686) Conditional ??CrossCallReturnLabel_656
        CFI (cfiCond1686) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1686) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1686) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1686) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1686) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1686) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1686) CFA_SP SP+0
        CFI (cfiCond1686) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1687 Using cfiCommon0
        CFI (cfiCond1687) NoFunction
        CFI (cfiCond1687) Conditional ??CrossCallReturnLabel_657
        CFI (cfiCond1687) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1687) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1687) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1687) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1687) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1687) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1687) CFA_SP SP+0
        CFI (cfiCond1687) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1688 Using cfiCommon1
        CFI (cfiPicker1688) NoFunction
        CFI (cfiPicker1688) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1684
        CFI EndBlock cfiCond1685
        CFI EndBlock cfiCond1686
        CFI EndBlock cfiCond1687
        CFI EndBlock cfiPicker1688
// 3120 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3121 CJSON_PUBLIC(void *) cJSON_malloc(size_t size)
cJSON_malloc:
        CFI Block cfiBlock1689 Using cfiCommon0
        CFI Function cJSON_malloc
        CODE
// 3122 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3123     return global_hooks.allocate(size);
        ; Setup parameters for indirect call
        MOV     DPTR,#global_hooks
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock1689
// 3124 }
// 3125 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3126 CJSON_PUBLIC(void) cJSON_free(void *object)
cJSON_free:
        CFI Block cfiBlock1690 Using cfiCommon0
        CFI Function cJSON_free
        CODE
// 3127 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3128     global_hooks.deallocate(object);
        ; Setup parameters for indirect call
        MOV     DPTR,#global_hooks + 2
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock1690
// 3129 }

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for global_hooks>`:
        DATA16
        DW ??osal_mem_alloc?relay
        DW ??osal_mem_free?relay
        DW ??osal_mem_realloc?relay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetErrorPtr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetErrorPtr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetStringValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetStringValue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetNumberValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetNumberValue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Version?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Version

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??case_insensitive_strcmp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    case_insensitive_strcmp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osal_mem_realloc?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osal_mem_realloc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_strdup?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_strdup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_InitHooks?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_InitHooks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_New_Item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_New_Item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Delete?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Delete

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_number?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_number

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_SetNumberHelper?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_SetNumberHelper

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_SetValuestring?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_SetValuestring

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ensure?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ensure

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??update_offset?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    update_offset

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??compare_double?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    compare_double

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_number?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_number

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_hex4?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_hex4

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??utf16_literal_to_utf8?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    utf16_literal_to_utf8

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_string?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_string

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_string_ptr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_string_ptr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??buffer_skip_whitespace?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    buffer_skip_whitespace

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithOpts?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithOpts

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithLengthOpts?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithLengthOpts

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Parse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Parse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithLength?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithLength

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Print?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Print

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintUnformatted?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintUnformatted

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintBuffered?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintBuffered

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintPreallocated?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintPreallocated

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_value?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_value

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_value?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_value

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetArraySize?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetArraySize

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_array_item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_array_item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetArrayItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetArrayItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_object_item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_object_item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetObjectItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetObjectItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetObjectItemCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetObjectItemCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_HasObjectItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_HasObjectItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??suffix_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    suffix_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??create_reference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    create_reference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??add_item_to_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    add_item_to_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??add_item_to_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    add_item_to_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToObjectCS?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToObjectCS

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemReferenceToArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemReferenceToArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemReferenceToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemReferenceToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddNullToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddNullToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddTrueToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddTrueToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddFalseToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddFalseToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddBoolToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddBoolToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddNumberToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddNumberToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddStringToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddStringToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddRawToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddRawToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddObjectToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddObjectToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddArrayToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddArrayToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemViaPointer?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemViaPointer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_InsertItemInArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_InsertItemInArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemViaPointer?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemViaPointer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??replace_item_in_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    replace_item_in_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateNull?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateNull

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateTrue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateTrue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateFalse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateFalse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateBool?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateBool

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateNumber?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateNumber

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateString?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateStringReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateStringReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateObjectReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateObjectReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateArrayReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateArrayReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateRaw?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateRaw

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateIntArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateIntArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateFloatArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateFloatArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateDoubleArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateDoubleArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateStringArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateStringArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Duplicate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Duplicate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??minify_string?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    minify_string

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Minify?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Minify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsInvalid?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsInvalid

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsFalse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsFalse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsTrue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsTrue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsBool?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsBool

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsNull?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsNull

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsNumber?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsNumber

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsString?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsRaw?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsRaw

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Compare?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Compare

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_malloc?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_malloc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_free?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_free

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%i.%i.%i">`:
        DB "%i.%i.%i"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "null">`:
        DB "null"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%d">`:
        DB "%d"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%1.15g">`:
        DB "%1.15g"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "%lg">`:
        DB "%lg"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%1.17g">`:
        DB "%1.17g"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\"\\"">`:
        DB "\"\""

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "u%04x">`:
        DB "u%04x"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "\\357\\273\\277">`:
        DB "\357\273\277"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char const *)0, 0, 0, 0,`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "false">`:
        DB "false"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "true">`:
        DB "true"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_46fffe00:
        DD 46FFFE00H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c6fffffe:
        DD 0C6FFFFFEH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_34000000:
        DD 34000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_10000:
        DD 65536

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_80:
        DD 128

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_800:
        DD 2048

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_110000:
        DD 1114112

        END
// 
// 14 312 bytes in segment BANKED_CODE
//    642 bytes in segment BANK_RELAYS
//      6 bytes in segment XDATA_I
//      6 bytes in segment XDATA_ID
//    167 bytes in segment XDATA_ROM_C
//     19 bytes in segment XDATA_Z
// 
// 14 960 bytes of CODE  memory
//    135 bytes of CONST memory (+ 32 bytes shared)
//     25 bytes of XDATA memory
//
//Errors: none
//Warnings: 1
